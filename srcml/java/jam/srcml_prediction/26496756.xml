<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/40582996.java">  <function><type><specifier>public</specifier> <name>void</name></type> <name>testParse</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>String</name></type> <name>scopes</name> <init>= <expr><literal type="string">"scope"</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"scope"</literal></expr></argument>, <argument><expr><call><name><name>ScopeParser</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><name>scopes</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>scopes</name> <operator>=</operator> <literal type="string">"scope1, scope2"</literal></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"scope1"</literal></expr></argument>, <argument><expr><call><name><name>ScopeParser</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><name>scopes</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><name>super</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><literal type="string">"scope2"</literal></expr></argument>, <argument><expr><call><name><name>ScopeParser</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><name>scopes</name></expr></argument>)</argument_list></call><index>[<expr><literal type="number">1</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
</unit>
