<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/38262983.java">    <function><type><specifier>public</specifier> <name>void</name></type> <name>updateScanner</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>p0</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>p1</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <try>try <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><name>lexerValid</name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>lexer</name><operator>.</operator><name>setRange</name></name><argument_list>(<argument><expr><call><name><name>lexer</name><operator>.</operator><name>getScannerStart</name></name><argument_list>(<argument><expr><name>p0</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>p1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
          <expr_stmt><expr><name>lexerValid</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <while>while <condition>(<expr><call><name><name>lexer</name><operator>.</operator><name>getScanPosition</name></name><argument_list>()</argument_list></call> <operator>&lt;=</operator> <name>p0</name></expr>)</condition> <block>{<block_content>
          <expr_stmt><expr><call><name><name>lexer</name><operator>.</operator><name>scan</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></while>
      </block_content>}</block>
      <catch>catch <parameter_list>(<parameter><decl><type><name>Throwable</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></catch></try>
    </block_content>}</block></function>
</unit>
