<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/43392783.java">    <function><type><specifier>public</specifier> <name>void</name></type> <name>close</name><parameter_list>()</parameter_list> <block>{<block_content>
        <try>try <block>{<block_content>
            
            <if_stmt><if>if<condition>(<expr><name><name>this</name><operator>.</operator><name>is</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block>{<block_content> <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>is</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
            <if_stmt><if>if<condition>(<expr><name><name>this</name><operator>.</operator><name>os</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block>{<block_content> <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>os</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
            
            <if_stmt><if>if<condition>(<expr><name><name>this</name><operator>.</operator><name>conn</name></name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>conn</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>

        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><call><name><name>ex</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>ex</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>
</unit>
