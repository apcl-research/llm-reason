<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/50602783.java">    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>isAdvancedReferee</name><parameter_list>()</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>Hullfunc</name></type> <name>hullfunc</name><init>=<expr><call><name><name>game</name><operator>.</operator><name>getHullfunc</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>Vector</name></type> <name>climbvec</name><init>=<expr><operator>(</operator><name>Vector</name><operator>)</operator><call><name><name>hullfunc</name><operator>.</operator><name>getFunctionVector</name></name><argument_list>(<argument><expr><name>funcadvancedreferee</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><call><name><name>climbvec</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&gt;=</operator><literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>--</operator></expr></incr>)</control> <block>{<block_content>
	    <if_stmt><if>if <condition>(<expr><operator>(</operator><operator>(</operator><name><name>Hullfunc</name><operator>.</operator><name>Allowed</name></name><operator>)</operator><call><name><name>climbvec</name><operator>.</operator><name>elementAt</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call><operator>)</operator><operator>.</operator><name>hull</name><operator>==</operator><name>id</name></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="boolean">true</literal></expr>;</return></block_content></block></if></if_stmt>
	</block_content>}</block></for>
	<return>return <expr><literal type="boolean">false</literal></expr>;</return>
    </block_content>}</block></function>
</unit>
