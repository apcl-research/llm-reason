<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/13489983.java">	<function><type><specifier>public</specifier> <name>LocalVariable</name></type> <name>newLocal</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>isWide</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<if_stmt><if>if <condition>(<expr><name><name>this</name><operator>.</operator><name>isDeleted</name></name></expr>)</condition> <block>{<block_content>
			<decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>s</name> <init>= <expr><literal type="string">"Cannot change a field once it has been marked "</literal>
					<operator>+</operator> <literal type="string">"for deletion"</literal></expr></init></decl>;</decl_stmt>
			<throw>throw <expr><operator>new</operator> <call><name>IllegalStateException</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>

		<decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>index</name> <init>= <expr><name>maxLocals</name></expr></init></decl>;</decl_stmt>

		<expr_stmt><expr><name>maxLocals</name> <operator>+=</operator> <operator>(</operator><ternary><condition><expr><name>isWide</name></expr> ?</condition><then> <expr><literal type="number">2</literal></expr> </then><else>: <expr><literal type="number">1</literal></expr></else></ternary><operator>)</operator></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>setDirty</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><specifier>final</specifier> <name>LocalVariable</name></type> <name>local</name> <init>= <expr><operator>new</operator> <call><name>LocalVariable</name><argument_list>(<argument><expr><name>index</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<expr_stmt><expr><call><name><name>locals</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Integer</name><argument_list>(<argument><expr><name>index</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>local</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<return>return <expr><operator>(</operator><name>local</name><operator>)</operator></expr>;</return>
	</block_content>}</block></function>
</unit>
