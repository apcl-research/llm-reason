<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/31478981.java">    <function><type><specifier>protected</specifier> <name>void</name></type> <name>enableCostConstraintButton</name><parameter_list>(<parameter><decl><type><name>ConformanceConstraint</name></type> <name>c</name></decl></parameter>)</parameter_list> <block>{<block_content>

	<decl_stmt><decl><type><name>int</name></type> <name>cNum</name> <init>= <expr><call><name><name>c</name><operator>.</operator><name>getNumberOfCosts</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>boolean</name></type> <name>toBeEnabled</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>

	<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><operator>!</operator><name>toBeEnabled</name> <operator>&amp;&amp;</operator> <operator>(</operator><name>i</name> <operator>&lt;</operator> <name>cNum</name><operator>)</operator></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
	    <if_stmt><if>if <condition>(<expr><call><name><name>c</name><operator>.</operator><name>getCostFunctionReference</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>toBeEnabled</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
	    </block_content>}</block></if></if_stmt>
	</block_content>}</block></for>
	<expr_stmt><expr><operator>(</operator><operator>(</operator><name>NodeGraphics</name><operator>)</operator> <name><name>c</name><operator>.</operator><name>graphObject</name></name><operator>)</operator><operator>.</operator><call><name><name>activator</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><name>toBeEnabled</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></function>
</unit>
