<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/13570029.java">	<function><type><specifier>public</specifier> <name>Double</name></type> <name>doTotal</name><parameter_list>()</parameter_list><block>{<block_content>
			<decl_stmt><decl><type><name>double</name></type> <name>retVal</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name>Iterator</name></type> <name>iter</name> <init>= <expr><call><name><name>MainSettings</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getDrawingPanel</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getRouteList</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getListIterator</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		
			<decl_stmt><decl><type><name>RouteMark</name></type> <name>first</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
			<if_stmt><if>if <condition>(<expr><call><name><name>iter</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition><block>{<block_content>
				<expr_stmt><expr><name>first</name> <operator>=</operator> <operator>(</operator><name>RouteMark</name><operator>)</operator><call><name><name>iter</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>	
			</block_content>}</block></if></if_stmt>
			<while>while <condition>(<expr><call><name><name>iter</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition><block>{<block_content>
				<decl_stmt><decl><type><name>RouteMark</name></type> <name>mark</name> <init>= <expr><operator>(</operator><name>RouteMark</name><operator>)</operator><call><name><name>iter</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name>retVal</name> <operator>+=</operator> <call><name><name>CalcUtils</name><operator>.</operator><name>calcDistance</name></name><argument_list>(<argument><expr><name>first</name></expr></argument>,<argument><expr><name>mark</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name>first</name> <operator>=</operator> <name>mark</name></expr>;</expr_stmt>
			</block_content>}</block></while>
			<return>return <expr><operator>new</operator> <call><name>Double</name><argument_list>(<argument><expr><name>retVal</name></expr></argument>)</argument_list></call></expr>;</return>
		</block_content>}</block></function>
</unit>
