<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/17880062.java">	<function><type><specifier>private</specifier> <name>void</name></type> <name>testIsSnapshot</name><parameter_list>(<parameter><decl><type><name>ISnapshotable</name></type> <name>mutable</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<decl_stmt><decl><type><specifier>final</specifier> <name>ISnapshotable</name></type> <name>snapshot</name> <init>= <expr><call><name><name>mutable</name><operator>.</operator><name>getSnapshot</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier>final</specifier> <name>ISnapshotable</name></type> <name>mutable2</name> <init>= <expr><call><name><name>snapshot</name><operator>.</operator><name>getMutableCopy</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><literal type="string">"Mutable should not be a snapshot"</literal></expr></argument>, <argument><expr><call><name><name>mutable</name><operator>.</operator><name>isSnapshot</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><literal type="string">"Snapshot should be a snapshot"</literal></expr></argument>, <argument><expr><call><name><name>snapshot</name><operator>.</operator><name>isSnapshot</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><literal type="string">"Mutable should not be a snapshot"</literal></expr></argument>, <argument><expr><call><name><name>mutable2</name><operator>.</operator><name>isSnapshot</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
</unit>
