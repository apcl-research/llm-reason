<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/29565583.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>createAll</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>String</name></type> <name>className</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>Tech</name></type> <name>tech</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<expr_stmt><expr><call><name><name>MainWizard</name><operator>.</operator><name>getIO</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getOutput</name><argument_list>()</argument_list></call><operator>.</operator><call><name>println</name><argument_list>(<argument><expr><literal type="string">"Generating "</literal> <operator>+</operator> <name>fileType</name> <operator>+</operator> <literal type="string">" file..."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>classes</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
		<if_stmt><if>if <condition>(<expr><call><name><name>className</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><literal type="string">"*"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
			<comment type="line">// Gets all the classes contained in the package "domain" !!</comment>
			<expr_stmt><expr><name>classes</name> <operator>=</operator> <call><name><name>extractor</name><operator>.</operator><name>getClasses</name></name><argument_list>(<argument><expr><name>pckgName</name> <operator>+</operator> <literal type="string">".domain"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else>else <block>{<block_content>
			<expr_stmt><expr><name>classes</name> <operator>=</operator> <operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>classes</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>className</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>
		<expr_stmt><expr><call><name>processPOJOs</name><argument_list>(<argument><expr><name>classes</name></expr></argument>, <argument><expr><name>tech</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
</unit>
