<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/44259996.java">	<function><type><specifier>public</specifier> <name>Class</name></type> <name>getPersistentType</name><parameter_list>()</parameter_list> <block>{<block_content>
		<if_stmt><if>if <condition>(<expr><call><name><name>this</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
			<throw>throw <expr><operator>new</operator> <call><name>JCartException</name><argument_list>(<argument><expr><literal type="string">"type was not defined"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<switch>switch <condition>(<expr><call><name><name>this</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getKey</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
						<case>case <expr><name><name>AttributeType</name><operator>.</operator><name>KEY_STRING</name></name></expr>:</case>
							<return>return <expr><name><name>StringValue</name><operator>.</operator><name>class</name></name></expr>;</return>
						<case>case <expr><name><name>AttributeType</name><operator>.</operator><name>KEY_TEXT</name></name></expr>:</case>
							<return>return <expr><name><name>TextValue</name><operator>.</operator><name>class</name></name></expr>;</return>
						<comment type="line">// DONE: throw exception in case we can't find the correct type;</comment>
						<default>default:</default>
							<throw>throw <expr><operator>new</operator> <call><name>JCartException</name><argument_list>(<argument><expr><literal type="string">"Persistent type not defined for type: "</literal> <operator>+</operator> <call><name><name>this</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></switch>
	</block_content>}</block></function>
</unit>
