<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/44262783.java">    <function><type><specifier>public</specifier> <name>String</name></type> <name>toString</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>s</name> <init>= <expr><literal type="string">""</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><name>s</name> <operator>+=</operator> <literal type="string">"Name: "</literal> <operator>+</operator> <name>name</name> <operator>+</operator> <literal type="string">"\n"</literal></expr>;</expr_stmt>
        <expr_stmt><expr><name>s</name> <operator>+=</operator> <literal type="string">"Number of folds: "</literal> <operator>+</operator> <call><name><name>neurons</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"\n"</literal></expr>;</expr_stmt>

        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>neurons</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>Neuron</name></type> <name>n</name> <init>= <expr><operator>(</operator><name>Neuron</name><operator>)</operator> <call><name><name>neurons</name><operator>.</operator><name>elementAt</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><name>s</name> <operator>+=</operator> <call><name><name>n</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"\n"</literal></expr>;</expr_stmt>
        </block_content>}</block></for>

        <return>return <expr><name>s</name></expr>;</return>
    </block_content>}</block></function>
</unit>
