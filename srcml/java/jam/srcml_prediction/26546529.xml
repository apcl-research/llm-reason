<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/46481529.java">	<function><type><specifier>private</specifier> <name>Node</name></type> <name>compositeRelativePath</name><parameter_list>(<parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Node</name></argument>&gt;</argument_list></name></type> <name>children</name></decl></parameter>, <parameter><decl><type><name>Object</name></type> <name>data</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<if_stmt><if>if<condition>(<expr><call><name><name>children</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
			<decl_stmt><decl><type><name>Node</name></type> <name>child0</name> <init>= <expr><operator>(</operator><name>Node</name><operator>)</operator><call><name><name>children</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>accept</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name>Node</name></type> <name>child1</name> <init>= <expr><call><name><name>children</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<return>return <expr><call><name>createCompositePath</name><argument_list>(<argument><expr><name>child0</name></expr></argument>, <argument><expr><call><name>compositeRelativePath</name><argument_list>(<argument><expr><name>children</name></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>child1</name></expr></argument>)</argument_list></call></expr>;</return>
		</block_content>}</block></if>
		<else>else <block>{<block_content>
			<return>return <expr><operator>(</operator><name>Node</name><operator>)</operator><call><name><name>children</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>accept</name><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>data</name></expr></argument>)</argument_list></call></expr>;</return>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></function>
</unit>
