<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/44452783.java">    <function><type><specifier>public</specifier> <name>RdfGraph</name></type> <name>executeGraphQuery</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>query</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>RdfStoreException</name></expr></argument></throws> <block>{<block_content>
        <comment type="line">//TODO: Wrap a CloseableIterator, not a List</comment>
        <try>try <block>{<block_content>
            <decl_stmt><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>Statement</name></argument>&gt;</argument_list></name></type> <name>statements</name> <init>= <expr><call><name><name>repository</name><operator>.</operator><name>evaluateGraphQuery</name></name><argument_list>(
                    <argument><expr><name><name>QueryLanguage</name><operator>.</operator><name>SPARQL</name></name></expr></argument>, <argument><expr><name>query</name></expr></argument>, <argument><expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>Statement</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return>return <expr><operator>new</operator> <call><name>RdfGraphAdapter</name><argument_list>(<argument><expr><name>statements</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>MalformedQueryException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>QueryException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>
</unit>
