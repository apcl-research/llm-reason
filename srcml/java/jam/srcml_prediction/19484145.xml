<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/24189996.java">	<function><type><specifier>public</specifier> <name>boolean</name></type> <name>isComplete</name><parameter_list>(<parameter><decl><type><name><name>Stack</name><argument_list type="generic">&lt;<argument><name>MachineValuationPair</name></argument>&gt;</argument_list></name></type> <name>valuation</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<decl_stmt><decl><type><name>MachineValuationPair</name></type> <name>val</name> <init>= <expr><call><name><name>valuation</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>index</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<assert>assert <expr><name><name>val</name><operator>.</operator><name>machine</name></name> <operator>==</operator> <name>this</name></expr>;</assert>
		
		<for>for <control>(<init><decl><type><name><name>GlobalVariable</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>var</name> <range>: <expr><call><name><name>variables</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
			<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>val</name><operator>.</operator><name>valuation</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><call><name><name>var</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
		</block_content>}</block></for>
		<if_stmt><if>if <condition>(<expr><call><name>getAbstraction</name><argument_list>()</argument_list></call><operator>!=</operator><literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><call><name>getAbstraction</name><argument_list>()</argument_list></call><operator>.</operator><call><name>isComplete</name><argument_list>(<argument><expr><name>valuation</name></expr></argument>, <argument><expr><name>index</name><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
		<return>return <expr><literal type="boolean">true</literal></expr>;</return>
	</block_content>}</block></function>
</unit>
