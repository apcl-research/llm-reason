<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/24552983.java">	<function><type><specifier>private</specifier> <name>void</name></type> <name>updateFontHelper</name><parameter_list>()</parameter_list> <block>{<block_content>
		<try>try <block>{<block_content>
			<comment type="line">// get rid of the old font</comment>
			<decl_stmt><decl><type><name>Font</name></type> <name>font</name> <init>= <expr><call><name>getNameLabel</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getFont</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name>font</name><operator>.</operator><name>dispose</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
			
			<decl_stmt><decl><type><name>boolean</name></type> <name>italic</name> <init>= <expr><call><name>model</name><argument_list>()</argument_list></call><operator>.</operator><call><name>isAbstract</name><argument_list>()</argument_list></call> <operator>||</operator> <call><name>model</name><argument_list>()</argument_list></call><operator>.</operator><call><name>isInterface</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<comment type="line">// create the new font</comment>
			<expr_stmt><expr><call><name>getNameLabel</name><argument_list>()</argument_list></call><operator>.</operator><call><name>setFont</name><argument_list>(<argument><expr><call><name><name>PlugIn</name><operator>.</operator><name>getFontPreference</name></name><argument_list>(<argument><expr><name>P_FONT</name></expr></argument>, <argument><expr><name>italic</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>JavaModelException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
			<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>
</unit>
