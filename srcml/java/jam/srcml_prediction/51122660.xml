<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/14042529.java">   <function><type><specifier>public</specifier> <name>Vector</name></type> <name>getKey</name><parameter_list>()</parameter_list> <block>{<block_content>
      <decl_stmt><decl><type><name>Vector</name></type> <name>v</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

      <if_stmt><if>if <condition>(<expr><operator>(</operator><operator>(</operator><name>v</name> <operator>==</operator> <literal type="null">null</literal><operator>)</operator> <operator>||</operator> <call><name><name>v</name><operator>.</operator><name>isEmpty</name></name><argument_list>()</argument_list></call><operator>)</operator> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>Util</name><operator>.</operator><name>isNull</name></name><argument_list>(<argument><expr><name>from</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
         <if_stmt><if>if <condition>(<expr><call><name>getConfig</name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>Table</name></type> <name>t</name> <init>= <expr><call><name>getConfig</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTableByName</name><argument_list>(<argument><expr><name>from</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt><if>if <condition>(<expr><name>t</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
               <expr_stmt><expr><name>v</name> <operator>=</operator> <call><name><name>t</name><operator>.</operator><name>getKey</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
         </block_content>}</block></if></if_stmt>
      </block_content>}</block></if></if_stmt>

      <return>return <expr><name>v</name></expr>;</return>
   </block_content>}</block></function>
</unit>
