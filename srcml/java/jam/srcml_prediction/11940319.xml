<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/41759915.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>traverseGlobalNodes</name><parameter_list>()</parameter_list> <block>{<block_content>
		<decl_stmt><decl><type><name>Node</name></type> <name>currentGlobalNode</name> <init>= <expr><call><name><name>root</name><operator>.</operator><name>getFirstChild</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

		<while>while <condition>(<expr><name>currentGlobalNode</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
			<comment type="line">// logic of processing here</comment>

			<comment type="line">// traverse</comment>
			<decl_stmt><decl><type><name>XmlItem</name></type> <name>globalItem</name> <init>= <expr><call><name>traverseNode</name><argument_list>(<argument><expr><name>currentGlobalNode</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt><if>if <condition>(<expr><name>globalItem</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
				<expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>globalItems</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>globalItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
			<comment type="line">// process next</comment>
			<expr_stmt><expr><name>currentGlobalNode</name> <operator>=</operator> <call><name><name>currentGlobalNode</name><operator>.</operator><name>getNextSibling</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></while>
		<try>try <block>{<block_content>
			<expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>is</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
			<comment type="line">// TODO Auto-generated catch block</comment>
			<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>
</unit>
