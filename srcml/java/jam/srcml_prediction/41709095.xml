<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/16561849.java">	<function><type><specifier>private</specifier> <name>boolean</name></type> <name>setupPathFind</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>,<parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>z</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<decl_stmt><decl><type><name>PathNode</name></type> <name>pn</name><init>=<expr><call><name>createPathNode</name><argument_list>(<argument><expr><name>x</name></expr></argument>,<argument><expr><name>y</name></expr></argument>,<argument><expr><name>z</name></expr></argument>,<argument><expr><call><name>getHeuristicFunction</name><argument_list>()</argument_list></call><operator>.</operator><call><name>defaultDirection</name><argument_list>(<argument><expr><name>x</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><name>z</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<decl_stmt><decl><type><name>float</name></type> <name>h</name><init>=<expr><call><name>getHeuristicFunction</name><argument_list>()</argument_list></call><operator>.</operator><call><name>calcHeuristic</name><argument_list>(<argument><expr><name>x</name></expr></argument>, <argument><expr><name>y</name></expr></argument>, <argument><expr><name>z</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name>pn</name><operator>.</operator><name>heuristic</name></name><operator>=</operator><name>h</name></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><name>h</name><operator>&lt;=</operator><literal type="number">0</literal></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><name>found</name><operator>=</operator><name>pn</name></expr>;</expr_stmt>
			<return>return <expr><literal type="boolean">false</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		
		<expr_stmt><expr><call><name>addNode</name><argument_list>(<argument><expr><name>pn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><literal type="boolean">true</literal></expr>;</return>
	</block_content>}</block></function>
</unit>
