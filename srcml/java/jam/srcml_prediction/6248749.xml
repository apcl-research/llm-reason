<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/24084248.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>testLockLine</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws><block>{<block_content>
		<expr_stmt><expr><name>sequenceNo</name> <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>

		<comment type="line">// User 1 tries to lock an invalid line (should return same sequenceNo)</comment>
		<expr_stmt><expr><call><name><name>service</name><operator>.</operator><name>lockLine</name></name><argument_list>(<argument><expr><name>documentHash</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>,<argument><expr><name>user1ID</name></expr></argument>,<argument><expr><name>sequenceNo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>TestCase</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name>sequenceNo</name></expr></argument>,
				<argument><expr><call><name><name>service</name><operator>.</operator><name>getSequenceNo</name></name><argument_list>(<argument><expr><name>documentHash</name></expr></argument>,<argument><expr><name>sequenceNo</name></expr></argument>,<argument><expr><literal type="number">10</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line">// User 1 locks the second line (should return same sequenceNo)</comment>
		<expr_stmt><expr><call><name><name>service</name><operator>.</operator><name>lockLine</name></name><argument_list>(<argument><expr><name>documentHash</name></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>,<argument><expr><name>user1ID</name></expr></argument>,<argument><expr><name>sequenceNo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>TestCase</name><operator>.</operator><name>assertEquals</name></name><argument_list>(<argument><expr><name>sequenceNo</name></expr></argument>, <argument><expr><call><name><name>service</name><operator>.</operator><name>getSequenceNo</name></name><argument_list>(
				<argument><expr><name>documentHash</name></expr></argument>,<argument><expr><name>sequenceNo</name></expr></argument>,<argument><expr><literal type="number">2</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
</unit>
