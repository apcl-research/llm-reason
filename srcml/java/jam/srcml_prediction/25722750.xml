<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/19282983.java">		<function><type><specifier>public</specifier> <name>int</name></type> <name>removeAll</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>projectHandle</name></decl></parameter>)</parameter_list> <block>{<block_content>
			<synchronized>synchronized <init>(<expr><name>this</name></expr>)</init> <block>{<block_content>
				<decl_stmt><decl><type><name>int</name></type> <name>count</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
				<for>for <control>(<init><decl><type><name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>Command</name></argument>&gt;</argument_list></name></type> <name>i</name> <init>= <expr><call><name>iterator</name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><call><name><name>i</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>;</condition><incr/>)</control> <block>{<block_content>
					<decl_stmt><decl><type><name>Command</name></type> <name>next</name> <init>= <expr><call><name><name>i</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
					<if_stmt><if>if <condition>(<expr><call><name><name>next</name><operator>.</operator><name>getHandleIdentifier</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>startsWith</name><argument_list>(<argument><expr><name>projectHandle</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
						<expr_stmt><expr><call><name><name>i</name><operator>.</operator><name>remove</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name>count</name><operator>++</operator></expr>;</expr_stmt>
					</block_content>}</block></if></if_stmt>
				</block_content>}</block></for>
				<decl_stmt><decl><type><name>int</name></type> <name>leftOver</name> <init>= <expr><call><name>size</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
				<comment type="line">// Log.logMessage("Removed " + count + ". still queued: " +</comment>
				<comment type="line">// leftOver);</comment>
				<expr_stmt><expr><call><name><name>sem</name><operator>.</operator><name>reset</name></name><argument_list>(<argument><expr><name>leftOver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return>return <expr><name>leftOver</name></expr>;</return>
			</block_content>}</block></synchronized>
		</block_content>}</block></function>
</unit>
