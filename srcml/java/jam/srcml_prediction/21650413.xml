<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/12802783.java">	<function><type><specifier>private</specifier> <name>void</name></type> <name>activateKey</name><parameter_list>(<parameter><decl><type><name>APDU</name></type> <name>apdu</name></decl></parameter>, <parameter><decl><type><name><name>byte</name><index>[]</index></name></type> <name>buffer</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<comment type="line">// check P1</comment>
		<if_stmt><if>if <condition>(<expr><name><name>buffer</name><index>[<expr><name><name>ISO7816</name><operator>.</operator><name>OFFSET_P1</name></name></expr>]</index></name> <operator>!=</operator> <operator>(</operator><name>byte</name><operator>)</operator> <literal type="number">0x00</literal></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><call><name><name>ISOException</name><operator>.</operator><name>throwIt</name></name><argument_list>(<argument><expr><name><name>ISO7816</name><operator>.</operator><name>SW_WRONG_P1P2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		<switch>switch <condition>(<expr><name><name>buffer</name><index>[<expr><name><name>ISO7816</name><operator>.</operator><name>OFFSET_P2</name></name></expr>]</index></name></expr>)</condition> <block>{<block_content>
		<case>case <expr><name>AUTHENTICATION</name></expr>:</case>
			<comment type="line">// activate key: key always active, do nothing</comment>
			<break>break;</break>
		<case>case <expr><name>NON_REPUDIATION</name></expr>:</case>
			<comment type="line">// activate key: key always active, do nothing</comment>
			<break>break;</break>
		<default>default:</default>
			<expr_stmt><expr><call><name><name>ISOException</name><operator>.</operator><name>throwIt</name></name><argument_list>(<argument><expr><name>SW_REFERENCE_DATA_NOT_FOUND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break>break;</break>
		</block_content>}</block></switch>
	</block_content>}</block></function>
</unit>
