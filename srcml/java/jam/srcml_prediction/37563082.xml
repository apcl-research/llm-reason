<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/32087911.java"><function><type><specifier>public</specifier> <name>int</name></type> <name>getBorderWidth</name> <parameter_list>()</parameter_list> <block>{<block_content>
	<expr_stmt><expr><call><name>checkWidget</name> <argument_list>()</argument_list></call></expr>;</expr_stmt>
  <decl_stmt><decl><type><name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>Rectangle</name></name></type> <name>bounds</name> <init>= <expr><call><name><name>handle</name><operator>.</operator><name>getBounds</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name><name>java</name><operator>.</operator><name>awt</name><operator>.</operator><name>Rectangle</name></name></type> <name>cBounds</name> <init>= <expr><operator>(</operator><operator>(</operator><name>CControl</name><operator>)</operator><name>handle</name><operator>)</operator><operator>.</operator><call><name>getClientArea</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getBounds</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
  <return>return <expr><call><name><name>Math</name><operator>.</operator><name>max</name></name><argument_list>(<argument><expr><operator>(</operator><name><name>bounds</name><operator>.</operator><name>width</name></name> <operator>-</operator> <name><name>cBounds</name><operator>.</operator><name>width</name></name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr></argument>, <argument><expr><operator>(</operator><name><name>bounds</name><operator>.</operator><name>height</name></name> <operator>-</operator> <name><name>cBounds</name><operator>.</operator><name>height</name></name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>/</operator> <literal type="number">2</literal></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
</unit>
