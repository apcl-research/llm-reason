<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/26352696.java">    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>startsWith</name><parameter_list>(<parameter><decl><type><name>Ustr</name></type> <name>us</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>start</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name>prepareNext</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <while>while <condition>(<expr><name>start</name><operator>--</operator> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
            <expr_stmt><expr><call><name>nextChar</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></while>
        
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name><name>us</name><operator>.</operator><name>s</name><index>[<expr><name>base</name> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>!=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
            <if_stmt><if>if <condition>(<expr><name><name>s</name><index>[<expr><name>base</name> <operator>+</operator> <name>offset</name> <operator>+</operator> <name>i</name></expr>]</index></name> <operator>!=</operator> <name><name>us</name><operator>.</operator><name>s</name><index>[<expr><name><name>us</name><operator>.</operator><name>base</name></name> <operator>+</operator> <name>i</name></expr>]</index></name></expr>)</condition><block type="pseudo"><block_content>
                <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>
        
        <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    </block_content>}</block></function>
</unit>
