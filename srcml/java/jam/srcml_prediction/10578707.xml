<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/10370062.java">    <function><type><specifier>public</specifier> <name>void</name></type> <name>service</name><parameter_list>(<parameter><decl><type><name>Mail</name></type> <name>mail</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name><name>javax</name><operator>.</operator><name>mail</name><operator>.</operator><name>MessagingException</name></name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>StringBuffer</name></type> <name>logBuffer</name> <init>= <expr><operator>new</operator> <call><name>StringBuffer</name><argument_list>(<argument><expr><literal type="number">160</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">"Storing mail "</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><call><name><name>mail</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">" in "</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><name>repositoryPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name>log</name><argument_list>(<argument><expr><call><name><name>logBuffer</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>repository</name><operator>.</operator><name>store</name></name><argument_list>(<argument><expr><name>mail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><name>passThrough</name></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>mail</name><operator>.</operator><name>setState</name></name><argument_list>(<argument><expr><name><name>Mail</name><operator>.</operator><name>GHOST</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></function>
</unit>
