<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/41464981.java">    <function><type><specifier>public</specifier> <name>SMPPPacket</name></type> <name>readNextPacket</name><parameter_list>(<parameter><decl><type><name>boolean</name></type> <name>block</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>SMPPPacket</name></type> <name>packet</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
        <try>try <block>{<block_content>
            <synchronized>synchronized <init>(<expr><name>packetQueue</name></expr>)</init> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><call><name><name>packetQueue</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <literal type="number">1</literal> <operator>&amp;&amp;</operator> <name>block</name></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name><name>packetQueue</name><operator>.</operator><name>wait</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if> <else>else <block>{<block_content>
                    <expr_stmt><expr><name>packet</name> <operator>=</operator> <call><name><name>packetQueue</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></else></if_stmt>
            </block_content>}</block></synchronized>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>InterruptedException</name></type> <name>x</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name><name>LOG</name><operator>.</operator><name>info</name></name><argument_list>(<argument><expr><literal type="string">"Thread interrupted while blocked waiting on a packet."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
        <return>return <expr><name>packet</name></expr>;</return>
    </block_content>}</block></function>
</unit>
