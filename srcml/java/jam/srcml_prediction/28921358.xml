<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/18440062.java">	<function><type><specifier>private</specifier> <name>String</name></type> <name>serializeASCIIFence</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>ComputereseTreeNode</name></type> <name>rootNode</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<decl_stmt><decl><type><name>NodeImpl</name></type> <name>nimpl</name> <init>= <expr><operator>(</operator><name>NodeImpl</name><operator>)</operator> <name>rootNode</name></expr></init></decl>;</decl_stmt>
		
		<decl_stmt><decl><type><specifier>final</specifier> <name>FenceNode</name></type> <name>openFenceNode</name> <init>= <expr><operator>(</operator><name>FenceNode</name><operator>)</operator> <name>rootNode</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>openFence</name> <init>= <expr><call><name><name>openFenceNode</name><operator>.</operator><name>getAsciiValue</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>closeFence</name> <init>= <expr><call><name><name>openFenceNode</name><operator>.</operator><name>getMatchingFence</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getAsciiValue</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<decl_stmt><decl><type><specifier>final</specifier> <name><name>ComputereseTreeNode</name><index>[]</index></name></type> <name>children</name> <init>= <expr><call><name><name>rootNode</name><operator>.</operator><name>getChildren</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<assert>assert <expr><name><name>children</name><operator>.</operator><name>length</name></name> <operator>==</operator> <literal type="number">1</literal></expr>;</assert>
		<decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>argument</name> <init>= <expr><call><name>serializeASCII</name><argument_list>(<argument><expr><name><name>children</name><index>[<expr><literal type="number">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				
		<return>return <expr><name>openFence</name> 
			<operator>+</operator> <name>argument</name>
			<operator>+</operator> <name>closeFence</name></expr>;</return>
	</block_content>}</block></function>
</unit>
