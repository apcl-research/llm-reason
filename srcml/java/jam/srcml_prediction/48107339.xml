<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/24352983.java">    <function><type><specifier>protected</specifier> <name>void</name></type> <name>restoreAmbiguityStates</name><parameter_list>()</parameter_list> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>getFormat</name><argument_list>()</argument_list></call><operator>.</operator><call><name>isNucleotideType</name><argument_list>()</argument_list></call> <operator>||</operator> <name>replacedStates</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
            <return>return;</return></block_content></block></if></if_stmt>

        <decl_stmt><decl><type><name><name>SparseArray</name><operator>.</operator><name>ArrayIterator</name></name></type> <name>iter</name> <init>= <expr><call><name><name>replacedStates</name><operator>.</operator><name>arrayIterator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <while>while <condition>(<expr><call><name><name>iter</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>iter</name><operator>.</operator><name>getNext</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>set</name><argument_list>(<argument><expr><name><name>iter</name><operator>.</operator><name>i</name></name></expr></argument>, <argument><expr><name><name>iter</name><operator>.</operator><name>j</name></name></expr></argument>, <argument><expr><operator>(</operator><operator>(</operator><name>String</name><operator>)</operator> <name><name>iter</name><operator>.</operator><name>o</name></name><operator>)</operator><operator>.</operator><call><name>charAt</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></while>
    </block_content>}</block></function>
</unit>
