<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/49131596.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>setType</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>String</name></type> <name>type</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>BuildException</name></expr></argument></throws> <block>{<block_content>

		<if_stmt><if>if <condition>(<expr><name>type</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
			<throw>throw <expr><operator>new</operator> <call><name>NullArgumentException</name><argument_list>(<argument><expr><literal type="string">"type"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>

		<if_stmt><if>if <condition>(<expr><operator>!</operator><literal type="string">"JvYAML"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><literal type="string">"yarl4j"</literal><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>

			<throw>throw <expr><operator>new</operator> <call><name>BuildException</name><argument_list>(<argument><expr><literal type="string">"Invalid conversion type: '"</literal> <operator>+</operator> <name>type</name>
			        <operator>+</operator> <literal type="string">"'. "</literal> <operator>+</operator> <literal type="string">"Valid values include: 'JvYAML' or 'yarl4j'."</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>

		<expr_stmt><expr><name><name>this</name><operator>.</operator><name>type</name></name> <operator>=</operator> <name>type</name></expr>;</expr_stmt>
	</block_content>}</block></function>
</unit>
