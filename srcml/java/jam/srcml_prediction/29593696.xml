<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/24332796.java">  <function><type><specifier>public</specifier> <name>double</name></type> <name>dot</name><parameter_list>(<parameter><decl><type><name>MAVector</name></type> <name>v</name></decl></parameter>)</parameter_list> <block>{<block_content>

    <if_stmt><if>if <condition>(<expr><name>neutral</name> <operator>!=</operator> <call><name><name>v</name><operator>.</operator><name>getNeutral</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
      <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"MAVector.dot "</literal><operator>+</operator><name>neutral</name><operator>+</operator><literal type="string">" != "</literal><operator>+</operator> <call><name><name>v</name><operator>.</operator><name>getNeutral</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>

    <decl_stmt><decl><type><name>double</name></type> <name>sum</name> <init>= <expr><literal type="number">0.0</literal></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>k</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>k</name><operator>&lt;</operator><name>neutral</name></expr>;</condition> <incr><expr><name>k</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
      <expr_stmt><expr><name>sum</name> <operator>+=</operator> <call><name>getDouble</name><argument_list>(<argument><expr><name>k</name></expr></argument>)</argument_list></call> <operator>*</operator> <call><name><name>v</name><operator>.</operator><name>getDouble</name></name><argument_list>(<argument><expr><name>k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <return>return <expr><name>sum</name></expr>;</return>
  </block_content>}</block></function>
</unit>
