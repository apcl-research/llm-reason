<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/45022963.java">   <function><type><specifier>public</specifier> <name>String</name></type> <name>DOM2String</name><parameter_list>(<parameter><decl><type><name>Document</name></type> <name>doc</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <decl_stmt><decl><type><name>StringWriter</name></type> <name>writer</name> <init>= <expr><operator>new</operator> <call><name>StringWriter</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

      <try>try <block>{<block_content>
         <decl_stmt><decl><type><name>StreamResult</name></type> <name>result</name> <init>= <expr><operator>new</operator> <call><name>StreamResult</name><argument_list>(<argument><expr><name>writer</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <decl_stmt><decl><type><name>DOMSource</name></type>    <name>source</name> <init>= <expr><operator>new</operator> <call><name>DOMSource</name><argument_list>(<argument><expr><name>doc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
         <expr_stmt><expr><call><name><name>transformer</name><operator>.</operator><name>transform</name></name><argument_list>(<argument><expr><name>source</name></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <expr_stmt><expr><call><name><name>logCat</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"write"</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></catch></try>

      <decl_stmt><decl><type><name>String</name></type> <name>s</name> <init>= <expr><call><name><name>writer</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

      <return>return <expr><name>s</name></expr>;</return>
   </block_content>}</block></function>
</unit>
