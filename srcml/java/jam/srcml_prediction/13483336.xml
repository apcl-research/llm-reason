<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/17590029.java">        <function><type><specifier>public</specifier> <name>boolean</name></type> <name>canInsert</name><parameter_list>(<parameter><decl><type><name>Block</name></type> <name>block</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <decl_stmt><decl><type><name>int</name></type> <name>blockIndex</name> <init>= <expr><call><name><name>cfg</name><operator>.</operator><name>preOrderIndex</name></name><argument_list>(<argument><expr><name>block</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name>Def</name></type> <name>def</name> <init>= <expr><name><name>operands</name><index>[<expr><name>blockIndex</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt><if>if <condition>(<expr><name>def</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <return>return <expr><literal type="boolean">true</literal></expr>;</return>
            </block_content>}</block></if></if_stmt>

            <if_stmt><if>if <condition>(<expr><operator>!</operator><name><name>hasRealUse</name><index>[<expr><name>blockIndex</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
                <if_stmt><if>if <condition>(<expr><name>def</name> <operator>instanceof</operator> <name>Phi</name></expr>)</condition> <block>{<block_content>
                    <decl_stmt><decl><type><name>Phi</name></type> <name>phi</name> <init>= <expr><operator>(</operator><name>Phi</name><operator>)</operator> <name>def</name></expr></init></decl>;</decl_stmt>

                    <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>phi</name><operator>.</operator><name>willBeAvail</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                        <return>return <expr><literal type="boolean">true</literal></expr>;</return>
                    </block_content>}</block></if></if_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>

            <return>return <expr><literal type="boolean">false</literal></expr>;</return>
        </block_content>}</block></function>
</unit>
