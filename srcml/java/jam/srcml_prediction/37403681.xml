<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/31491596.java">    <function><type><specifier>public</specifier> <name>void</name></type> <name>calculateState</name><parameter_list>()</parameter_list> <block>{<block_content>
	<try>try <block>{<block_content>
	    <decl_stmt><decl><type><name>ByteArrayOutputStream</name></type> <name>bos</name></decl>;</decl_stmt>
	    <decl_stmt><decl><type><name>ObjectOutputStream</name></type> <name>oos</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
	    
	    <expr_stmt><expr><name>bos</name> <operator>=</operator> <operator>new</operator> <call><name>ByteArrayOutputStream</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	    <expr_stmt><expr><name>oos</name> <operator>=</operator> <operator>new</operator> <call><name>ObjectOutputStream</name><argument_list>(<argument><expr><name>bos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    
	    <comment type="line">// To prevent the current byteArray from being sufficiently in the packet:</comment>
	    <expr_stmt><expr><name>byteArray</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt> 
	    <expr_stmt><expr><call><name><name>oos</name><operator>.</operator><name>writeObject</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	    
	    <comment type="line">// Now make the new bytearray.</comment>
	    <expr_stmt><expr><name>byteArray</name> <operator>=</operator> <call><name><name>bos</name><operator>.</operator><name>toByteArray</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	    
	    <expr_stmt><expr><call><name><name>oos</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	    <expr_stmt><expr><call><name><name>bos</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	    
	</block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
	    <expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></catch></try>

    </block_content>}</block></function>
</unit>
