<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/41981396.java">    <function><type><specifier>public</specifier> <name>void</name></type> <name>index</name><parameter_list>(<parameter><decl><type><name>Lesson</name></type> <name>lesson</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <try>try <block>{<block_content>
            <decl_stmt><decl><type><name>IndexWriter</name></type> <name>indexWriter</name> <init>= <expr><operator>new</operator> <call><name>IndexWriter</name><argument_list>(<argument><expr><name>ramDirectory</name></expr></argument>,
                    <argument><expr><operator>new</operator> <call><name>IndexWriterConfig</name><argument_list>(<argument><expr><name><name>Version</name><operator>.</operator><name>LUCENE_32</name></name></expr></argument>, <argument><expr><name>analyzer</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <for>for <control>(<init><decl><type><name>Card</name></type> <name>card</name> <range>: <expr><call><name><name>lesson</name><operator>.</operator><name>getCards</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
                <expr_stmt><expr><call><name>addCard</name><argument_list>(<argument><expr><name>indexWriter</name></expr></argument>, <argument><expr><name>card</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
            <expr_stmt><expr><call><name><name>indexWriter</name><operator>.</operator><name>optimize</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>indexWriter</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>log</name></name><argument_list>(<argument><expr><name><name>Level</name><operator>.</operator><name>SEVERE</name></name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>
</unit>
