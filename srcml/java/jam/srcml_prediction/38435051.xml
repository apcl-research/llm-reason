<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/16897292.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>run</name><parameter_list>(<parameter><decl><type><name>IAction</name></type> <name>action</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<comment type="block" format="javadoc">/**
		 * log.warning(""+String.valueOf(SWT.CTRL | 'e'));
		 * 
		 * log.warning(""+String.valueOf(SWT.CTRL | SWT.SHIFT | 'x'));
		 */</comment>
		<decl_stmt><decl><type><name>Plasm</name></type> <name>plasm</name> <init>= <expr><call><name><name>Plasm</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

		<try>try <block>{<block_content>
			<expr_stmt><expr><call><name><name>plasm</name><operator>.</operator><name>open</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Throwable</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
			<expr_stmt><expr><call><name><name>MessageDialog</name><operator>.</operator><name>openError</name></name><argument_list>(<argument><expr><call><name><name>window</name><operator>.</operator><name>getShell</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="string">"Error"</literal></expr></argument>, <argument><expr><call><name><name>e</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>warning</name></name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>
</unit>
