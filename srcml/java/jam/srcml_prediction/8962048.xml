<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/42682983.java">    <function><type><specifier>public</specifier> <name>void</name></type> <name>processMsg</name><parameter_list>(<parameter><decl><type><name>MsgDescriptor</name></type> <name>msg</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <try>try 
        <block>{<block_content>
            <comment type="line">//the msg is in beacon</comment>
            <if_stmt><if>if<condition>(<expr><call><name><name>msg</name><operator>.</operator><name>isInEmission</name></name><argument_list>()</argument_list></call></expr>)</condition>
            <block>{<block_content>
                <expr_stmt><expr><call><name>sendMsgInEmission</name><argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> 
            <comment type="line">//the msg is in beacon</comment>
            <if type="elseif">else if<condition>(<expr><call><name><name>msg</name><operator>.</operator><name>isInReception</name></name><argument_list>()</argument_list></call></expr>)</condition>
            <block>{<block_content>
                <expr_stmt><expr><call><name>sendMsgInReception</name><argument_list>(<argument><expr><name>msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name><name>LOG4J</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"Can't forward message "</literal> <operator>+</operator> <name>msg</name> <operator>+</operator> <literal type="string">" : "</literal> <operator>+</operator> <name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>
</unit>
