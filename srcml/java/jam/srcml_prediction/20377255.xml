<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/46659929.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>getBars</name><parameter_list>()</parameter_list> <block>{<block_content>
		<expr_stmt><expr><call><name><name>getBarsService</name><operator>.</operator><name>getBars</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>AsyncCallback</name><argument_list type="generic">&lt;<argument><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{

			<function><type><specifier>public</specifier> <name>void</name></type> <name>onSuccess</name><parameter_list>(<parameter><decl><type><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>Integer</name></argument>, <argument><name>String</name></argument>&gt;</argument_list></name></type> <name>result</name></decl></parameter>)</parameter_list> <block>{<block_content>
				<for>for <control>(<init><decl><type><name>Integer</name></type> <name>barVal</name> <range>: <expr><call><name><name>result</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
					<expr_stmt><expr><call><name><name>bar</name><operator>.</operator><name>addItem</name></name><argument_list>(<argument><expr><call><name><name>result</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>barVal</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name>Integer</name><operator>.</operator><name>toString</name></name><argument_list>(<argument><expr><name>barVal</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></for>
			</block_content>}</block></function>

			<function><type><specifier>public</specifier> <name>void</name></type> <name>onFailure</name><parameter_list>(<parameter><decl><type><name>Throwable</name></type> <name>caught</name></decl></parameter>)</parameter_list> <block>{<block_content>
				<expr_stmt><expr><call><name><name>caught</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name>bar</name><operator>.</operator><name>addItem</name></name><argument_list>(<argument><expr><literal type="string">"-no bars available-"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
</unit>
