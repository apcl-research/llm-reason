<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/43890562.java">    <function><type><specifier>public</specifier> <name>Node</name></type> <name>findNode</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>a</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>nodes</name><operator>.</operator><name>ensureSize</name></name><argument_list>(<argument><expr><name>a</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>Node</name></type> <name>na</name> <init>= <expr><operator>(</operator><name>Node</name><operator>)</operator> <call><name><name>nodes</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>(<expr><name>na</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <comment type="line">// Start a new set with a</comment>
            <decl_stmt><decl><type><name>Node</name></type> <name>root</name> <init>= <expr><operator>new</operator> <call><name>Node</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><name><name>root</name><operator>.</operator><name>child</name></name> <operator>=</operator> <operator>new</operator> <call><name>Node</name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name>root</name><operator>.</operator><name>child</name><operator>.</operator><name>parent</name></name> <operator>=</operator> <name>root</name></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name>nodes</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>a</name></expr></argument>, <argument><expr><name><name>root</name><operator>.</operator><name>child</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return>return <expr><name>root</name></expr>;</return>
        </block_content>}</block></if></if_stmt>

        <return>return <expr><call><name>findNode</name><argument_list>(<argument><expr><name>na</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
</unit>
