<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/26392783.java">    <function><type><specifier>public</specifier> <name>String</name></type> <name>getString</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>String</name></type> <name>key</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>String</name></type> <name>def</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>value</name></decl>;</decl_stmt>

        <try>try <block>{<block_content>
            <expr_stmt><expr><name>value</name> <operator>=</operator> <call><name><name>bundle</name><operator>.</operator><name>getString</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>MissingResourceException</name></type> <name>mre</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><call><name><name>LOGGER</name><operator>.</operator><name>isDebugEnabled</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Error getting resource for key '"</literal> <operator>+</operator> <name>key</name> <operator>+</operator> <literal type="string">"'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"using default: '"</literal> <operator>+</operator> <name>def</name> <operator>+</operator> <literal type="string">"'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt><expr><name>value</name> <operator>=</operator> <name>def</name></expr>;</expr_stmt>
        </block_content>}</block></catch></try>

        <return>return <expr><name>value</name></expr>;</return>
    </block_content>}</block></function>
</unit>
