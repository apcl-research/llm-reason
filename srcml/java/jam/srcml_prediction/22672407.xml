<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/17489983.java">	<function><type><specifier>protected</specifier> <name>Long</name></type> <name>modelIdToDb</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>stringId</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>DAOException</name></expr></argument></throws> <block>{<block_content>
		<decl_stmt><decl><type><name>Long</name></type> <name>id</name> <init>= <expr><name>DB_NULL_ID</name></expr></init></decl>;</decl_stmt>
		<if_stmt><if>if <condition>(<expr><name>stringId</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>stringId</name><operator>.</operator><name>trim</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
			<try>try <block>{<block_content>
				<expr_stmt><expr><name>id</name> <operator>=</operator> <call><name><name>Long</name><operator>.</operator><name>parseLong</name></name><argument_list>(<argument><expr><name>stringId</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NumberFormatException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
				<throw>throw <expr><operator>new</operator> <call><name>DAOException</name><argument_list>(<argument><expr><call><name><name>MessageFormat</name><operator>.</operator><name>format</name></name><argument_list>(
						<argument><expr><literal type="string">"Could not convert {0} to an int"</literal></expr></argument>, <argument><expr><name>stringId</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
			</block_content>}</block></catch></try>
		</block_content>}</block></if></if_stmt>
		<return>return <expr><name>id</name></expr>;</return>
	</block_content>}</block></function>
</unit>
