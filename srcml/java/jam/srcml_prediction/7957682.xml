<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/13482983.java">	<function><type><specifier>private</specifier> <name>void</name></type> <name>cleanupEdge</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>Block</name></type> <name>src</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>Block</name></type> <name>dst</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<expr_stmt><expr><call><name><name>dst</name><operator>.</operator><name>visit</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>TreeVisitor</name></super><argument_list>()</argument_list> <block>{
			<function><type><specifier>public</specifier> <name>void</name></type> <name>visitPhiJoinStmt</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>PhiJoinStmt</name></type> <name>stmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
				<decl_stmt><decl><type><specifier>final</specifier> <name>Expr</name></type> <name>operand</name> <init>= <expr><call><name><name>stmt</name><operator>.</operator><name>operandAt</name></name><argument_list>(<argument><expr><name>src</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

				<if_stmt><if>if <condition>(<expr><name>operand</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
					<expr_stmt><expr><call><name><name>operand</name><operator>.</operator><name>cleanup</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

					<comment type="line">// Remove the operand associated with src</comment>
					<comment type="line">// from a proportionJoinStmt</comment>
					<expr_stmt><expr><call><name><name>stmt</name><operator>.</operator><name>setOperandAt</name></name><argument_list>(<argument><expr><name>src</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></function>

			<function><type><specifier>public</specifier> <name>void</name></type> <name>visitStmt</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>Stmt</name></type> <name>stmt</name></decl></parameter>)</parameter_list> <block>{<block_content>
			</block_content>}</block></function>
		}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
</unit>
