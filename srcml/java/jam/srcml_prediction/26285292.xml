<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/31564029.java">        <function><type><specifier>private</specifier> <name>Vector</name></type> <name>reconcile</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>in</name></decl></parameter>, <parameter><decl><type><name>char</name></type> <name>separator</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <decl_stmt><decl><type><name>Vector</name></type> <name>result</name> <init>= <expr><operator>new</operator> <call><name>Vector</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>index</name><init>=<expr><call><name><name>in</name><operator>.</operator><name>indexOf</name></name><argument_list>(<argument><expr><name>separator</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <while>while<condition>(<expr><name>index</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>in</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>index</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>in</name><operator>=</operator><call><name><name>in</name><operator>.</operator><name>substring</name></name><argument_list>(<argument><expr><name>index</name><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>index</name><operator>=</operator><call><name><name>in</name><operator>.</operator><name>indexOf</name></name><argument_list>(<argument><expr><name>separator</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></while>
            <expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return>return <expr><name>result</name></expr>;</return>
        </block_content>}</block></function>
</unit>
