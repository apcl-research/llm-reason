<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/42262629.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>registerItem</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>Item</name></type> <name>i</name></decl></parameter>)</parameter_list> <block>{<block_content>
      		<if_stmt><if>if<condition>(<expr><call><name><name>i</name><operator>.</operator><name>getLoc</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      			<expr_stmt><expr><call><name><name>delayedEventHandler</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>DelayedEvent</name></super><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="number">180000</literal></expr></argument>)</argument_list> <block>{
      				<function><type><specifier>public</specifier> <name>void</name></type> <name>run</name><parameter_list>()</parameter_list> <block>{<block_content>
      					<decl_stmt><decl><type><name>ActiveTile</name></type> <name>tile</name> <init>= <expr><call><name>getTile</name><argument_list>(<argument><expr><call><name><name>i</name><operator>.</operator><name>getLocation</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if_stmt><if>if<condition>(<expr><call><name><name>tile</name><operator>.</operator><name>hasItem</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
						<expr_stmt><expr><call><name>unregisterItem</name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					</block_content>}</block></if></if_stmt>
      					<expr_stmt><expr><name>running</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
      				</block_content>}</block></function>
      			}</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      		</block_content>}</block></if></if_stmt>
	</block_content>}</block></function>
</unit>
