<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/442426.java">	<function><type><specifier>public</specifier> <name>RadiusAttribute</name></type> <name>getAttribute</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>attributeType</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>InvalidParameterException</name></expr></argument>, <argument><expr><name>RadiusException</name></expr></argument></throws> <block>{<block_content>
		<if_stmt><if>if <condition>(<expr><operator>(</operator><name>attributeType</name> <operator>&lt;</operator> <literal type="number">0</literal><operator>)</operator> <operator>||</operator> <operator>(</operator><name>attributeType</name> <operator>&gt;</operator> <literal type="number">256</literal><operator>)</operator></expr>)</condition> <block>{<block_content>
			<throw>throw <expr><operator>new</operator> <call><name>InvalidParameterException</name><argument_list>(<argument><expr><literal type="string">"attributeType is out of bounds"</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<decl_stmt><decl><type><name>RadiusAttribute</name></type> <name>tempRa</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
		<synchronized>synchronized <init>(<expr><name>attributes</name></expr>)</init> <block>{<block_content>
			<expr_stmt><expr><name>tempRa</name> <operator>=</operator> <call><name><name>attributes</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><operator>new</operator> <call><name>Integer</name><argument_list>(<argument><expr><name>attributeType</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></synchronized>
		<if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>==</operator> <name>tempRa</name></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><call><name><name>logger</name><operator>.</operator><name>warning</name></name><argument_list>(<argument><expr><literal type="string">"No attribute found for type: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<return>return <expr><name>tempRa</name></expr>;</return>
	</block_content>}</block></function>
</unit>
