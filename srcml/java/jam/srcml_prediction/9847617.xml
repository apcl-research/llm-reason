<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/9839094.java">	<function><type><specifier>private</specifier> <name>void</name></type> <name>renderChild</name> <parameter_list>(<parameter><decl><type><name>FacesContext</name></type> <name>ctx</name></decl></parameter>, <parameter><decl><type><name>UIComponent</name></type> <name>comp</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
		<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>comp</name><operator>.</operator><name>isRendered</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>
		<expr_stmt><expr><call><name><name>comp</name><operator>.</operator><name>encodeBegin</name></name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><call><name><name>comp</name><operator>.</operator><name>getRendersChildren</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><call><name><name>comp</name><operator>.</operator><name>encodeChildren</name></name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else>else <block>{<block_content>
			<for>for <control>(<init><decl><type><name>UIComponent</name></type> <name>child</name> <range>: <expr><call><name><name>comp</name><operator>.</operator><name>getChildren</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>renderChild</name></name><argument_list>(<argument><expr><name>ctx</name></expr></argument>, <argument><expr><name>child</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
		</block_content>}</block></else></if_stmt>
		<expr_stmt><expr><call><name><name>comp</name><operator>.</operator><name>encodeEnd</name></name><argument_list>(<argument><expr><name>ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
</unit>
