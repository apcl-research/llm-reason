<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/28839996.java">    <function><type><specifier>public</specifier> <name>String</name></type> <name>printGlossary</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>startWithName</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>printme</name> <init>= <expr><operator>new</operator> <call><name>String</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <for>for <control>(<init><decl><type><name>Iterator</name></type> <name>i</name> <init>= <expr><call><name><name>keyValues</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><call><name><name>i</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr/>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>String</name></type> <name>key</name> <init>= <expr><call><name><name>i</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>String</name></type> <name>value</name> <init>= <expr><call><name>getString</name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt><if>if <condition>(<expr><call><name><name>key</name><operator>.</operator><name>startsWith</name></name><argument_list>(<argument><expr><name>startWithName</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>printme</name> <operator>=</operator> <name>printme</name> <operator>+</operator> <name>key</name> <operator>+</operator> <literal type="string">" = "</literal> <operator>+</operator> <name>value</name> <operator>+</operator> <literal type="string">"&lt;br&gt;\n"</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>

        <return>return <expr><name>printme</name></expr>;</return>
    </block_content>}</block></function>
</unit>
