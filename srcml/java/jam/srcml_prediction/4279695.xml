<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/10513963.java">    <function><type><specifier>public</specifier> <name>Object</name></type> <name>construct</name><parameter_list>(<parameter><decl><type><name>Class</name></type> <name>clazz</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>Constructor</name></type> <name>constructor</name></decl>;</decl_stmt>

        <try>try <block>{<block_content>
            <expr_stmt><expr><name>constructor</name> <operator>=</operator> <call><name><name>clazz</name><operator>.</operator><name>getDeclaredConstructor</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>Class</name><index>[]</index></name> <block>{  }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>NoSuchMethodException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>BuildException</name><argument_list>(<argument><expr><literal type="string">"A no-arg constructor must be provided"</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>

        <expr_stmt><expr><call><name><name>constructor</name><operator>.</operator><name>setAccessible</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <try>try <block>{<block_content>
            <return>return <expr><call><name><name>constructor</name><operator>.</operator><name>newInstance</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>Object</name><index>[]</index></name> <block>{  }</block></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>BuildException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>
</unit>
