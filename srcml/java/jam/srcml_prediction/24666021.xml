<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/51329073.java">	<function><type><specifier>private</specifier> <name>IFigure</name></type> <name>createFigureForModel</name><parameter_list>()</parameter_list> <block>{<block_content>
		<if_stmt><if>if <condition>(<expr><call><name>getModel</name><argument_list>()</argument_list></call> <operator>instanceof</operator> <name>Person</name></expr>)</condition> <block>{<block_content>
			<decl_stmt><decl><type><name>IFigure</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>PersonFigure</name><argument_list>(<argument><expr><operator>(</operator><name>Person</name><operator>)</operator> <call><name>getModel</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name>f</name><operator>.</operator><name>setOpaque</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return>return <expr><name>f</name></expr>;</return>
		</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><call><name>getModel</name><argument_list>()</argument_list></call> <operator>instanceof</operator> <name>Department</name></expr>)</condition> <block>{<block_content>
			<decl_stmt><decl><type><name>Department</name></type> <name>d</name> <init>= <expr><operator>(</operator><name>Department</name><operator>)</operator> <call><name>getModel</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name>IFigure</name></type> <name>f</name> <init>= <expr><operator>new</operator> <call><name>DepartmentFigure</name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name>f</name><operator>.</operator><name>setOpaque</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>f</name><operator>.</operator><name>setBackgroundColor</name></name><argument_list>(<argument><expr><name><name>ColorConstants</name><operator>.</operator><name>green</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return>return <expr><name>f</name></expr>;</return>
		</block_content>}</block></if> <else>else <block>{<block_content>
			<comment type="line">// if Shapes gets extended the conditions above must be updated</comment>
			<throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>()</argument_list></call></expr>;</throw>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></function>
</unit>
