<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/47576983.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>switchOutHealthyPoke</name><parameter_list>()</parameter_list> <block>{<block_content>
			<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name>getParty</name><argument_list>()</argument_list></call><operator>.</operator><name>length</name> <operator>&amp;&amp;</operator> <call><name>getParty</name><argument_list>()</argument_list></call><index>[<expr><name>i</name></expr>]</index> <operator>!=</operator> <literal type="null">null</literal></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
				<if_stmt><if>if<condition>(<expr><call><name>getParty</name><argument_list>()</argument_list></call><index>[<expr><name>i</name></expr>]</index><operator>.</operator><call><name>getHealth</name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
					<decl_stmt><decl><type><name>Pokemon</name></type> <name>temp</name> <init>= <expr><call><name>getParty</name><argument_list>()</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name>getParty</name><argument_list>()</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index> <operator>=</operator> <call><name>getParty</name><argument_list>()</argument_list></call><index>[<expr><name>i</name></expr>]</index></expr>;</expr_stmt>
					<expr_stmt><expr><call><name>getParty</name><argument_list>()</argument_list></call><index>[<expr><name>i</name></expr>]</index> <operator>=</operator> <name>temp</name></expr>;</expr_stmt>
					<expr_stmt><expr><call><name>arrangeParty</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name>initialiseClientParty</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
					<break>break;</break>
				</block_content>}</block></if></if_stmt>
			</block_content>}</block></for>
	</block_content>}</block></function>
</unit>
