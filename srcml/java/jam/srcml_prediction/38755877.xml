<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/31280961.java">    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>containsTerm</name><parameter_list>(<parameter><decl><type><name>Term</name></type> <name>target</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<for>for <control>(<init><decl><type><name>Iterator</name></type> <name>iter</name> <init>= <expr><call><name>getSubformulas</name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><call><name><name>iter</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr/>)</control> <block>{<block_content>
	    <if_stmt><if>if <condition>(<expr><operator>(</operator><operator>(</operator><name>Formula</name><operator>)</operator> <call><name><name>iter</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>containsTerm</name><argument_list>(<argument><expr><name>target</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
		<return>return <expr><literal type="boolean">true</literal></expr>;</return>
	    </block_content>}</block></if></if_stmt>
	</block_content>}</block></for>

	<for>for <control>(<init><decl><type><name>Iterator</name></type> <name>iter</name> <init>= <expr><call><name>getTopLevelTerms</name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><call><name><name>iter</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr/>)</control> <block>{<block_content>
	    <if_stmt><if>if <condition>(<expr><operator>(</operator><operator>(</operator><name>Term</name><operator>)</operator> <call><name><name>iter</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>containsTerm</name><argument_list>(<argument><expr><name>target</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
		<return>return <expr><literal type="boolean">true</literal></expr>;</return>
	    </block_content>}</block></if></if_stmt>
	</block_content>}</block></for>

	<return>return <expr><literal type="boolean">false</literal></expr>;</return>
    </block_content>}</block></function>
</unit>
