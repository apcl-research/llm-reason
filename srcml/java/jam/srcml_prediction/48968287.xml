<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/47389996.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>restart</name><parameter_list>()</parameter_list> <block>{<block_content>
		<try>try <block>{<block_content>
			<comment type="line">// Store all configuration and finish all active modules</comment>

			<comment type="line">// Build a process builder with OS-specific command and saved arguments</comment>
			<decl_stmt><decl><type><name>ProcessBuilder</name></type> <name>pb</name> <init>= <expr><operator>new</operator> <call><name>ProcessBuilder</name><argument_list>(<argument><expr><call><name><name>SystemProperties</name><operator>.</operator><name>OS</name><operator>.</operator><name>getLaunchCommand</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><call><name><name>pb</name><operator>.</operator><name>command</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line">// Start new application instance</comment>
			<expr_stmt><expr><call><name><name>pb</name><operator>.</operator><name>start</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>

		</block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
			<expr_stmt><expr><call><name><name>logger</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch> <finally>finally <block>{<block_content>
			<comment type="line">// Exit normally</comment>
			<expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>exit</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></finally></try>
	</block_content>}</block></function>
</unit>
