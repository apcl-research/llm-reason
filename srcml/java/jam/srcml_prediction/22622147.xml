<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/22626891.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>exposeElement</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>xpath</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<comment type="line">// prtln ("exposeNode() with " + xpath);</comment>
		<decl_stmt><decl><type><name>String</name></type> <name>path</name> <init>= <expr><name>xpath</name></expr></init></decl>;</decl_stmt>

		<comment type="line">// set ancestor paths to OPEN</comment>
		<while>while <condition>(<expr><name>path</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>xpath</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>

			<decl_stmt><decl><type><name>String</name></type> <name>encodedXPath</name> <init>= <expr><call><name><name>XPathUtils</name><operator>.</operator><name>encodeXPath</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name>String</name></type> <name>id</name> <init>= <expr><call><name><name>CollapseUtils</name><operator>.</operator><name>pathToId</name></name><argument_list>(<argument><expr><name>encodedXPath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><call><name>openElement</name><argument_list>(<argument><expr><name>id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name>path</name> <operator>=</operator> <call><name><name>XPathUtils</name><operator>.</operator><name>getParentXPath</name></name><argument_list>(<argument><expr><name>path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></while>
	</block_content>}</block></function>
</unit>
