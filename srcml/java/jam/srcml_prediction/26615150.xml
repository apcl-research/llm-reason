<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/34465529.java">    <function><type><specifier>public</specifier> <name>Cell</name></type> <name>getCell</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>Iterator</name></type> <name>iter</name> <init>= <expr><call><name>getCellIterator</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>Object</name></type> <name>o</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>index</name><operator>&lt;</operator><literal type="number">0</literal> <operator>||</operator> <name>index</name><operator>&gt;=</operator><call><name><name>this</name><operator>.</operator><name>getSize</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
	    <throw>throw <expr><operator>new</operator> <call><name>IndexOutOfBoundsException</name><argument_list>(
	        <argument><expr><literal type="string">"No such element in Population: index "</literal><operator>+</operator><name>index</name><operator>+</operator><literal type="string">" of "</literal><operator>+</operator>
	        <call><name><name>this</name><operator>.</operator><name>getSize</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>

	<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;=</operator><name>index</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
	    <expr_stmt><expr><name>o</name> <operator>=</operator> <call><name><name>iter</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></for>

	<return>return <expr><operator>(</operator><name>Cell</name><operator>)</operator> <name>o</name></expr>;</return>
    </block_content>}</block></function>
</unit>
