<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/10501073.java">    <function><type><specifier>public</specifier> <name>void</name></type> <name>messageLogged</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>BuildEvent</name></type> <name>event</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><operator>(</operator><name>out</name> <operator>!=</operator> <literal type="null">null</literal><operator>)</operator> <operator>&amp;&amp;</operator> <name>detectedInput</name></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>detectedInput</name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>

            <decl_stmt><decl><type><name>Message</name></type> <name>message</name> <init>=
                    <expr><operator>new</operator> <call><name>Message</name><argument_list>(<argument><expr><name><name>Protocol</name><operator>.</operator><name>INPUT_TASK</name></name></expr></argument>, <argument><expr><call><name><name>event</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <try>try <block>{<block_content>
                <expr_stmt><expr><call><name>send</name><argument_list>(<argument><expr><name>message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>ignore</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>err</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"could not send to AntRunner"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></catch></try>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></function>
</unit>
