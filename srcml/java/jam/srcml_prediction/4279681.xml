<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/10513962.java">    <function><type><specifier>public</specifier> <name>Object</name></type> <name>invoke</name><parameter_list>(<parameter><decl><type><name>Method</name></type> <name>method</name></decl></parameter>, <parameter><decl><type><name>Object</name></type> <name>object</name></decl></parameter>, <parameter><decl><type><name><name>Object</name><index>[]</index></name></type> <name>parameters</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <try>try <block>{<block_content>
            <return>return <expr><call><name><name>method</name><operator>.</operator><name>invoke</name></name><argument_list>(<argument><expr><name>object</name></expr></argument>, <argument><expr><name>parameters</name></expr></argument>)</argument_list></call></expr>;</return>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>InvocationTargetException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <if_stmt><if>if <condition>(<expr><call><name><name>e</name><operator>.</operator><name>getTargetException</name></name><argument_list>()</argument_list></call> <operator>instanceof</operator> <name>RuntimeException</name></expr>)</condition> <block>{<block_content>
                <throw>throw <expr><operator>(</operator><name>RuntimeException</name><operator>)</operator><call><name><name>e</name><operator>.</operator><name>getTargetException</name></name><argument_list>()</argument_list></call></expr>;</throw>
            </block_content>}</block></if></if_stmt>

            <throw>throw <expr><operator>new</operator> <call><name>BuildException</name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getTargetException</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>BuildException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>
</unit>
