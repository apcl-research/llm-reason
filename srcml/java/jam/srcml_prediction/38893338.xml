<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/18897292.java">  <function><type><specifier>public</specifier> <name>int</name></type> <name>read</name><parameter_list>(<parameter><decl><type><name><name>byte</name><index>[]</index></name></type> <name>b</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>off</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>len</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>pendLen</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
      <expr_stmt><expr><name>pend</name> <operator>=</operator> <call><name>readRecord</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

      <if_stmt><if>if <condition>(<expr><name>pend</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
        <return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
      </block_content>}</block></if></if_stmt>

      <expr_stmt><expr><name>pendStart</name>   <operator>=</operator> <literal type="number">0</literal></expr>;</expr_stmt>
      <expr_stmt><expr><name>pendLen</name>     <operator>=</operator> <name><name>pend</name><operator>.</operator><name>length</name></name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <decl_stmt><decl><type><name>int</name></type> <name>ret</name> <init>= <expr><ternary><condition><expr><operator>(</operator><name>len</name> <operator>&lt;</operator> <name>pendLen</name><operator>)</operator></expr> ?</condition><then> <expr><name>len</name></expr> </then><else>: <expr><name>pendLen</name></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>arraycopy</name></name><argument_list>(<argument><expr><name>pend</name></expr></argument>, <argument><expr><name>pendStart</name></expr></argument>, <argument><expr><name>b</name></expr></argument>, <argument><expr><name>off</name></expr></argument>, <argument><expr><name>ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name>pendLen</name> <operator>-=</operator> <name>ret</name></expr>;</expr_stmt>
    <expr_stmt><expr><name>pendStart</name> <operator>+=</operator> <name>ret</name></expr>;</expr_stmt>

    <return>return <expr><name>ret</name></expr>;</return>
  </block_content>}</block></function>
</unit>
