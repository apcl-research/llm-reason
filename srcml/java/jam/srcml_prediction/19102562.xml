<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/46092629.java">	<function><type><specifier>protected</specifier> <name>String</name></type> <name>rawReadLine</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
		<decl_stmt><decl><type><name>String</name></type> <name>string</name> <init>= <expr><call><name><name>reader</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<comment type="line">// at end of file, string == null</comment>
		<comment type="line">// skip comment lines and empty lines</comment>
		<while>while <condition>(<expr><name>string</name> <operator>!=</operator> <literal type="null">null</literal>
				<operator>&amp;&amp;</operator> <operator>(</operator><call><name><name>string</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call> <operator>||</operator> <call><name><name>string</name><operator>.</operator><name>matches</name></name><argument_list>(<argument><expr><literal type="string">"[#;].*"</literal></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><name>string</name> <operator>=</operator> <call><name><name>reader</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></while>
		<if_stmt><if>if <condition>(<expr><name>string</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
			<throw>throw <expr><operator>new</operator> <call><name>EOFException</name><argument_list>(<argument><expr><literal type="string">"end of file reached"</literal></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
		<if_stmt><if>if <condition>(<expr><call><name><name>string</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><literal type="string">"%"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
			<return>return <expr><literal type="null">null</literal></expr>;</return></block_content></block></if></if_stmt>
		<if_stmt><if>if <condition>(<expr><call><name><name>string</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><literal type="string">" %"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
			<return>return <expr><literal type="string">""</literal></expr>;</return></block_content></block></if></if_stmt>
		<return>return <expr><name>string</name></expr>;</return>
	</block_content>}</block></function>
</unit>
