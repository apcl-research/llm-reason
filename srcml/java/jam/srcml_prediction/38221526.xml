<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/38222696.java">  <function><type><specifier>public</specifier> <name>void</name></type> <name>putModuleLater</name><parameter_list>(<parameter><decl><type><name>CModule</name></type> <name>parent</name></decl></parameter>, <parameter><decl><type><name>CModule</name></type> <name>module</name></decl></parameter>, <parameter><decl><type><name>Map</name></type> <name>params</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>CModuleHolder</name></type> <name>holder</name> <init>= <expr><operator>new</operator> <call><name>CModuleHolder</name><argument_list>(<argument><expr><name>parent</name></expr></argument>, <argument><expr><name>module</name></expr></argument>, <argument><expr><name>params</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name>SwingUtilities</name><operator>.</operator><name>invokeLater</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>CMainFormRunnable</name></super><argument_list>(<argument><expr><name>this</name></expr></argument>, <argument><expr><name>holder</name></expr></argument>)</argument_list> <block>{
      <function><type><specifier>public</specifier> <name>void</name></type> <name>run</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>CModuleHolder</name></type> <name>holder</name> <init>= <expr><operator>(</operator><name>CModuleHolder</name><operator>)</operator> <name>obj</name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>mainForm</name><operator>.</operator><name>putModule</name></name><argument_list>(<argument><expr><name><name>holder</name><operator>.</operator><name>parent</name></name></expr></argument>, <argument><expr><name><name>holder</name><operator>.</operator><name>module</name></name></expr></argument>, <argument><expr><operator>(</operator><name>Map</name><operator>)</operator> <name><name>holder</name><operator>.</operator><name>optional</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></function>
    }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  </block_content>}</block></function>
</unit>
