<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/22352983.java">  <function><type><specifier>private</specifier> <name>void</name></type> <name>removeOutdatedUnits</name><parameter_list>(<parameter><decl><type><name><name>SikSearchResultList</name><argument_list type="generic">&lt;<argument><name>Unit</name></argument>&gt;</argument_list></name></type> <name>units</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>Date</name></type> <name>now</name> <init>= <expr><call><name><name>TimeUtil</name><operator>.</operator><name>asDate</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>Unit</name></argument>&gt;</argument_list></name></type> <name>iterator</name> <init>= <expr><call><name><name>units</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><call><name><name>iterator</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>;</condition><incr/>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>Unit</name></type> <name>unit</name> <init>= <expr><call><name><name>iterator</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><call><name><name>unit</name><operator>.</operator><name>getHsaEndDate</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>now</name><operator>.</operator><name>after</name></name><argument_list>(<argument><expr><call><name><name>unit</name><operator>.</operator><name>getHsaEndDate</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <expr_stmt><expr><call><name><name>iterator</name><operator>.</operator><name>remove</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
  </block_content>}</block></function>
</unit>
