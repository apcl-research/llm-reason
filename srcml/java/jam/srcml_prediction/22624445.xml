<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/22623963.java">	<function><type><specifier>protected</specifier> <name>String</name></type> <name>getValueAtPath</name><parameter_list>(<parameter><decl><type><name>Node</name></type> <name>baseElement</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>relativePath</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
		<decl_stmt><decl><type><name>Node</name></type> <name>node</name> <init>= <expr><call><name><name>baseElement</name><operator>.</operator><name>selectSingleNode</name></name><argument_list>(<argument><expr><name>relativePath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt><if>if <condition>(<expr><name>node</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
			<throw>throw <expr><operator>new</operator> <call><name>Exception</name><argument_list>(<argument><expr><literal type="string">"node not found at relative path: "</literal> <operator>+</operator> <name>relativePath</name></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
		<decl_stmt><decl><type><name>String</name></type> <name>ret</name> <init>= <expr><call><name><name>node</name><operator>.</operator><name>getText</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt><if>if <condition>(<expr><name>ret</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><call><name>prtln</name><argument_list>(<argument><expr><literal type="string">"WARNING: text not found for node at relative path: "</literal> <operator>+</operator> <name>relativePath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return>return <expr><name>ret</name></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<return>return <expr><call><name><name>ret</name><operator>.</operator><name>trim</name></name><argument_list>()</argument_list></call></expr>;</return>
	</block_content>}</block></function>
</unit>
