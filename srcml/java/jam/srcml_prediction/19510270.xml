<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/19509094.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>testProductTypeLeftRightSpecialization</name><parameter_list>()</parameter_list> <block>{<block_content>
		<try>try <block>{<block_content>
			<decl_stmt><decl><type><specifier>final</specifier> <name>ProductType</name></type> <name>pType</name> <init>= <expr><call><name><name>ff</name><operator>.</operator><name>makeProductType</name></name><argument_list>(<argument><expr><name>S</name></expr></argument>, <argument><expr><name>T</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name>spec</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>S</name></expr></argument>, <argument><expr><name>U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>spec</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>T</name></expr></argument>, <argument><expr><name>V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><specifier>final</specifier> <name>Type</name></type> <name>specialType</name> <init>= <expr><call><name><name>pType</name><operator>.</operator><name>specialize</name></name><argument_list>(<argument><expr><name>spec</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><call><name><name>ff</name><operator>.</operator><name>makeProductType</name></name><argument_list>(<argument><expr><name>U</name></expr></argument>, <argument><expr><name>V</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name>specialType</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IllegalArgumentException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
			<expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"Should not have raised an exception"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>
</unit>
