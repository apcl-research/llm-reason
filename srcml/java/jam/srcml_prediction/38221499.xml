<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/50662629.java">  <function><type><specifier>public</specifier> <name>Iterator</name></type> <name>getModulesByParent</name><parameter_list>(<parameter><decl><type><name>CModule</name></type> <name>parent</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>ArrayList</name></type> <name>array</name> <init>= <expr><operator>new</operator> <call><name>ArrayList</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>modules</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>CModuleHolder</name></type> <name>holder</name> <init>= <expr><operator>(</operator><name>CModuleHolder</name><operator>)</operator> <call><name><name>modules</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><name><name>holder</name><operator>.</operator><name>parent</name></name> <operator>==</operator> <name>parent</name></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>array</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name><name>holder</name><operator>.</operator><name>module</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <return>return <expr><call><name><name>array</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>
</unit>
