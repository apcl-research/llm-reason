<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/26014883.java">    <function><type><specifier>public</specifier> <name>TransportCandidate</name></type> <name>getPreferredCandidate</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>TransportCandidate</name></type> <name>result</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name>ArrayList</name></type> <name>cands</name> <init>= <expr><operator>(</operator><name>ArrayList</name><operator>)</operator> <call><name>getCandidatesList</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><call><name><name>cands</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>Collections</name><operator>.</operator><name>sort</name></name><argument_list>(<argument><expr><name>cands</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="line">// Return the last candidate</comment>
            <expr_stmt><expr><name>result</name> <operator>=</operator> <operator>(</operator><name>TransportCandidate</name><operator>)</operator> <call><name><name>cands</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>cands</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name>LOGGER</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Result: "</literal> <operator>+</operator> <call><name><name>result</name><operator>.</operator><name>getIp</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <return>return <expr><name>result</name></expr>;</return>
    </block_content>}</block></function>
</unit>
