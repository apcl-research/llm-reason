<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/10992783.java">    <function><type><specifier>protected</specifier> <name>void</name></type> <name>testGetDescriptorBase</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>Class</name></type> <name>type</name></decl></parameter>)</parameter_list> <block>{<block_content>

        <try>try <block>{<block_content>
            <decl_stmt><decl><type><name>DynaProperty</name></type> <name>descriptor</name> <init>=
                    <expr><call><name><name>dynaForm</name><operator>.</operator><name>getDynaClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getDynaProperty</name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name>assertNotNull</name><argument_list>(<argument><expr><literal type="string">"Got descriptor"</literal></expr></argument>, <argument><expr><name>descriptor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><literal type="string">"Got correct type"</literal></expr></argument>, <argument><expr><name>type</name></expr></argument>, <argument><expr><call><name><name>descriptor</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Throwable</name></type> <name>t</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name>fail</name><argument_list>(<argument><expr><literal type="string">"Threw an exception: "</literal> <operator>+</operator> <name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>

    </block_content>}</block></function>
</unit>
