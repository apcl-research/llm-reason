<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/9860963.java">  <function><type><specifier>public</specifier> <name>ProverRepresentative</name></type> <name>getProverRepForName</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>aName</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>ProverRepresentative</name></type> <name>result</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name><name>Class</name><argument_list type="generic">&lt;<argument><name>?</name> <extends>extends <name>ProverRepresentative</name></extends></argument>&gt;</argument_list></name></type> <name>lClass</name> <init>= <expr><call><name><name>proverReps</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>aName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>lClass</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
      <try>try <block>{<block_content>
        <expr_stmt><expr><name>result</name> <operator>=</operator> <call><name><name>lClass</name><operator>.</operator><name>newInstance</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>setDefault</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>InstantiationException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <comment type="line">// Ignore</comment>
      </block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>IllegalAccessException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <comment type="line">// Ignore</comment>
      </block_content>}</block></catch></try>
    </block_content>}</block></if></if_stmt>

    <return>return <expr><name>result</name></expr>;</return>
  </block_content>}</block></function>
</unit>
