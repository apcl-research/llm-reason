<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/51344891.java">    <function><type><specifier>public</specifier> <name>Object</name></type> <name>create</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>Configuration</name></type> <name>conf</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>IChannel</name></type> <name>aChannel</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>JCastException</name></expr></argument>, <argument><expr><name>ConfigurationException</name></expr></argument></throws> <block>{<block_content>

        <if_stmt><if>if <condition>( <expr><literal type="null">null</literal> <operator>==</operator> <name>conf</name> <operator>&amp;&amp;</operator> <literal type="null">null</literal> <operator>==</operator> <name>aChannel</name></expr>)</condition><block type="pseudo"><block_content>
            <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>( <argument><expr><literal type="string">"Parameters can not be null!"</literal></expr></argument> )</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
        
        <decl_stmt><decl><type><name>String</name></type> <name>sourceThreadName</name> <init>= <expr><call><name><name>conf</name><operator>.</operator><name>getChild</name></name><argument_list>(<argument><expr><literal type="string">"type"</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>getValue</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        
        <decl_stmt><decl><type><name>Object</name></type> <name>sourceThread</name> <init>= <expr><call><name>create</name><argument_list>(<argument><expr><name>sourceThreadName</name></expr></argument>, <argument><expr><name>aChannel</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><operator>(</operator> <operator>(</operator><name>Configurable</name><operator>)</operator><name>sourceThread</name> <operator>)</operator><operator>.</operator><call><name>configure</name><argument_list>(<argument><expr><name>conf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        <return>return <expr><name>sourceThread</name></expr>;</return>
        
    </block_content>}</block></function>
</unit>
