<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/21925891.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>addToExtends</name><parameter_list>(<parameter><decl><type><name>ExtendRelation</name></type> <name>euc</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<comment type="line">// *TODO*</comment>
		<expr_stmt><expr><call><name><name>extend_ucases</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>euc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>ExtendUseCase</name></type> <name>extuc</name> <init>= <expr><call><name><name>euc</name><operator>.</operator><name>getExtendUseCase</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for>for <control>(<init><decl><type><name>Iterator</name></type> <name>i</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>getExtensionPoints</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><call><name><name>i</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>;</condition><incr/>)</control> <block>{<block_content>
			<decl_stmt><decl><type><name>ExtensionPoint</name></type> <name>ep</name> <init>= <expr><operator>(</operator><name>ExtensionPoint</name><operator>)</operator><call><name><name>i</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name>Part</name></type> <name>p</name> <init>= <expr><call><name><name>extuc</name><operator>.</operator><name>findPart</name></name><argument_list>(<argument><expr><call><name><name>ep</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt><if>if <condition>(<expr><name>p</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
				<expr_stmt><expr><call><name><name>ep</name><operator>.</operator><name>setAsPart</name></name><argument_list>(<argument><expr><call><name><name>euc</name><operator>.</operator><name>getExtendCondition</name></name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><name>p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>
</unit>
