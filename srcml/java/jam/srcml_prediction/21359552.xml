<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/41602783.java">    <function><type><specifier>private</specifier> <name>void</name></type> <name>updateItems</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>MainFrame</name></type> <name>frame</name> <init>= <expr><name><name>Context</name><operator>.</operator><name>mainFrame</name></name></expr></init></decl>;</decl_stmt>
        
        <decl_stmt><decl><type><name>boolean</name></type> <name>queuePaused</name> <init>= <expr><call><name><name>queue</name><operator>.</operator><name>isPaused</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>pauseQueueItem</name><operator>.</operator><name>setLabel</name></name><argument_list>(<argument><expr><ternary><condition><expr><name>queuePaused</name></expr> ?</condition><then> <expr><name>unpauseQueue</name></expr> </then><else>: <expr><name>pauseQueue</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line">//visible if visible and not iconified</comment>
        <decl_stmt><decl><type><name>boolean</name></type> <name>visible</name> <init>= <expr><call><name><name>frame</name><operator>.</operator><name>isVisible</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <operator>(</operator><call><name><name>frame</name><operator>.</operator><name>getExtendedState</name></name><argument_list>()</argument_list></call> <operator>&amp;</operator> <name><name>JFrame</name><operator>.</operator><name>ICONIFIED</name></name><operator>)</operator> <operator>==</operator> <literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>toggleItem</name><operator>.</operator><name>setLabel</name></name><argument_list>(<argument><expr><ternary><condition><expr><name>visible</name></expr> ?</condition><then> <expr><name>hideWindow</name></expr> </then><else>: <expr><name>showWindow</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
</unit>
