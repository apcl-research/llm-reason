<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/19401851.java">    <function><type><specifier>public</specifier> <name>void</name></type> <name>testSetGetIdentifyingName</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type> <name>name</name> <init>= <expr><literal type="string">"foo"</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>name2</name> <init>= <expr><literal type="string">"notFoo"</literal></expr></init></decl>;</decl_stmt>
        <try>try <block>{<block_content>
            
            <expr_stmt><expr><call><name><name>m_alt</name><operator>.</operator><name>setIdentifyingName</name></name><argument_list>( <argument><expr><name>name</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>( <argument><expr><literal type="string">"foo"</literal></expr></argument>, <argument><expr><call><name><name>m_alt</name><operator>.</operator><name>getIdentifyingName</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name>assertEquals</name><argument_list>( <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><operator>(</operator> <name>name2</name> <operator>!=</operator> <call><name><name>m_alt</name><operator>.</operator><name>getIdentifyingName</name></name><argument_list>()</argument_list></call> <operator>)</operator></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            
        </block_content>}</block> <catch>catch <parameter_list>( <parameter><decl><type><specifier>final</specifier> <name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            
            <expr_stmt><expr><call><name>fail</name><argument_list>( <argument><expr><call><name><name>e</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            
        </block_content>}</block></catch></try>
    </block_content>}</block></function>
</unit>
