<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/9589996.java">    <function><type><specifier>private</specifier> <name>void</name></type> <name>expandNodePath</name><parameter_list>(<parameter><decl><type><name>TreeNode</name></type> <name>node</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><operator>(</operator><name>node</name> <operator>instanceof</operator> <name>Contact</name><operator>)</operator> <operator>&amp;&amp;</operator> <name>useGroups</name></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>Contact</name></type> <name>c</name> <init>= <expr><operator>(</operator><name>Contact</name><operator>)</operator><name>node</name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Protocol</name></type> <name>p</name> <init>= <expr><call><name><name>c</name><operator>.</operator><name>getProtocol</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>!=</operator> <name>p</name></expr>)</condition> <block>{<block_content>
                <decl_stmt><decl><type><name>Group</name></type> <name>group</name> <init>= <expr><call><name><name>p</name><operator>.</operator><name>getGroupById</name></name><argument_list>(<argument><expr><call><name><name>c</name><operator>.</operator><name>getGroupId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><literal type="null">null</literal> <operator>!=</operator> <name>group</name></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><call><name><name>group</name><operator>.</operator><name>setExpandFlag</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></function>
</unit>
