<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/48452783.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>seedRandom</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>seed</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<try>try <block>{<block_content>
			<decl_stmt><decl><type><name>Statement</name></type> <name>stmt</name> <init>= <expr><call><name><name>con</name><operator>.</operator><name>createStatement</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name>stmt</name><operator>.</operator><name>executeQuery</name></name><argument_list>(<argument><expr><literal type="string">"SELECT RAND("</literal> <operator>+</operator> <name>seed</name> <operator>+</operator> <literal type="string">")\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>stmt</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>SQLException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
			<expr_stmt><expr><call><name><name>ErrorLogger</name><operator>.</operator><name>writeExceptionToLogAndPrompt</name></name><argument_list>(<argument><expr><call><name>getName</name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><literal type="string">"SQL Exception seeding the random number generator."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>err</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Error in seeding random number generator."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>		
			<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>
</unit>
