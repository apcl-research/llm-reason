<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/22624091.java">	<function><type><specifier>protected</specifier> <name>String</name></type> <name>getCost</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
		<decl_stmt><decl><type><name>String</name></type> <name>val</name> <init>= <expr><literal type="string">""</literal></expr></init></decl>;</decl_stmt>
		<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>adnXmlDoc</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
			<decl_stmt><decl><type><name><name>String</name><index>[]</index></name></type> <name>cost</name> <init>= <expr><name><name>adnXmlDoc</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>getXmlFields</name><argument_list>(<argument><expr><literal type="string">"rights/cost"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<for>for <control>(<init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <name><name>cost</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
				<expr_stmt><expr><name>val</name> <operator>+=</operator> <literal type="string">" "</literal> <operator>+</operator> <name><name>cost</name><index>[<expr><name>j</name></expr>]</index></name><operator>.</operator><call><name>replaceAll</name><argument_list>(<argument><expr><literal type="string">":"</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call><operator>.</operator><call><name>replaceAll</name><argument_list>(<argument><expr><literal type="string">" "</literal></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
		</block_content>}</block></for>
		<comment type="line">//prtln("creators: " + val);</comment>
		<return>return <expr><call><name><name>val</name><operator>.</operator><name>trim</name></name><argument_list>()</argument_list></call></expr>;</return>
	</block_content>}</block></function>
</unit>
