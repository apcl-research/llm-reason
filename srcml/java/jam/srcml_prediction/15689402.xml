<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/37718073.java">    <function><type><specifier>public</specifier> <name>boolean</name></type> <name>get</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>index</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
        <try>try <block>{<block_content>
            <expr_stmt><expr><call><name>lock</name><argument_list>()</argument_list></call><operator>.</operator><call><name>acquireReadLock</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name>int</name></type> <name>value</name> <init>= <expr><call><name><name>mFile</name><operator>.</operator><name>read</name></name><argument_list>(<argument><expr><name>index</name> <operator>&gt;&gt;</operator> <literal type="number">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <return>return <expr><name>value</name> <operator>&gt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <operator>(</operator><operator>(</operator><name>value</name> <operator>&lt;&lt;</operator> <operator>(</operator><name>index</name> <operator>&amp;</operator> <literal type="number">7</literal><operator>)</operator><operator>)</operator> <operator>&amp;</operator> <literal type="number">0x80</literal><operator>)</operator> <operator>!=</operator> <literal type="number">0</literal></expr>;</return>
        </block_content>}</block>
        <catch>catch <parameter_list>(<parameter><decl><type><name>InterruptedException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>InterruptedIOException</name><argument_list>()</argument_list></call></expr>;</throw>
        </block_content>}</block></catch>
        <finally>finally <block>{<block_content>
            <expr_stmt><expr><call><name>lock</name><argument_list>()</argument_list></call><operator>.</operator><call><name>releaseLock</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></finally></try>
    </block_content>}</block></function>
</unit>
