<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/18915963.java">	<function><type><specifier>public</specifier> <name>ActivityDesigner</name></type> <name>createDesigner</name><parameter_list>()</parameter_list><block>{<block_content>
	
		<decl_stmt><decl><type><name>Class</name></type> <name>activityCls</name> <init>= <expr><call><name>getClass</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<comment type="line">//String clsName = UEngineUtil.getComponentClassName(activityCls, "designer");					</comment>
		<expr_stmt><expr><name>designer</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
		
		<try>try<block>{<block_content>
			<comment type="line">//Class designerCls = Thread.currentThread().getContextClassLoader().loadClass(clsName);</comment>
			<expr_stmt><expr><name>designer</name> <operator>=</operator> <operator>(</operator><name>ActivityDesigner</name><operator>)</operator><call><name><name>UEngineUtil</name><operator>.</operator><name>getComponentByEscalation</name></name><argument_list>(<argument><expr><name>activityCls</name></expr></argument>, <argument><expr><literal type="string">"designer"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>designer</name><operator>.</operator><name>setActivity</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		</block_content>}</block><catch>catch<parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list><block>{<block_content>
			<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
		
		<return>return <expr><name>designer</name></expr>;</return>
	</block_content>}</block></function>
</unit>
