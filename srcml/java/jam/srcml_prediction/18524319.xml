<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/34262796.java">    <function><type><specifier>public</specifier> <name>Input</name></type> <name>findButton</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>aButtonID</name></decl></parameter>)</parameter_list> <block>{<block_content>
    	<decl_stmt><decl><type><name>Input</name></type> <name>theInput</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    	
        <decl_stmt><decl><type><name>Vector</name></type> <name>theVector</name> <init>= <expr><call><name>findInputTypeButtons</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>ListIterator</name></type> <name>theListIterator</name> <init>= <expr><call><name><name>theVector</name><operator>.</operator><name>listIterator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <while>while <condition>(<expr><call><name><name>theListIterator</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
			<decl_stmt><decl><type><name>Input</name></type> <name>theNextInput</name> <init>= <expr><operator>(</operator><name>Input</name><operator>)</operator> <call><name><name>theListIterator</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt><if>if<condition>(<expr><call><name><name>theNextInput</name><operator>.</operator><name>getID</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><name>aButtonID</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
				<expr_stmt><expr><name>theInput</name> <operator>=</operator> <name>theNextInput</name></expr>;</expr_stmt>
				<break>break;</break>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></while>
        <return>return <expr><name>theInput</name></expr>;</return>
    </block_content>}</block></function>
</unit>
