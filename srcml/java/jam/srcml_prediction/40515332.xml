<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/14392783.java">	<function><type><specifier>protected</specifier> <name>void</name></type> <name>setRangeMarkers</name><parameter_list>()</parameter_list><block>{<block_content>
		<decl_stmt><decl><type><name>String</name></type> <name>rangeMarkerParam</name> <init>= <expr><literal type="string">""</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <for>for <control>( <init><decl><type><name>Iterator</name></type> <name>it</name> <init>= <expr><call><name><name>rangeMarkers</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><call><name><name>it</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr/>)</control> 
        <block>{<block_content>
            <decl_stmt><decl><type><name>RangeMarker</name></type> <name>marker</name> <init>= <expr><operator>(</operator><name>RangeMarker</name><operator>)</operator><call><name><name>it</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name>rangeMarkerParam</name> <operator>+=</operator> <ternary><condition><expr><operator>(</operator><name>i</name><operator>++</operator> <operator>&gt;</operator> <literal type="number">0</literal> <operator>)</operator></expr> ?</condition><then> <expr><literal type="string">"|"</literal> <operator>+</operator> <call><name><name>marker</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr> </then><else>: <expr><call><name><name>marker</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></else></ternary></expr>;</expr_stmt>
		</block_content>}</block></for>
		<if_stmt><if>if <condition>(<expr><call><name><name>rangeMarkers</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block>{<block_content>
			<expr_stmt><expr><call><name>addParameter</name><argument_list>(<argument><expr><name>MARKER_PARAM</name></expr></argument>, <argument><expr><name>rangeMarkerParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></function>
</unit>
