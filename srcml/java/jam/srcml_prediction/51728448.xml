<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/31594096.java">    <function><type><specifier>private</specifier> <name>ArrayList</name></type> <name>getFunAppArgs</name><parameter_list>(<parameter><decl><type><name>Expr</name></type> <name>expr</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>ArrayList</name></type> <name>ret</name> <init>= <expr><operator>new</operator> <call><name>ArrayList</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>expr</name> <operator>=</operator> <call><name><name>expr</name><operator>.</operator><name>stripOutermostParens</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <while>while <condition>(<expr><name>expr</name> <operator>instanceof</operator> <name>FunApp</name></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>Expr</name></type> <name>func</name> <init>= <expr><operator>(</operator><operator>(</operator><name>FunApp</name><operator>)</operator><name>expr</name><operator>)</operator><operator>.</operator><call><name>getFunc</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name>Expr</name></type> <name>arg</name> <init>= <expr><operator>(</operator><operator>(</operator><name>FunApp</name><operator>)</operator><name>expr</name><operator>)</operator><operator>.</operator><call><name>getArg</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>ret</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>arg</name><operator>.</operator><name>stripOutermostParens</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>expr</name> <operator>=</operator> <call><name><name>func</name><operator>.</operator><name>stripOutermostParens</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></while>
        <return>return <expr><name>ret</name></expr>;</return>
    </block_content>}</block></function>
</unit>
