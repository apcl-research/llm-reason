<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/19482983.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>testExtendedExpression</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
		<decl_stmt><decl><type><specifier>final</specifier> <name>Expression</name></type> <name>expression</name> <init>= <expr><call><name><name>SOM</name><operator>.</operator><name>makeExtendedExpression</name></name><argument_list>(<argument><expr><name>barS</name></expr></argument>,
				<argument><expr><name><name>Arrays</name><operator>.</operator></name>&lt;<name>Expression</name><operator>&gt;</operator> <call><name>asList</name><argument_list>(<argument><expr><name>eA</name></expr></argument>, <argument><expr><name>eB</name></expr></argument>)</argument_list></call></expr></argument>,
				<argument><expr><name><name>Arrays</name><operator>.</operator></name>&lt;<name>Predicate</name><operator>&gt;</operator> <call><name>asList</name><argument_list>(<argument><expr><name>pA</name></expr></argument>, <argument><expr><name>pB</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>assertTrace</name><argument_list>(<argument><expr><name>expression</name></expr></argument>, <argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>assertTrace</name><argument_list>(<argument><expr><name>expression</name></expr></argument>, <argument><expr><literal type="string">"0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>assertTrace</name><argument_list>(<argument><expr><name>expression</name></expr></argument>, <argument><expr><literal type="string">"1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>assertTrace</name><argument_list>(<argument><expr><name>expression</name></expr></argument>, <argument><expr><literal type="string">"2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>assertTrace</name><argument_list>(<argument><expr><name>expression</name></expr></argument>, <argument><expr><literal type="string">"3"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>assertSkipChildrenOnce</name><argument_list>(<argument><expr><name>expression</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
</unit>
