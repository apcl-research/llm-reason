<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/28349996.java">    <function><type><specifier>public</specifier> <name>void</name></type> <name>updateAnalog</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>interval</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>interval</name> <operator>&lt;=</operator> <literal type="number">0</literal> <operator>||</operator> <name>interval</name> <operator>&gt;</operator> <name><name>Integer</name><operator>.</operator><name>MAX_VALUE</name></name></expr>)</condition> <block>{<block_content>
            <throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"Illegal interval"</literal></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></if></if_stmt>
        <if_stmt><if>if <condition>( <expr><name>aau</name> <operator>==</operator> <literal type="null">null</literal></expr> )</condition> <block>{<block_content>
            <expr_stmt><expr><name>aau</name> <operator>=</operator> <operator>new</operator> <call><name>AutoAnalogUpdater</name><argument_list>(<argument><expr><operator>(</operator><name>int</name><operator>)</operator> <name>interval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
            <if_stmt><if>if <condition>( <expr><name>interval</name> <operator>!=</operator> <call><name><name>aau</name><operator>.</operator><name>getInterval</name></name><argument_list>()</argument_list></call></expr> )</condition> <block>{<block_content>
                <expr_stmt><expr><call><name>interruptAutoUpdate</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name>updateAnalog</name><argument_list>(<argument><expr><name>interval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></function>
</unit>
