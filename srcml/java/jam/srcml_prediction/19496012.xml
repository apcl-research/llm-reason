<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/19492983.java">	<function><type><specifier>private</specifier> <name>void</name></type> <name>addComponentName</name><parameter_list>(<parameter><decl><type><name>IInternalElement</name></type> <name>root</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<comment type="line">// Print the Machine/Context name</comment>
		<expr_stmt><expr><call><name>beginLevel0</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><name>root</name> <operator>instanceof</operator> <name>IMachineRoot</name></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><call><name>bold</name><argument_list>(<argument><expr><literal type="string">"MACHINE"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><name>root</name> <operator>instanceof</operator> <name>IContextRoot</name></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><call><name>bold</name><argument_list>(<argument><expr><literal type="string">"CONTEXT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<expr_stmt><expr><call><name>append</name><argument_list>(<argument><expr><name>SPACE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>handle</name> <init>= <expr><call><name><name>root</name><operator>.</operator><name>getHandleIdentifier</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>rodinName</name> <init>= <expr><call><name><name>root</name><operator>.</operator><name>getRodinFile</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getBareName</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>append</name><argument_list>(<argument><expr><call><name>makeHyperlink</name><argument_list>(<argument><expr><name>handle</name></expr></argument>, <argument><expr><name>rodinName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>endLevel</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<return>return;</return>
	</block_content>}</block></function>
</unit>
