<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/18759983.java">    <function><type><specifier>public</specifier> <name>BigInteger</name></type> <name>getHashCode</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>String</name></type>   <name>stringHash</name> <init>= <expr><operator>new</operator> <call><name>String</name><argument_list>(<argument><expr><literal type="string">"0"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Iterator</name></type> <name>it</name> <init>= <expr><call><name><name>mainParts</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <while>while <condition>(<expr><call><name><name>it</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>StructuralConstraintGraphPart</name></type> <name>part</name> <init>= <expr><operator>(</operator><name>StructuralConstraintGraphPart</name><operator>)</operator> <call><name><name>it</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name>stringHash</name> <operator>=</operator> <call><name><name>stringHash</name><operator>.</operator><name>concat</name></name><argument_list>(<argument><expr><call><name><name>part</name><operator>.</operator><name>getHashCodeString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></while> <comment type="line">//while </comment>

        <return>return <expr><operator>new</operator> <call><name>BigInteger</name><argument_list>(<argument><expr><name>stringHash</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
</unit>
