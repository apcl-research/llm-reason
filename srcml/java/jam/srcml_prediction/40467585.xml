<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/37240545.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>setLimits</name><parameter_list>(<parameter><decl><type><name>float</name></type> <name>init</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>min</name></decl></parameter>, <parameter><decl><type><name>float</name></type> <name>max</name></decl></parameter>)</parameter_list><block>{<block_content>
		<expr_stmt><expr><name>minValue</name> <operator>=</operator> <call><name><name>Math</name><operator>.</operator><name>min</name></name><argument_list>(<argument><expr><name>min</name></expr></argument>, <argument><expr><name>max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>maxValue</name> <operator>=</operator> <call><name><name>Math</name><operator>.</operator><name>max</name></name><argument_list>(<argument><expr><name>min</name></expr></argument>, <argument><expr><name>max</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name>this</name><operator>.</operator><name>init</name></name> <operator>=</operator> <call><name><name>PApplet</name><operator>.</operator><name>constrain</name></name><argument_list>(<argument><expr><name>init</name></expr></argument>, <argument><expr><name>minValue</name></expr></argument>, <argument><expr><name>maxValue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><name>thumbTargetPos</name> <operator>=</operator> <name>thumbPos</name></expr>;</expr_stmt>
		<comment type="line">// Set the value immediately ignoring sufficiently</comment>
		<expr_stmt><expr><call><name>setValue</name><argument_list>(<argument><expr><name><name>this</name><operator>.</operator><name>init</name></name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>_valueType</name> <operator>=</operator> <name>INTEGER</name></expr>;</expr_stmt>
	</block_content>}</block></function>
</unit>
