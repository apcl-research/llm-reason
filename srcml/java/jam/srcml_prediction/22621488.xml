<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/22625891.java">	<function><type><specifier>protected</specifier> <name>void</name></type> <name>showSharedState</name><parameter_list>()</parameter_list> <block>{<block_content>
		<decl_stmt><decl><type><name>Set</name></type> <name>keys</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>sharedState</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>prtln</name><argument_list>(<argument><expr><literal type="string">"\nSharedState ("</literal> <operator>+</operator> <call><name><name>keys</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" keys)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for>for <control>(<init><decl><type><name>Iterator</name></type> <name>i</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>sharedState</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><call><name><name>i</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr/>)</control> <block>{<block_content>
			<decl_stmt><decl><type><name>String</name></type> <name>key</name> <init>= <expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>i</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name>Object</name></type> <name>value</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>sharedState</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name>prtln</name><argument_list>(<argument><expr><literal type="string">"\t"</literal> <operator>+</operator> <name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
		<expr_stmt><expr><call><name>prtln</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
</unit>
