<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/32087983.java"><function><type><specifier>public</specifier> <name>Point</name></type> <name>getSelection</name> <parameter_list>()</parameter_list> <block>{<block_content>
	<expr_stmt><expr><call><name>checkWidget</name> <argument_list>()</argument_list></call></expr>;</expr_stmt>
	<if_stmt><if>if <condition>(<expr><operator>(</operator><name>style</name> <operator>&amp;</operator> <name><name>SWT</name><operator>.</operator><name>DROP_DOWN</name></name><operator>)</operator> <operator>!=</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <operator>(</operator><name>style</name> <operator>&amp;</operator> <name><name>SWT</name><operator>.</operator><name>READ_ONLY</name></name><operator>)</operator> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
		<return>return <expr><operator>new</operator> <call><name>Point</name> <argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><call><name>getText</name><argument_list>()</argument_list></call><operator>.</operator><call><name>length</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></if></if_stmt>
  <decl_stmt><decl><type><name>CCombo</name></type> <name>cCombo</name> <init>= <expr><operator>(</operator><name>CCombo</name><operator>)</operator><name>handle</name></expr></init></decl>;</decl_stmt>
	<return>return <expr><operator>new</operator> <call><name>Point</name> <argument_list>(<argument><expr><call><name><name>cCombo</name><operator>.</operator><name>getEditorSelectionStart</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>cCombo</name><operator>.</operator><name>getEditorSelectionEnd</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
</block_content>}</block></function>
</unit>
