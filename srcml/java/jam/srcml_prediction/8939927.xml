<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/44182783.java">    <function><type><specifier>private</specifier> <name>void</name></type> <name>flushWrite</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>BadDescriptorException</name></expr></argument></throws> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>reading</name> <operator>||</operator> <operator>!</operator><call><name><name>modes</name><operator>.</operator><name>isWritable</name></name><argument_list>()</argument_list></call> <operator>||</operator> <call><name><name>buffer</name><operator>.</operator><name>position</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt> <comment type="line">// Don't bother</comment>
            
        <decl_stmt><decl><type><name>int</name></type> <name>len</name> <init>= <expr><call><name><name>buffer</name><operator>.</operator><name>position</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>buffer</name><operator>.</operator><name>flip</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>int</name></type> <name>n</name> <init>= <expr><call><name><name>descriptor</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if<condition>(<expr><name>n</name> <operator>!=</operator> <name>len</name></expr>)</condition> <block>{<block_content>
            <comment type="line">// TODO: check the return value here</comment>
        </block_content>}</block></if></if_stmt>

        <expr_stmt><expr><call><name><name>buffer</name><operator>.</operator><name>clear</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
</unit>
