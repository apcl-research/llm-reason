<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/26352983.java">    <function><type><specifier>public</specifier> <name>void</name></type> <name>addFileHeaderComment</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>comment</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>header</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>comment</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <call><name><name>comment</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
            <return>return;</return></block_content></block></if></if_stmt>
        
        <decl_stmt><decl><type><specifier>final</specifier> <name>Comment</name></type> <name>c</name> <init>=
                <expr><operator>(</operator><ternary><condition><expr><name>header</name></expr> ?</condition><then> <expr><operator>new</operator> <call><name>HeaderComment</name><argument_list>(<argument><expr><name>comment</name></expr></argument>)</argument_list></call></expr> </then><else>: <expr><operator>new</operator> <call><name>InlineComment</name><argument_list>(<argument><expr><name>comment</name></expr></argument>)</argument_list></call></expr></else></ternary><operator>)</operator></expr></init></decl>;</decl_stmt>
        
        <decl_stmt><decl><type><specifier>final</specifier> <name>GenericObject</name></type> <name>root</name> <init>= <expr><call><name>getRoot</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line">// avoid calling recursive methods more than once</comment>
        <expr_stmt><expr><call><name><name>root</name><operator>.</operator><name>generalComments</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>root</name><operator>.</operator><name>allWritable</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
</unit>
