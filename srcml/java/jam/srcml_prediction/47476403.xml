<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/47472983.java">	<function><type><specifier>protected</specifier> <name>void</name></type> <name>execute</name><parameter_list>(<parameter><decl><type><name>IProgressMonitor</name></type> <name>monitor</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>CoreException</name></expr></argument>, <argument><expr><name>InvocationTargetException</name></expr></argument>, <argument><expr><name>InterruptedException</name></expr></argument></throws> <block>{<block_content>

		<try>try <block>{<block_content>
			<expr_stmt><expr><call><name><name>monitor</name><operator>.</operator><name>beginTask</name></name><argument_list>(<argument><expr><name><name>PDEUIMessages</name><operator>.</operator><name>ConvertedProjectWizard_converting</name></name></expr></argument>, <argument><expr><name><name>projectsToConvert</name><operator>.</operator><name>length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>projectsToConvert</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
				<decl_stmt><decl><type><name>IProject</name></type> <name>projectToConvert</name> <init>= <expr><name><name>projectsToConvert</name><index>[<expr><name>i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><call><name>convertProject</name><argument_list>(<argument><expr><name>projectToConvert</name></expr></argument>, <argument><expr><name>monitor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name>monitor</name><operator>.</operator><name>worked</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></for>

		</block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>CoreException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
			<expr_stmt><expr><call><name><name>PDEPlugin</name><operator>.</operator><name>logException</name></name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch> <finally>finally <block>{<block_content>
			<expr_stmt><expr><call><name><name>monitor</name><operator>.</operator><name>done</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></finally></try>
	</block_content>}</block></function>
</unit>
