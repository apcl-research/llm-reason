<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/50440062.java"><function><type><specifier>private</specifier> <name>int</name></type> <name>nextInt</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>theMean</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<comment type="block">/* 
	 * Adapted from "Numericalberman in C".
	 */</comment>
  	<decl_stmt><decl><type><name>double</name></type> <name>xm</name> <init>= <expr><name>theMean</name></expr></init></decl>;</decl_stmt>
  	<decl_stmt><decl><type><name>double</name></type> <name>g</name> <init>= <expr><name><name>this</name><operator>.</operator><name>cached_g</name></name></expr></init></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><name>xm</name> <operator>==</operator> <operator>-</operator><literal type="number">1.0</literal></expr> )</condition><block type="pseudo"><block_content> <return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="line">// not defined</comment>
	<if_stmt><if>if <condition>(<expr><name>xm</name> <operator>&lt;</operator> <name>SWITCH_MEAN</name></expr> )</condition> <block>{<block_content>
		<decl_stmt><decl><type><name>int</name></type> <name>poisson</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>double</name></type> <name>product</name> <init>= <expr><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
		<do>do <block>{<block_content>
			<expr_stmt><expr><name>poisson</name><operator>++</operator></expr>;</expr_stmt>
			<expr_stmt><expr><name>product</name> <operator>*=</operator> <call><name><name>randomGenerator</name><operator>.</operator><name>raw</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> while <condition>( <expr><name>product</name> <operator>&gt;=</operator> <name>g</name></expr> )</condition>;</do>
		<comment type="line">// bug in CLHEP 1.4.0: was "} while ( product &gt; g );"</comment>
		<return>return <expr><name>poisson</name></expr>;</return>
	</block_content>}</block></if></if_stmt></block_content></block></function>
</unit>
