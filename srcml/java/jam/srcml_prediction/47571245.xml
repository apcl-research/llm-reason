<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/47591396.java">	<function><type><specifier>private</specifier> <name>String</name></type> <name>getSurfSpecies</name><parameter_list>()</parameter_list> <block>{<block_content>
		<decl_stmt><decl><type><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name></type> <name>potentialSpecies</name> <init>= <expr><operator>new</operator> <call><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name>String</name></argument>&gt;</argument_list></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<do>do <block>{<block_content>
			<for>for <control>(<init><decl><type><name>String</name></type> <name>surfspecies</name> <range>: <expr><call><name><name>m_nightPokemonChances</name><operator>.</operator><name>keySet</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
				<if_stmt><if>if <condition>(<expr><call><name><name>random</name><operator>.</operator><name>nextInt</name></name><argument_list>(<argument><expr><literal type="number">101</literal></expr></argument>)</argument_list></call> <operator>&lt;</operator> <call><name><name>m_nightPokemonChances</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>surfspecies</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
					<expr_stmt><expr><call><name><name>potentialSpecies</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>surfspecies</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
			</block_content>}</block></for>
		</block_content>}</block> while <condition>(<expr><call><name><name>potentialSpecies</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&lt;=</operator> <literal type="number">0</literal></expr>)</condition>;</do>
		<return>return <expr><call><name><name>potentialSpecies</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><call><name><name>random</name><operator>.</operator><name>nextInt</name></name><argument_list>(<argument><expr><call><name><name>potentialSpecies</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>
</unit>
