<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/3116896.java">   <function><type><specifier>public</specifier> <name>Graphics2D</name></type> <name>getDrawingArea</name><parameter_list>()</parameter_list> <block>{<block_content>

      <try>try <block>{<block_content>
         <synchronized>synchronized <init>(<expr><name>lock</name></expr>)</init> <block>{<block_content>
            <comment type="line">// wait until there is something to read</comment>
            <while>while <condition>(<expr><name>bi</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
               <expr_stmt><expr><call><name><name>lock</name><operator>.</operator><name>wait</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></while>

            <comment type="line">// we have the lock and state we're suspected</comment>
            <decl_stmt><decl><type><name>Graphics2D</name></type> <name>g2</name></decl>;</decl_stmt>

            <expr_stmt><expr><name>g2</name> <operator>=</operator> <call><name><name>bi</name><operator>.</operator><name>createGraphics</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <return>return <expr><name>g2</name></expr>;</return>
         </block_content>}</block></synchronized>
      </block_content>}</block>
      <catch>catch <parameter_list>(<parameter><decl><type><name>InterruptedException</name></type> <name>ie</name></decl></parameter>)</parameter_list> <block>{<block_content>
         <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"getDrawingarea : "</literal> <operator>+</operator> <call><name><name>ie</name><operator>.</operator><name>getMessage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
         <return>return <expr><literal type="null">null</literal></expr>;</return>
      </block_content>}</block></catch></try>
   </block_content>}</block></function>
</unit>
