<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/13482983.java">    <function><type><specifier>private</specifier> <name>void</name></type> <name>insertCode</name><parameter_list>(<parameter><decl><type><name>FlowGraph</name></type> <name>cfg</name></decl></parameter>, <parameter><decl><type><name>SSAConfiguration</name></type> <name>info</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>Iterator</name></type> <name>blocks</name> <init>= <expr><call><name><name>cfg</name><operator>.</operator><name>nodes</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <while>while <condition>(<expr><call><name><name>blocks</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>Block</name></type> <name>block</name> <init>= <expr><operator>(</operator><name>Block</name><operator>)</operator> <call><name><name>blocks</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name>PhiStmt</name></type> <name>phi</name> <init>= <expr><call><name><name>info</name><operator>.</operator><name>phiAtBlock</name></name><argument_list>(<argument><expr><name>block</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt><if>if <condition>(<expr><name>phi</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name><name>Assert</name><operator>.</operator><name>isFalse</name></name><argument_list>(<argument><expr><name>phi</name> <operator>instanceof</operator> <name>PhiReturnStmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name>block</name><operator>.</operator><name>tree</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>prependStmt</name><argument_list>(<argument><expr><name>phi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></while>
    </block_content>}</block></function>
</unit>
