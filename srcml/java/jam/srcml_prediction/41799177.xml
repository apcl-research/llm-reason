<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/28789963.java">    <function><type><specifier>public</specifier> <name>void</name></type> <name>test</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>testNumber</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Throwable</name></expr></argument></throws> <block>{<block_content>
        
        <switch>switch<condition>(<expr><name>testNumber</name></expr>)</condition> <block>{<block_content>
            <case>case <expr><literal type="number">0</literal></expr>:</case> <expr_stmt><expr><call><name>testCreate</name><argument_list>()</argument_list></call></expr>;</expr_stmt>               <break>break;</break>
            <case>case <expr><literal type="number">1</literal></expr>:</case> <expr_stmt><expr><call><name>testOpen</name><argument_list>()</argument_list></call></expr>;</expr_stmt>                 <break>break;</break>
            <case>case <expr><literal type="number">2</literal></expr>:</case> <expr_stmt><expr><call><name>testStore</name><argument_list>()</argument_list></call></expr>;</expr_stmt>                 <break>break;</break>
            <case>case <expr><literal type="number">3</literal></expr>:</case> <expr_stmt><expr><call><name>testRetrieveExistent</name><argument_list>()</argument_list></call></expr>;</expr_stmt>     <break>break;</break>
            <case>case <expr><literal type="number">4</literal></expr>:</case> <expr_stmt><expr><call><name>testRetrieveNotExistent</name><argument_list>()</argument_list></call></expr>;</expr_stmt>  <break>break;</break>
            <case>case <expr><literal type="number">5</literal></expr>:</case> <expr_stmt><expr><call><name>testStoreVector</name><argument_list>()</argument_list></call></expr>;</expr_stmt>          <break>break;</break>
            <case>case <expr><literal type="number">6</literal></expr>:</case> <expr_stmt><expr><call><name>testRetrieveVector</name><argument_list>()</argument_list></call></expr>;</expr_stmt>        <break>break;</break>
            <default>default:</default>                              <break>break;</break>
        </block_content>}</block></switch>        
    </block_content>}</block></function>
</unit>
