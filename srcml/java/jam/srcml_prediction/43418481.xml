<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/43420961.java">	<function><type><specifier>protected</specifier> <name>void</name></type> <name>checkAndActOnEnvironmentChanges</name><parameter_list>()</parameter_list> <block>{<block_content>
		<comment type="line">// --- Has the EnvironmentModel changed? ----------------</comment>
		<try>try <block>{<block_content>
			<decl_stmt><decl><type><name>SimulationServiceHelper</name></type> <name>simHelper</name> <init>= <expr><operator>(</operator><name>SimulationServiceHelper</name><operator>)</operator> <call><name>getHelper</name><argument_list>(<argument><expr><name><name>SimulationService</name><operator>.</operator><name>NAME</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name>EnvironmentModel</name></type> <name>tmpEnvMode</name> <init>=  <expr><call><name><name>simHelper</name><operator>.</operator><name>getEnvironmentModel</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt><if>if <condition>(<expr><name>tmpEnvMode</name><operator>!=</operator><literal type="null">null</literal></expr>)</condition> <block>{<block_content>
				<if_stmt><if>if <condition>(<expr><call><name><name>tmpEnvMode</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>myEnvironmentModel</name></expr></argument>)</argument_list></call><operator>==</operator><literal type="boolean">false</literal></expr>)</condition> <block>{<block_content>
					<expr_stmt><expr><call><name><name>this</name><operator>.</operator><name>onEnvironmentStimulus</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>	
				</block_content>}</block></if></if_stmt>				
			</block_content>}</block></if></if_stmt>
		</block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ServiceException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
			<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>
</unit>
