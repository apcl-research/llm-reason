<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/13984648.java">    <function><type><specifier>public</specifier> <name>void</name></type> <name>run</name><parameter_list>()</parameter_list><block>{<block_content>
	<while>while<condition>(<expr><name>run</name></expr>)</condition><block>{<block_content>
	    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>oldTimeStamp</name></name> <operator>=</operator> <name><name>this</name><operator>.</operator><name>curTimeStamp</name></name></expr>;</expr_stmt>
	    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>curTimeStamp</name></name> <operator>=</operator> <call><name><name>System</name><operator>.</operator><name>nanoTime</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
	    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>appLoopSpeed</name></name> <operator>=</operator> <name><name>this</name><operator>.</operator><name>curTimeStamp</name></name> <operator>-</operator> <name><name>this</name><operator>.</operator><name>oldTimeStamp</name></name></expr>;</expr_stmt>
	    <decl_stmt><decl><type><name>long</name></type> <name>appSpeedDiff</name> <init>= <expr><name><name>this</name><operator>.</operator><name>prefSpeed</name></name> <operator>-</operator> <name><name>this</name><operator>.</operator><name>appLoopSpeed</name></name></expr></init></decl>;</decl_stmt>
	    <if_stmt><if>if<condition>(<expr><name>appSpeedDiff</name><operator>&gt;</operator><literal type="number">0</literal></expr>)</condition><block>{<block_content>
		<try>try <block>{<block_content>
		    <expr_stmt><expr><call><name><name>Thread</name><operator>.</operator><name>sleep</name></name><argument_list>(<argument><expr><name>appSpeedDiff</name><operator>/</operator><literal type="number">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>InterruptedException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
		    <expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	    </block_content>}</block></if></if_stmt>
	</block_content>}</block></while>
    </block_content>}</block></function>
</unit>
