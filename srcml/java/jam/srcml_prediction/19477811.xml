<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/19509094.java">	<function><type><specifier>private</specifier> <name>void</name></type> <name>patchTypeEnvironment</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>CoreException</name></expr></argument></throws> <block>{<block_content>
		<if_stmt><if>if <condition>(<expr><call><name><name>concreteEventInfo</name><operator>.</operator><name>eventIsNew</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
			<return>return;</return></block_content></block></if></if_stmt>
		<decl_stmt><decl><type><name>IAbstractEventInfo</name></type> <name>abstractEventInfo</name> <init>= <expr><call><name><name>concreteEventInfo</name>
				<operator>.</operator><name>getAbstractEventInfos</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>get</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<for>for <control>(<init><decl><type><name>FreeIdentifier</name></type> <name>freeIdentifier</name> <range>: <expr><call><name><name>abstractEventInfo</name><operator>.</operator><name>getParameters</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
			<decl_stmt><decl><type><name>String</name></type> <name>name</name> <init>= <expr><call><name><name>freeIdentifier</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt><if>if <condition>(<expr><call><name><name>identifierSymbolTable</name><operator>.</operator><name>getSymbolInfoFromTop</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
				<continue>continue;</continue></block_content></block></if></if_stmt>
			<decl_stmt><decl><type><name>Type</name></type> <name>type</name> <init>= <expr><call><name><name>freeIdentifier</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name>typeEnvironment</name><operator>.</operator><name>addName</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>
</unit>
