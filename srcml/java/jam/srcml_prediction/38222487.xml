<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/50492783.java">  <function><type><specifier>public</specifier> <name>void</name></type> <name>loadFromStream</name><parameter_list>(<parameter><decl><type><name>InputStream</name></type> <name>stream</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
    <decl_stmt><decl><type><name>SAXParserFactory</name></type> <name>factory</name> <init>= <expr><call><name><name>SAXParserFactory</name><operator>.</operator><name>newInstance</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name>factory</name><operator>.</operator><name>setValidating</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name>SAXParser</name></type> <name>parser</name> <init>= <expr><call><name><name>factory</name><operator>.</operator><name>newSAXParser</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <try>try <block>{<block_content>
      <expr_stmt><expr><call><name><name>parser</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><name>stream</name></expr></argument>, <argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block>
    <catch>catch <parameter_list>(<parameter><decl><type><name>SAXException</name></type> <name>se</name></decl></parameter>)</parameter_list> <block>{<block_content>
      <if_stmt><if>if <condition>(<expr><call><name><name>se</name><operator>.</operator><name>getException</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
        <throw>throw <expr><call><name><name>se</name><operator>.</operator><name>getException</name></name><argument_list>()</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
      <throw>throw <expr><name>se</name></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>
</unit>
