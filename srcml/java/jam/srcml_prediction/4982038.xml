<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/17159996.java">    <function><type><specifier>protected</specifier> <name>boolean</name></type> <name>paymentExists</name><parameter_list>(<parameter><decl><type><name>Payment</name></type> <name>payment</name></decl></parameter>, <parameter><decl><type><name><name>Set</name><argument_list type="generic">&lt;<argument><name>Payment</name></argument>&gt;</argument_list></name></type> <name>payments</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>boolean</name></type> <name>found</name> <init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>Payment</name></argument>&gt;</argument_list></name></type> <name>it</name> <init>= <expr><call><name><name>payments</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <while>while <condition>(<expr><operator>(</operator><operator>!</operator><name>found</name><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><call><name><name>it</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>Payment</name></type> <name>exPayment</name> <init>= <expr><call><name><name>it</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><call><name><name>exPayment</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>==</operator> <call><name><name>payment</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
                <expr_stmt><expr><name>found</name> <operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
        </block_content>}</block></while>
        <return>return <expr><name>found</name></expr>;</return>
    </block_content>}</block></function>
</unit>
