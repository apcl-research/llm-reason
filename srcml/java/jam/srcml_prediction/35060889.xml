<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/34139996.java">	<function><type><specifier>private</specifier> <name>void</name></type> <name>updateHighlight</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
		<if_stmt><if>if<condition>( <expr><call><name><name>lastStartCorner</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>startCorner</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> 
				<call><name><name>lastOppositeCorner</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><name>oppositeCorner</name></expr></argument>)</argument_list></call></expr> )</condition><block type="pseudo"><block_content>
			<return>return;</return></block_content></block></if></if_stmt>
			
		<if_stmt><if>if<condition>( <expr><name><name>lastStartCorner</name><operator>.</operator><name>x</name></name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content>		
			<expr_stmt><expr><call><name><name>highlighter</name><operator>.</operator><name>unhighlightCells</name></name><argument_list>( <argument><expr><name>lastStartCorner</name></expr></argument>, <argument><expr><name>lastOppositeCorner</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		
		<if_stmt><if>if<condition>( <expr><name><name>startCorner</name><operator>.</operator><name>x</name></name> <operator>!=</operator> <operator>-</operator><literal type="number">1</literal></expr> )</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><call><name><name>highlighter</name><operator>.</operator><name>highlightCells</name></name><argument_list>( <argument><expr><name>startCorner</name></expr></argument>, <argument><expr><name>oppositeCorner</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		
		<expr_stmt><expr><call><name><name>lastStartCorner</name><operator>.</operator><name>copy</name></name><argument_list>(<argument><expr><name>startCorner</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>lastOppositeCorner</name><operator>.</operator><name>copy</name></name><argument_list>(<argument><expr><name>oppositeCorner</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>			
	</block_content>}</block></function>
</unit>
