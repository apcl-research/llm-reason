<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/43792783.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>testIsValid</name><parameter_list>()</parameter_list> <block>{<block_content>
		<expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name>isValid</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name>isValid</name><argument_list>(<argument><expr><literal type="string">"&amp;"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// below lower bound</comment>
		<expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name>isValid</name><argument_list>(<argument><expr><literal type="string">"'"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name>isValid</name><argument_list>(<argument><expr><literal type="string">";"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name>isValid</name><argument_list>(<argument><expr><literal type="string">"&lt;"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// invalid inside range</comment>
		<expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name>isValid</name><argument_list>(<argument><expr><literal type="string">"="</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>assertTrue</name><argument_list>(<argument><expr><call><name>isValid</name><argument_list>(<argument><expr><literal type="string">"~"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name>isValid</name><argument_list>(<argument><expr><literal type="string">"\u007f"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line">// above upper bound</comment>

		<expr_stmt><expr><call><name>assertFalse</name><argument_list>(<argument><expr><call><name>isValid</name><argument_list>(<argument><expr><literal type="string">"abc&lt;def"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
</unit>
