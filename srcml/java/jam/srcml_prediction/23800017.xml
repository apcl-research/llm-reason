<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/16642983.java">    <function><type><specifier>public</specifier> <name>Taxon</name></type> <name>getTaxonByCollectionobject</name><parameter_list>(<parameter><decl><type><name>Collectionobject</name></type> <name>object</name></decl></parameter>)</parameter_list> <block>{<block_content>

        <decl_stmt><decl><type><name>Query</name></type> <name>query</name> <init>= <expr><call><name><name>entityManager</name><operator>.</operator><name>createNamedQuery</name></name><argument_list>(<argument><expr><literal type="string">"Determination.findCurrentByCollectionobjectID"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"collectionObjectId"</literal></expr></argument>, <argument><expr><name>object</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>query</name><operator>.</operator><name>setParameter</name></name><argument_list>(<argument><expr><literal type="string">"isCurrent"</literal></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name>Determination</name></type> <name>taxon</name> <init>= <expr><operator>(</operator><name>Determination</name><operator>)</operator> <call><name><name>query</name><operator>.</operator><name>getSingleResult</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <return>return <expr><ternary><condition><expr><operator>(</operator><name>taxon</name> <operator>==</operator> <literal type="null">null</literal><operator>)</operator></expr> ?</condition><then> <expr><literal type="null">null</literal></expr> </then><else>: <expr><call><name><name>taxon</name><operator>.</operator><name>getTaxon</name></name><argument_list>()</argument_list></call></expr></else></ternary></expr>;</return>
    </block_content>}</block></function>
</unit>
