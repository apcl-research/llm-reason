<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/35280045.java">    <function><type><specifier>public</specifier> <name>void</name></type> <name>dirtyCrossProduct</name><parameter_list>(<parameter><decl><type><name>Vector3f</name></type> <name>toMultiply</name></decl></parameter>, <parameter><decl><type><name>Vector3f</name></type> <name>destination</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>float</name></type> <name>rx</name> <init>= <expr><name><name>this</name><operator>.</operator><name>y</name></name> <operator>*</operator> <name><name>toMultiply</name><operator>.</operator><name>z</name></name> <operator>-</operator> <name><name>this</name><operator>.</operator><name>z</name></name> <operator>*</operator> <name><name>toMultiply</name><operator>.</operator><name>y</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>float</name></type> <name>ry</name> <init>= <expr><name><name>this</name><operator>.</operator><name>z</name></name> <operator>*</operator> <name><name>toMultiply</name><operator>.</operator><name>x</name></name> <operator>-</operator> <name><name>this</name><operator>.</operator><name>x</name></name> <operator>*</operator> <name><name>toMultiply</name><operator>.</operator><name>z</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>float</name></type> <name>rz</name> <init>= <expr><name><name>this</name><operator>.</operator><name>x</name></name> <operator>*</operator> <name><name>toMultiply</name><operator>.</operator><name>y</name></name> <operator>-</operator> <name><name>this</name><operator>.</operator><name>y</name></name> <operator>*</operator> <name><name>toMultiply</name><operator>.</operator><name>x</name></name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name>destination</name><operator>.</operator><name>setXYZ</name></name><argument_list>(<argument><expr><name>rx</name></expr></argument>, <argument><expr><name>ry</name></expr></argument>, <argument><expr><name>rz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
</unit>
