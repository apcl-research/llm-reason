<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/10502783.java">    <function><type><specifier>public</specifier> <name>void</name></type> <name>initialise</name><parameter_list>()</parameter_list> <block>{<block_content>
        <expr_stmt><expr><name>projectProperties</name> <operator>=</operator> <call><name><name>PropertiesUtil</name><operator>.</operator><name>getProperties</name></name><argument_list>(<argument><expr><call><name><name>resources</name><operator>.</operator><name>getProject</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt><if>if <condition>(<expr><call><name><name>resources</name><operator>.</operator><name>getPrefix</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><name>properties</name> <operator>=</operator> <call><name>createProperties</name><argument_list>(<argument><expr><call><name><name>resources</name><operator>.</operator><name>getPrefix</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">"."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <expr_stmt><expr><name>globalProperties</name> <operator>=</operator> <call><name>createProperties</name><argument_list>(<argument><expr><literal type="string">"q.project."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>typedProjectProperties</name> <operator>=</operator> <operator>new</operator> <call><name>TypedProperties</name><argument_list>(<argument><expr><literal type="string">""</literal></expr></argument>, <argument><expr><name>projectProperties</name></expr></argument>, <argument><expr><call><name><name>resources</name><operator>.</operator><name>getProject</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>logger</name> <operator>=</operator> <call><name><name>resources</name><operator>.</operator><name>getLogger</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name>utils</name> <operator>=</operator> <operator>new</operator> <call><name>AntUtils</name><argument_list>(<argument><expr><call><name>getProject</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
</unit>
