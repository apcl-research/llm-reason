<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/26490547.java">  <function><type><specifier>public</specifier> <name>Object</name></type> <name>include</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>context</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>ResourceNotFoundException</name></expr></argument>, <argument><expr><name>IOException</name></expr></argument>, <argument><expr><name>Exception</name></expr></argument></throws><block>{<block_content>
    <decl_stmt><decl><type><name>InputStream</name></type> <name>is</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>
    <try>try<block>{<block_content>
      <decl_stmt><decl><type><name>Resource</name></type> <name>res</name> <init>= <expr><call><name>resolve</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><name>is</name> <operator>=</operator> <call><name><name>res</name><operator>.</operator><name>getInputStream</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <decl_stmt><decl><type><name>Object</name></type> <name>obj</name> <init>= <expr><call><name>doInclude</name><argument_list>(<argument><expr><name>is</name></expr></argument>, <argument><expr><name>context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <expr_stmt><expr><call><name>pop</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
      <return>return <expr><name>obj</name></expr>;</return>
    </block_content>}</block><finally>finally<block>{<block_content>
      <if_stmt><if>if<condition>(<expr><name>is</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>is</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></finally></try>
  </block_content>}</block></function>  
</unit>
