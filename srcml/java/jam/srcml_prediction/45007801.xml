<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/18262983.java">    <function><type><specifier>public</specifier> <name>int</name></type> <name>getNumberOfNetworks</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>int</name></type> <name>count</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

        <for>for <control>(<init><decl><type><name>int</name></type> <name>uid</name> <range>: <expr><call><name><name>c3Network</name><operator>.</operator><name>values</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>

            <try>try <block>{<block_content>
                <decl_stmt><decl><type><name>Unit</name></type> <name>master</name> <init>= <expr><call><name>getUnit</name><argument_list>(<argument><expr><name>uid</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>c3Network</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>uid</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>master</name><operator>.</operator><name>hasBeenC3LinkedTo</name></name><argument_list>(<argument><expr><name>this</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                    <expr_stmt><expr><name>count</name><operator>++</operator></expr>;</expr_stmt>
                </block_content>}</block></if></if_stmt>
            </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
            </block_content>}</block></catch></try>

        </block_content>}</block></for>

        <return>return <expr><call><name><name>Math</name><operator>.</operator><name>max</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><name>count</name></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
</unit>
