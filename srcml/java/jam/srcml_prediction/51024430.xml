<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/23192783.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>save</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>File</name></type> <name>file</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name><name>Collection</name><argument_list type="generic">&lt;<argument><name>EdgeMappingDescriptor</name></argument>&gt;</argument_list></name></type> <name>descriptors</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
		<decl_stmt><decl><type><name>FileTask</name></type> <name>task</name> <init>= <expr><operator>new</operator> <class><super><name>FileTask</name></super><argument_list>(<argument><expr><literal type="string">"Save file"</literal></expr></argument>)</argument_list> <block>{
			<function><annotation>@<name>Override</name></annotation>
			<type><specifier>public</specifier> <name>void</name></type> <name>processFile</name><parameter_list>()</parameter_list> <block>{<block_content>
				<try>try <block>{<block_content>
					<expr_stmt><expr><call><name>saveInternal</name><argument_list>(<argument><expr><name>file</name></expr></argument>, <argument><expr><name>descriptors</name></expr></argument>, <argument><expr><name>monitor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
					<expr_stmt><expr><name>exception</name> <operator>=</operator> <name>e</name></expr>;</expr_stmt>
				</block_content>}</block></catch></try>
			</block_content>}</block></function>
		}</block></class></expr></init></decl>;</decl_stmt>
		
		<expr_stmt><expr><call><name><name>TaskManager</name><operator>.</operator><name>executeTask</name></name><argument_list>(<argument><expr><name>task</name></expr></argument>, <argument><expr><call><name><name>OndexTaskConfig</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<if_stmt><if>if <condition>(<expr><call><name><name>task</name><operator>.</operator><name>getException</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
			<throw>throw <expr><call><name><name>task</name><operator>.</operator><name>getException</name></name><argument_list>()</argument_list></call></expr>;</throw>
		</block_content>}</block></if></if_stmt>
	</block_content>}</block></function>
</unit>
