<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/10370062.java">    <function><type><specifier>private</specifier> <name>void</name></type> <name>init</name><parameter_list>()</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"Running Broker.init().."</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <try>try <block>{<block_content>
            <expr_stmt><expr><name>serverSocket</name> <operator>=</operator> <operator>new</operator> <call><name>ServerSocket</name><argument_list>(<argument><expr><call><name><name>config</name><operator>.</operator><name>getLocalComPort</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>fatal</name></name><argument_list>(<argument><expr><literal type="string">"Unable to create server socket"</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <throw>throw <expr><operator>new</operator> <call><name>RuntimeException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
        </block_content>}</block></catch></try>

        <expr_stmt><expr><name>dataBase</name> <operator>=</operator> <operator>new</operator> <call><name>DataBase</name><argument_list>()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name>taskDispenser</name> <operator>=</operator> <operator>new</operator> <call><name>StandardTaskDispenser</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
</unit>
