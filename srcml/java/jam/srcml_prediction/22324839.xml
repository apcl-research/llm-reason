<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/37740961.java">    <function><type><specifier>public</specifier> <name>PersistentPeer</name></type> <name>getPeer</name> <parameter_list>(<parameter><decl><type><name>Object</name></type> <name>obj</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>NoPeerException</name></expr></argument></throws> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>obj</name> <operator>instanceof</operator> <name>PersistentPeer</name></expr>)</condition><block type="pseudo"><block_content> 
            <return>return <expr><operator>(</operator><name>PersistentPeer</name><operator>)</operator> <name>obj</name></expr>;</return></block_content></block></if>
        <else>else <block>{<block_content>
            <try>try <block>{<block_content>
                <decl_stmt><decl><type><name>Class</name></type> <name>c</name> <init>= <expr><call><name><name>Class</name><operator>.</operator><name>forName</name></name> <argument_list>(<argument><expr><call><name><name>obj</name><operator>.</operator><name>getClass</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call><operator>+</operator><literal type="string">"Peer"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <return>return <expr><operator>(</operator><name>PersistentPeer</name><operator>)</operator> <call><name><name>c</name><operator>.</operator><name>newInstance</name></name><argument_list>()</argument_list></call></expr>;</return>
            </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                <throw>throw <expr><operator>new</operator> <call><name>NoPeerException</name> <argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
            </block_content>}</block></catch></try>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></function>
</unit>
