<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/19489983.java">	<function><type><specifier>private</specifier> <name>void</name></type> <name>translateSetExtension</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>SetExtension</name></type> <name>expression</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<decl_stmt><decl><type><name><name>SMTTerm</name><index>[]</index></name></type> <name>children</name></decl>;</decl_stmt>
		<expr_stmt><expr><name>children</name> <operator>=</operator> <call><name>smtTerms</name><argument_list>(<argument><expr><call><name><name>expression</name><operator>.</operator><name>getMembers</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>macroName</name> <init>= <expr><call><name><name>signature</name><operator>.</operator><name>freshSymbolName</name></name><argument_list>(<argument><expr><name><name>SMTMacroSymbol</name><operator>.</operator><name>ENUM</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier>final</specifier> <name>Type</name></type> <name>setExtensionType</name> <init>= <expr><call><name><name>expression</name><operator>.</operator><name>getMembers</name></name><argument_list>()</argument_list></call><index>[<expr><literal type="number">0</literal></expr>]</index><operator>.</operator><call><name>getType</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

		<if_stmt><if>if <condition>(<expr><name>signature</name> <operator>instanceof</operator> <name>SMTSignatureV1_2Verit</name></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><call><name>translateSetExtensionV1_2</name><argument_list>(<argument><expr><name>expression</name></expr></argument>, <argument><expr><name>children</name></expr></argument>, <argument><expr><name>macroName</name></expr></argument>,
					<argument><expr><name>setExtensionType</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else>else <block>{<block_content>
			<expr_stmt><expr><call><name>translateSetExtensionV2_0</name><argument_list>(<argument><expr><name>expression</name></expr></argument>, <argument><expr><name>children</name></expr></argument>, <argument><expr><name>macroName</name></expr></argument>,
					<argument><expr><name>setExtensionType</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></function>
</unit>
