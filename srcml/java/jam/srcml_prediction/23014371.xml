<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/35289996.java">    <function><type><specifier>public</specifier> <name>void</name></type> <name>bindEffect</name><parameter_list>(<parameter><decl><type><name>Effect</name></type> <name>effect</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>GL</name></type> <name>gl</name> <init>= <expr><call><name><name>GLU</name><operator>.</operator><name>getCurrentGL</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if_stmt><if>if <condition>(<expr><name>effect</name> <operator>!=</operator> <name>currentEffect</name></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>OGLEffect</name></type> <name>oglEffect</name> <init>= <expr><operator>(</operator><name>OGLEffect</name><operator>)</operator> <name>effect</name></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><call><name><name>oglEffect</name><operator>.</operator><name>getNumberOfPasses</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
                <decl_stmt><decl><type><name>OGLPass</name></type> <name>first</name> <init>= <expr><operator>(</operator><name>OGLPass</name><operator>)</operator> <call><name><name>oglEffect</name><operator>.</operator><name>getPass</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name>gl</name><operator>.</operator><name>glUseProgram</name></name><argument_list>(<argument><expr><call><name><name>first</name><operator>.</operator><name>getProgramID</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name>currentEffect</name> <operator>=</operator> <name>effect</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></function>
</unit>
