<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/19505241.java">	<function><type><specifier>public</specifier> <name>Clause</name></type> <name>makeEquivalenceClause</name><parameter_list>(<parameter><decl><type><name>IOrigin</name></type> <name>origin</name></decl></parameter>, <parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>PredicateLiteral</name></argument>&gt;</argument_list></name></type> <name>predicates</name></decl></parameter>, <parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>EqualityLiteral</name></argument>&gt;</argument_list></name></type> <name>equalities</name></decl></parameter>, <parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>ArithmeticLiteral</name></argument>&gt;</argument_list></name></type> <name>arithmetic</name></decl></parameter>, <parameter><decl><type><name><name>List</name><argument_list type="generic">&lt;<argument><name>EqualityLiteral</name></argument>&gt;</argument_list></name></type> <name>conditions</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<assert>assert <expr><call><name><name>predicates</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>+</operator> <call><name><name>equalities</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>+</operator> <call><name><name>arithmetic</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">1</literal></expr>;</assert>
		
		<return>return <expr><operator>new</operator> <call><name>EquivalenceClause</name><argument_list>(<argument><expr><name>origin</name></expr></argument>, <argument><expr><name>predicates</name></expr></argument>, <argument><expr><name>equalities</name></expr></argument>, <argument><expr><name>arithmetic</name></expr></argument>, <argument><expr><name>conditions</name></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>
</unit>
