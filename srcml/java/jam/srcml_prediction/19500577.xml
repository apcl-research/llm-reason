<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/19492983.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>upgradePredicate</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>input</name></decl></parameter>, <parameter><decl><type><name><name>UpgradeResult</name><argument_list type="generic">&lt;<argument><name>Predicate</name></argument>&gt;</argument_list></name></type> <name>result</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<decl_stmt><decl><type><specifier>final</specifier> <name>FormulaFactory</name></type> <name>factory</name> <init>= <expr><call><name><name>result</name><operator>.</operator><name>getFactory</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier>final</specifier> <name>IParseResult</name></type> <name>parseResult</name> <init>= <expr><call><name><name>factory</name><operator>.</operator><name>parsePredicate</name></name><argument_list>(<argument><expr><name>input</name></expr></argument>,
				<argument><expr><name>sourceVersion</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt><if>if <condition>(<expr><call><name><name>parseResult</name><operator>.</operator><name>hasProblem</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><call><name>copyProblems</name><argument_list>(<argument><expr><name>parseResult</name></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>setUpgradeNeeded</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return>return;</return>
		</block_content>}</block></if></if_stmt>
		<decl_stmt><decl><type><specifier>final</specifier> <name>Predicate</name></type> <name>pred</name> <init>= <expr><call><name><name>parseResult</name><operator>.</operator><name>getParsedPredicate</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>upgrade</name><argument_list>(<argument><expr><name>input</name></expr></argument>, <argument><expr><name>pred</name></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
</unit>
