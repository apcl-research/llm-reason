<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/174927.java">    <function><type><specifier>private</specifier> <name>void</name></type> <name>enterNodeWaitingForInterpretation</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>node</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <expr_stmt><expr><call><name><name>nodesWaitingForInterpretation</name><operator>.</operator><name>push</name></name><argument_list>(<argument><expr><name>node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>dl</name><operator>.</operator><name>print</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"\nnodesWaitingForInterpretation.push "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt><if>if <condition>(<expr><name>node</name> <operator>==</operator> <name>NULL_SCNode</name></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>dl</name><operator>.</operator><name>print</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, <argument><expr><literal type="string">"null \n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
            <expr_stmt><expr><call><name><name>dl</name><operator>.</operator><name>print</name></name><argument_list>(<argument><expr><literal type="number">1</literal></expr></argument>, 
                     <argument><expr><name><name>Registry</name><operator>.</operator><name>nodeType</name><index>[<expr><operator>(</operator><operator>(</operator><name>SCNode</name><operator>)</operator> <name>node</name><operator>)</operator><operator>.</operator><name>typeID</name></expr>]</index></name><operator>.</operator><call><name>getTypeName</name><argument_list>()</argument_list></call> <operator>+</operator> 
                     <literal type="string">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></function>
</unit>
