<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/19058981.java">	<function><type><specifier>private</specifier> <name>void</name></type> <name>tableChanged_400_Update</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>start</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<decl_stmt><decl><type><name>LineNode</name></type> <name>node</name> <init>= <expr><call><name>findNode4LineNumber</name><argument_list>(<argument><expr><name>root</name></expr></argument>, <argument><expr><name>start</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<if_stmt><if>if <condition>(<expr><name>node</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><name>node</name> <operator>=</operator> <name>root</name></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>

		<while>while <condition>(<expr><name>node</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>node</name><operator>.</operator><name>getLineNumber</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <name>start</name></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><name>node</name> <operator>=</operator> <operator>(</operator><name>LineNode</name><operator>)</operator> <call><name><name>node</name><operator>.</operator><name>getNextNode</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></while>

<comment type="line">//		System.out.print("Update:: &gt;&gt; " + start + " &lt;&lt; ");</comment>

		<expr_stmt><expr><call><name>rebuildNode</name><argument_list>(<argument><expr><call><name>getParent</name><argument_list>(<argument><expr><name>node</name></expr></argument>, <argument><expr><name>start</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
</unit>
