<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/18642983.java">	<constructor><specifier>public</specifier> <name>RuleFileParser</name> <parameter_list>(<parameter><decl><type><name>String</name></type> <name>rflFilePath</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<expr_stmt><expr><name>m_rflFilePath</name> <operator>=</operator> <name>rflFilePath</name></expr>;</expr_stmt>
		<try>try <block>{<block_content>
			<decl_stmt><decl><type><name>DocumentBuilderFactory</name></type> <name>documentBuilderFactory</name> <init>= 
				<expr><call><name><name>DocumentBuilderFactory</name><operator>.</operator><name>newInstance</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name>DocumentBuilder</name></type> <name>documentBuilder</name> <init>= 
				<expr><call><name><name>documentBuilderFactory</name><operator>.</operator><name>newDocumentBuilder</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name>File</name></type> <name>xmlFile</name> <init>= <expr><operator>new</operator> <call><name>File</name><argument_list>(<argument><expr><name>m_rflFilePath</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name>m_document</name> <operator>=</operator> <call><name><name>documentBuilder</name><operator>.</operator><name>parse</name></name><argument_list>(<argument><expr><name>xmlFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		</block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>ParserConfigurationException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
			<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
			
		</block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>SAXException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
			<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
			
		</block_content>}</block></catch> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
			<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></constructor>
</unit>
