<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/50499858.java">  <function><type><specifier>private</specifier> <name>void</name></type> <name>supportMacOS</name><parameter_list>()</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><call><name><name>SwingEngine</name><operator>.</operator><name>isMacOSXSupported</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <call><name><name>SwingEngine</name><operator>.</operator><name>isMacOSX</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <try>try <block>{<block_content>
        <expr_stmt><expr><call><name><name>Application</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getMacApp</name><argument_list>()</argument_list></call><operator>.</operator><call><name>update</name><argument_list>(<argument><expr><name>mac_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Throwable</name></type> <name>t</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <comment type="line">// intentionally empty</comment>
    	<if_stmt><if>if<condition>( <expr><call><name><name>logger</name><operator>.</operator><name>isLoggable</name></name><argument_list>(<argument><expr><name><name>Level</name><operator>.</operator><name>FINE</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>  
    		<expr_stmt><expr><call><name><name>logger</name><operator>.</operator><name>log</name></name><argument_list>( <argument><expr><name><name>Level</name><operator>.</operator><name>WARNING</name></name></expr></argument>, <argument><expr><literal type="string">"supportMacOS invocation error"</literal></expr></argument>, <argument><expr><name>t</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
      </block_content>}</block></catch></try>

    </block_content>}</block></if></if_stmt>
  </block_content>}</block></function>
</unit>
