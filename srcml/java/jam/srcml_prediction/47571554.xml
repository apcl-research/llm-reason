<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/42267029.java">	<function><type><specifier>public</specifier> <name>NonPlayerChar</name></type> <name>getNPCAt</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>x</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>y</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<decl_stmt><decl><type><name>NonPlayerChar</name></type> <name>n</name></decl>;</decl_stmt>
		<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>m_npcs</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
			<expr_stmt><expr><name>n</name> <operator>=</operator> <call><name><name>m_npcs</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if_stmt><if>if <condition>(<expr><call><name><name>n</name><operator>.</operator><name>getX</name></name><argument_list>()</argument_list></call> <operator>/</operator> <literal type="number">32</literal> <operator>==</operator> <name>x</name> <operator>&amp;&amp;</operator> <operator>(</operator><call><name><name>n</name><operator>.</operator><name>getY</name></name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="number">8</literal><operator>)</operator> <operator>/</operator><literal type="number">32</literal> <operator>==</operator> <name>y</name></expr>)</condition><block type="pseudo"><block_content>
				<return>return <expr><name>n</name></expr>;</return></block_content></block></if></if_stmt>
		</block_content>}</block></for>
		<expr_stmt><expr><name>n</name> <operator>=</operator> <literal type="null">null</literal></expr>;</expr_stmt>
		<return>return <expr><name>n</name></expr>;</return>
	</block_content>}</block></function>
</unit>
