<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/13579983.java">	<function><type><specifier>private</specifier> <name>void</name></type> <name>createSpeedTable</name><parameter_list>(<parameter><decl><type><name>Simulation</name></type> <name>sim</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"=== Create TABLE ========================"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>ConditionTree</name></type> <name>table</name> <init>= <expr><operator>new</operator> <call><name>ConditionTree</name><argument_list>(<argument><expr><literal type="string">"airtraffic.speed"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>table</name><operator>.</operator><name>addLine</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>Object</name><index>[]</index></name> <block>{ <expr><operator>new</operator> <call><name>Float</name><argument_list>(<argument><expr><literal type="number">700</literal></expr></argument>)</argument_list></call></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>table</name><operator>.</operator><name>addLine</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>String</name><index>[]</index></name> <block>{ <expr><literal type="string">"DA-4567"</literal></expr> }</block></expr></argument>,
				<argument><expr><operator>new</operator> <name><name>Float</name><index>[]</index></name> <block>{ <expr><operator>new</operator> <call><name>Float</name><argument_list>(<argument><expr><literal type="number">800</literal></expr></argument>)</argument_list></call></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"\n"</literal> <operator>+</operator> <name>table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>sim</name><operator>.</operator><name>tables</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>add</name><argument_list>(<argument><expr><name>table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
</unit>
