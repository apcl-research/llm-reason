<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/50689983.java">  <function><type><specifier>private</specifier> <name>List</name></type> <name>memListForHier</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>hierIndex</name></decl></parameter>, <parameter><decl><type><name>List</name></type> <name>positions</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>List</name></type> <name>memList</name> <init>= <expr><operator>new</operator> <call><name>ArrayList</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <label><name>PositionLoop</name> :</label> <for>for <control>(<init><decl><type><name>Iterator</name></type> <name>iter</name> <init>= <expr><call><name><name>positions</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><call><name><name>iter</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>;</condition><incr/>)</control> <block>{<block_content>
      <decl_stmt><decl><type><name>Position</name></type> <name>pos</name> <init>= <expr><operator>(</operator><name>Position</name><operator>)</operator> <call><name><name>iter</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Member</name></type> <name>m</name> <init>= <expr><call><name><name>pos</name><operator>.</operator><name>getMembers</name></name><argument_list>()</argument_list></call><index>[<expr><name>hierIndex</name></expr>]</index></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>memList</name><operator>.</operator><name>contains</name></name><argument_list>(<argument><expr><name>m</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
        <expr_stmt><expr><call><name><name>memList</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>m</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></for>
    <return>return <expr><name>memList</name></expr>;</return>
  </block_content>}</block></function>
</unit>
