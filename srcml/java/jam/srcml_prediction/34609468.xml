<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/38790096.java">    <function><type><specifier>public</specifier> <name>void</name></type> <name>compact</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>int</name></type> <name>bitIndex</name> <init>= <expr><operator>(</operator><call><name>size</name><argument_list>()</argument_list></call> <operator>-</operator> <literal type="number">1</literal><operator>)</operator> <operator>*</operator> <name>numberOfBits</name></expr></init></decl>;</decl_stmt> 
        <decl_stmt><decl><type><name>int</name></type> <name>pos</name> <init>= <expr><name>bitIndex</name> <operator>&gt;&gt;</operator> <name>INDEX_SHIFT</name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name>pos</name><operator>++</operator></expr>;</expr_stmt>
        <if_stmt><if>if <condition>(<expr><name>pos</name> <operator>&lt;</operator> <name><name>data</name><operator>.</operator><name>length</name></name> <operator>-</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name><name>long</name><index>[]</index></name></type> <name>newData</name> <init>= <expr><operator>new</operator> <name><name>long</name><index>[<expr><name>pos</name> <operator>+</operator> <literal type="number">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>arraycopy</name></name><argument_list>(<argument><expr><name>data</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>newData</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>pos</name> <operator>+</operator> <literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name>data</name> <operator>=</operator> <name>newData</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></function>
</unit>
