<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/42762629.java">	<function><type><specifier>public</specifier> <name>Requirement</name></type> <name>parse</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>Reader</name></type> <name>reader</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws><block>{<block_content>
		<decl_stmt><decl><type><specifier>final</specifier> <name>BufferedReader</name></type> <name>reqReader</name> <init>= <expr><operator>new</operator> <call><name>BufferedReader</name><argument_list>(<argument><expr><name>reader</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier>final</specifier> <name>CompositeRequirement</name></type> <name>req</name> <init>= <expr><operator>new</operator> <call><name>CompositeRequirement</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>String</name></type> <name>line</name> <init>= <expr><call><name><name>reqReader</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<while>while<condition>(<expr><name>line</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block>{<block_content>
			<expr_stmt><expr><name>line</name> <operator>=</operator> <call><name><name>line</name><operator>.</operator><name>replaceAll</name></name><argument_list>(<argument><expr><name>COMMENT</name></expr></argument>, <argument><expr><name>EMPTY</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>trim</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
			<if_stmt><if>if<condition>(<expr><call><name><name>line</name><operator>.</operator><name>trim</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>length</name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block>{<block_content>
				<expr_stmt><expr><call><name><name>req</name><operator>.</operator><name>addRequirement</name></name><argument_list>(<argument><expr><call><name>buildRequirement</name><argument_list>(<argument><expr><name>line</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
			<expr_stmt><expr><name>line</name> <operator>=</operator> <call><name><name>reqReader</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></while>
		<return>return <expr><name>req</name></expr>;</return>
	</block_content>}</block></function>
</unit>
