<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/50931883.java">  <function><type><specifier>public</specifier> <name>Object</name></type> <name>parse</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>s</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>userPattern</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>FormatException</name></expr></argument></throws> <block>{<block_content>
    <try>try <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>regex</name> <init>= <expr><call><name><name>super</name><operator>.</operator><name>findPattern</name></name><argument_list>(<argument><expr><name>userPattern</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>RE</name></type> <name>re</name> <init>= <expr><operator>new</operator> <call><name>RE</name><argument_list>(<argument><expr><name>regex</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>re</name><operator>.</operator><name>match</name></name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <throw>throw <expr><operator>new</operator> <call><name>FormatException</name><argument_list>(<argument><expr><call><name>getErrorMessage</name><argument_list>(<argument><expr><name>s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw>
      </block_content>}</block></if></if_stmt>
      <return>return <expr><name>s</name></expr>;</return>
    </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>RESyntaxException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
			<expr_stmt><expr><call><name><name>logger</name><operator>.</operator><name>error</name></name><argument_list>(<argument><expr><literal type="string">"exception caught"</literal></expr></argument>, <argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <throw>throw <expr><operator>new</operator> <call><name>SoftException</name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</throw>
    </block_content>}</block></catch></try>
  </block_content>}</block></function>
</unit>
