<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/42390515.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>run</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IllegalArgumentException</name></expr></argument></throws> <block>{<block_content>
		<try>try <block>{<block_content>
			<decl_stmt><decl><type><specifier>final</specifier> <name>BufferedWriter</name></type> <name>bw</name> <init>= <expr><operator>new</operator> <call><name>BufferedWriter</name><argument_list>(<argument><expr><operator>new</operator> <call><name>OutputStreamWriter</name><argument_list>(<argument><expr><name>os</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><literal type="number">50</literal></expr></argument> <comment type="block">/*
																						 * keep
																					 * small
																					 */</comment>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">99</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&gt;=</operator> <literal type="number">0</literal></expr>;</condition> <incr><expr><name>i</name><operator>--</operator></expr></incr>)</control> <block>{<block_content>
				<expr_stmt><expr><call><name><name>bw</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><literal type="string">"Dummy counter: "</literal> <operator>+</operator> <name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name>bw</name><operator>.</operator><name>write</name></name><argument_list>(<argument><expr><name>lineSeparator</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></for>
			<expr_stmt><expr><call><name><name>bw</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>IOException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
			<throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><literal type="string">"IOException sending data to child process."</literal></expr></argument>)</argument_list></call></expr>;</throw>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>
</unit>
