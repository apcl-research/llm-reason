<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/31494583.java">    <function><type><specifier>protected</specifier> <name>void</name></type> <name>enableConstraintButtonsEditing</name><parameter_list>()</parameter_list> <block>{<block_content>
	<decl_stmt><decl><type><name>ConformanceConstraint</name></type> <name>c</name></decl>;</decl_stmt>
	<synchronized>synchronized<init>(<expr><name><name>gsc</name><operator>.</operator><name>constraints</name></name></expr>)</init> <block>{<block_content>
	    <decl_stmt><decl><type><name>Iterator</name></type> <name>i</name> <init>= <expr><call><name><name>gsc</name><operator>.</operator><name>constraints</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
	    <while>while <condition>(<expr><call><name><name>i</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
		<expr_stmt><expr><name>c</name> <operator>=</operator> <operator>(</operator><name>ConformanceConstraint</name><operator>)</operator> <call><name><name>i</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><operator>(</operator><name>c</name> <operator>instanceof</operator> <name>RangeConstraint</name><operator>)</operator> <operator>||</operator> <operator>(</operator><name>c</name> <operator>instanceof</operator> <name>ExponentialConstraint</name><operator>)</operator><operator>||</operator><operator>(</operator><name>c</name> <operator>instanceof</operator> <name>ProportionConstraint</name><operator>)</operator></expr>)</condition> <block>{<block_content>
		    <expr_stmt><expr><operator>(</operator><operator>(</operator><name>NodeGraphics</name><operator>)</operator> <name><name>c</name><operator>.</operator><name>graphObject</name></name><operator>)</operator><operator>.</operator><call><name><name>activator</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if> <else>else <block>{<block_content>
		    <expr_stmt><expr><operator>(</operator><operator>(</operator><name>NodeGraphics</name><operator>)</operator> <name><name>c</name><operator>.</operator><name>graphObject</name></name><operator>)</operator><operator>.</operator><call><name><name>activator</name><operator>.</operator><name>setEnabled</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>
	    </block_content>}</block></while>
	</block_content>}</block></synchronized>
    </block_content>}</block></function>
</unit>
