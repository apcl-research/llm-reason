<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/18790062.java">      <function><type><specifier>public</specifier> <name>int</name></type> <name>handleTreeNode</name><parameter_list>(<parameter><decl><type><name>TreeNode</name></type> <name>node</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>int</name></type> <name>iDim</name> <init>= <expr><call><name><name>node</name><operator>.</operator><name>getLevel</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>(<expr><name>iDim</name> <operator>==</operator> <name><name>Quax</name><operator>.</operator><name>this</name><operator>.</operator><name>nDimension</name></name></expr>)</condition><block type="pseudo"><block_content>
          <return>return <expr><name><name>TreeNodeCallback</name><operator>.</operator><name>BREAK</name></name></expr>;</return></block_content></block></if></if_stmt> <comment type="line">// bottom reached</comment>

        <if_stmt><if>if <condition>(<expr><call><name><name>node</name><operator>.</operator><name>getChildren</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>size</name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="number">1</literal></expr>)</condition> <block>{<block_content>
          <return>return <expr><name><name>TreeNodeCallback</name><operator>.</operator><name>CONTINUE</name></name></expr>;</return> <comment type="line">// continue next level</comment>
        </block_content>}</block></if> <else>else <block>{<block_content>
          <comment type="line">// more than one child - break out</comment>
          <expr_stmt><expr><name><name>Quax</name><operator>.</operator><name>this</name><operator>.</operator><name>qubonMode</name></name> <operator>=</operator> <literal type="boolean">false</literal></expr>;</expr_stmt>
          <return>return <expr><name><name>TreeNodeCallback</name><operator>.</operator><name>BREAK</name></name></expr>;</return>
        </block_content>}</block></else></if_stmt>
      </block_content>}</block></function>
</unit>
