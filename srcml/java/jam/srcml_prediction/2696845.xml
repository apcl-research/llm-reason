<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/24242696.java">	<function><type><specifier>private</specifier> <name>Group</name></type> <name>getNewGroup</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>recordName</name></decl></parameter>,<parameter><decl><type><name>Character</name></type> <name>aminoCode1</name></decl></parameter>)</parameter_list> <block>{<block_content>

		<decl_stmt><decl><type><name>Group</name></type> <name>group</name></decl>;</decl_stmt>
		<if_stmt><if>if <condition>( <expr><call><name><name>recordName</name><operator>.</operator><name>equals</name></name><argument_list>(<argument><expr><literal type="string">"ATOM"</literal></expr></argument>)</argument_list></call></expr> )</condition> <block>{<block_content>
			<if_stmt><if>if <condition>(<expr><name>aminoCode1</name><operator>!=</operator><literal type="null">null</literal></expr>)</condition> <block>{<block_content>

				<decl_stmt><decl><type><name>AminoAcidImpl</name></type> <name>aa</name> <init>= <expr><operator>new</operator> <call><name>AminoAcidImpl</name><argument_list>()</argument_list></call></expr></init></decl> ;</decl_stmt>
				<expr_stmt><expr><call><name><name>aa</name><operator>.</operator><name>setAminoType</name></name><argument_list>(<argument><expr><name>aminoCode1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name>group</name> <operator>=</operator> <name>aa</name></expr> ;</expr_stmt>
			</block_content>}</block></if> <else>else <block>{<block_content>
				<comment type="line">// it is a peptotidee</comment>
				<decl_stmt><decl><type><name>NucleotideImpl</name></type> <name>nu</name> <init>= <expr><operator>new</operator> <call><name>NucleotideImpl</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name>group</name> <operator>=</operator> <name>nu</name></expr>;</expr_stmt>
			</block_content>}</block></else></if_stmt>
		</block_content>}</block></if>
		<else>else <block>{<block_content>
			<expr_stmt><expr><name>group</name> <operator>=</operator> <operator>new</operator> <call><name>HetatomImpl</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>
		<comment type="line">//System.out.println("new group type: "+ group.getType() );</comment>
		<return>return  <expr><name>group</name></expr> ;</return>
	</block_content>}</block></function>
</unit>
