<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/47472983.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>removeAssociations</name><parameter_list>(<parameter><decl><type><name><name>Object</name><index>[]</index></name></type> <name>associations</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<if_stmt><if>if <condition>(<expr><name>associations</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
			<throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><name><name>ExceptionMessages</name><operator>.</operator><name>NULL_ARGUMENT</name></name></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
		<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>ElementManager</name><operator>.</operator><name>isElementArrayOfType</name></name><argument_list>(<argument><expr><name>associations</name></expr></argument>,
				<argument><expr><name><name>IAssociation</name><operator>.</operator><name>ELEMENT_TYPE</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
			<throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(
					<argument><expr><name><name>ExceptionMessages</name><operator>.</operator><name>WRONG_ARGUMENT_TYPE</name></name></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>

		<for>for <control>(<init><decl><type><name>Object</name></type> <name>o</name> <range>: <expr><name>associations</name></expr></range></decl></init>)</control> <block>{<block_content>
			<decl_stmt><decl><type><name>IAssociation</name></type> <name>association</name> <init>= <expr><operator>(</operator><name>IAssociation</name><operator>)</operator> <name>o</name></expr></init></decl>;</decl_stmt>
			<try>try <block>{<block_content>
				<expr_stmt><expr><call><name><name>association</name><operator>.</operator><name>getRequirement</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>removeAssociation</name><argument_list>(<argument><expr><name>association</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>CoreException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
				<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>
		</block_content>}</block></for>
	</block_content>}</block></function>
</unit>
