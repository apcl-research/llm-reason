<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/25897292.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>add</name><parameter_list>(<parameter><decl><type><name>Picture</name></type> <name>picture</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>boolean</name></type> <name>background</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<decl_stmt><decl><type><name>int</name></type> <name>size</name></decl>;</decl_stmt>

		<if_stmt><if>if <condition>(<expr><call><name><name>picture</name><operator>.</operator><name>getValid</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
			<if_stmt><if>if <condition>(<expr><name>background</name></expr>)</condition><block type="pseudo"><block_content>
				<synchronized>synchronized <init>(<expr><name>mPending</name></expr>)</init> <block>{<block_content>
					<expr_stmt><expr><call><name><name>mPending</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<comment type="line">// size = mPending.size ();</comment>
					<comment type="line">// if (mThumbelina.mReadyProgress.getMaximum () &lt; size)</comment>
					<comment type="line">// mThumbelina.mReadyProgress.setMaximum (size);</comment>
					<comment type="line">// mThumbelina.mReadyProgress.setValue (size);</comment>
					<expr_stmt><expr><call><name><name>mPending</name><operator>.</operator><name>notify</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
				</block_content>}</block></synchronized></block_content></block></if>
			<else>else<block type="pseudo"><block_content>
				<expr_stmt><expr><call><name>place</name><argument_list>(<argument><expr><name>picture</name></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
		<else>else<block type="pseudo"><block_content>
			<expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><call><name><name>picture</name><operator>.</operator><name>getIdentity</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call> <operator>+</operator> <literal type="string">" is invalid"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
	</block_content>}</block></function>
</unit>
