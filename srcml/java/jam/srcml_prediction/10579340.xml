<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/10382783.java">    <function><type><specifier>protected</specifier> <name>String</name></type> <name>getMessageHeaders</name><parameter_list>(<parameter><decl><type><name>MimeMessage</name></type> <name>message</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>MessagingException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name>Enumeration</name></type> <name>heads</name> <init>= <expr><call><name><name>message</name><operator>.</operator><name>getAllHeaderLines</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>StringBuffer</name></type> <name>headBuffer</name> <init>= <expr><operator>new</operator> <call><name>StringBuffer</name><argument_list>(<argument><expr><literal type="number">1024</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <while>while <condition>(<expr><call><name><name>heads</name><operator>.</operator><name>hasMoreElements</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>headBuffer</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><call><name><name>heads</name><operator>.</operator><name>nextElement</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call><operator>.</operator><call><name>append</name><argument_list>(<argument><expr><literal type="string">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></while>
        <return>return <expr><call><name><name>headBuffer</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;</return>
    </block_content>}</block></function>
</unit>
