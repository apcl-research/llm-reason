<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/16442983.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>removePlugin</name><parameter_list>(<parameter><decl><type><name>ComponentListener</name></type> <name>component</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<decl_stmt><decl><type><name><name>ArrayList</name><argument_list type="generic">&lt;<argument><name><name>DEdge</name><argument_list type="generic">&lt;<argument><name>ComponentListener</name></argument>, <argument><name>ListenableComponent</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name>c</name> <init>= <expr><call><name>getAssociations</name><argument_list>(<argument><expr><name>component</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<try>try <block>{<block_content>
			<comment type="line">//Notify listeners</comment>
			<expr_stmt><expr><call><name><name>component</name><operator>.</operator><name>shutdown</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
			
			<comment type="line">//Remove associations</comment>
			<for>for <control>(<init><decl><type><name><name>DEdge</name><argument_list type="generic">&lt;<argument><name>ComponentListener</name></argument>, <argument><name>ListenableComponent</name></argument>&gt;</argument_list></name></type> <name>e</name> <range>: <expr><name>c</name></expr></range></decl></init>)</control>
			<block>{<block_content>
				<expr_stmt><expr><call><name>delAssociation</name><argument_list>(<argument><expr><call><name><name>e</name><operator>.</operator><name>getHead</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>e</name><operator>.</operator><name>getTail</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></for>
			
			<expr_stmt><expr><call><name><name>components</name><operator>.</operator><name>delNode</name></name><argument_list>(<argument><expr><name>component</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
			<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>
</unit>
