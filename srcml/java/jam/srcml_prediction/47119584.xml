<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/5058891.java">    <function><type><specifier>protected</specifier> <name>Integer</name></type> <name>sprintTotalPoints</name><parameter_list>(<parameter><decl><type><name>ISprint</name></type> <name>sprint</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>Integer</name></type> <name>tmp</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>IStory</name></type> <name>s</name></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>Object</name></type> <name>o</name> <range>: <expr><call><name><name>sprint</name><operator>.</operator><name>getProductBacklogItems</name></name><argument_list>()</argument_list></call></expr></range></decl></init>)</control> <block>{<block_content>
            <expr_stmt><expr><name>s</name> <operator>=</operator> <operator>(</operator><name>IStory</name><operator>)</operator> <name>o</name></expr>;</expr_stmt>
            <if_stmt><if>if <condition>(<expr><call><name><name>s</name><operator>.</operator><name>getEstimatedPoints</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <name><name>IStory</name><operator>.</operator><name>SPRINT_POINT</name></name> <operator>&amp;&amp;</operator> <call><name><name>s</name><operator>.</operator><name>getState</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <name><name>IStory</name><operator>.</operator><name>STATE_SUBMITED</name></name></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><name>tmp</name> <operator>+=</operator> <call><name><name>s</name><operator>.</operator><name>getEstimatedPoints</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>
        <return>return <expr><name>tmp</name></expr>;</return>
    </block_content>}</block></function>
</unit>
