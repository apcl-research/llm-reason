<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/436501.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>skip</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>numToSkip</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
		<comment type="line">// REVIEW</comment>
		<comment type="line">// This is sufficiently useless, but it ensures that we</comment>
		<comment type="line">// properly skip over bytes via the TarBuffer...</comment>
		<comment type="line">//</comment>

		<decl_stmt><decl><type><name><name>byte</name><index>[]</index></name></type> <name>skipBuf</name> <init>= <expr><operator>new</operator> <name><name>byte</name><index>[<expr><literal type="number">8</literal> <operator>*</operator> <literal type="number">1024</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

		<for>for <control>(<init><decl><type><name>int</name></type> <name>num</name> <init>= <expr><name>numToSkip</name></expr></init></decl>;</init> <condition><expr><name>num</name> <operator>&gt;</operator> <literal type="number">0</literal></expr>;</condition><incr/>)</control> <block>{<block_content>
			<decl_stmt><decl><type><name>int</name></type> <name>numRead</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>read</name></name><argument_list>(<argument><expr><name>skipBuf</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>,
					<argument><expr><operator>(</operator><ternary><condition><expr><name>num</name> <operator>&gt;</operator> <name><name>skipBuf</name><operator>.</operator><name>length</name></name></expr> ?</condition><then> <expr><name><name>skipBuf</name><operator>.</operator><name>length</name></name></expr> </then><else>: <expr><name>num</name></expr></else></ternary><operator>)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<if_stmt><if>if <condition>(<expr><name>numRead</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
				<break>break;</break></block_content></block></if></if_stmt>

			<expr_stmt><expr><name>num</name> <operator>-=</operator> <name>numRead</name></expr>;</expr_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>
</unit>
