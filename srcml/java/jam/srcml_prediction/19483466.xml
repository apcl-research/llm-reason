<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/18239983.java">	<function><type><specifier>public</specifier> <name>String</name></type> <name>getColumnText</name><parameter_list>(<parameter><decl><type><name>Object</name></type> <name>element</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>columnIndex</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<if_stmt><if>if <condition>(<expr><name>element</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
			<throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(<argument><expr><name><name>ExceptionMessages</name><operator>.</operator><name>NULL_ARGUMENT</name></name></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>

		<if_stmt><if>if <condition>(<expr><operator>!</operator><operator>(</operator><name>element</name> <operator>instanceof</operator> <name>IDocumentParser</name><operator>)</operator></expr>)</condition><block type="pseudo"><block_content>
			<throw>throw <expr><operator>new</operator> <call><name>IllegalArgumentException</name><argument_list>(
					<argument><expr><name><name>ExceptionMessages</name><operator>.</operator><name>WRONG_ARGUMENT_TYPE</name></name></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>

		<decl_stmt><decl><type><name>IDocumentParser</name></type> <name>parser</name> <init>= <expr><operator>(</operator><name>IDocumentParser</name><operator>)</operator> <name>element</name></expr></init></decl>;</decl_stmt>

		<switch>switch <condition>(<expr><name>columnIndex</name></expr>)</condition> <block>{<block_content>
		<case>case <expr><literal type="number">0</literal></expr>:</case>
			<return>return <expr><call><name><name>parser</name><operator>.</operator><name>getName</name></name><argument_list>()</argument_list></call></expr>;</return>
		<case>case <expr><literal type="number">1</literal></expr>:</case>
			<return>return <expr><call><name><name>parser</name><operator>.</operator><name>getDescription</name></name><argument_list>()</argument_list></call></expr>;</return>
		<case>case <expr><literal type="number">2</literal></expr>:</case>
			<return>return <expr><call><name><name>parser</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr>;</return>
		</block_content>}</block></switch>

		<return>return <expr><literal type="string">""</literal></expr>;</return>
	</block_content>}</block></function>
</unit>
