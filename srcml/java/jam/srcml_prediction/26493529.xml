<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/26490549.java">  <function><type><specifier>public</specifier> <name>List</name></type> <name>removeAnonymousErrors</name><parameter_list>()</parameter_list><block>{<block_content>
    <decl_stmt><decl><type><name>List</name></type> <name>toReturn</name> <init>= <expr><operator>new</operator> <call><name>ArrayList</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>_validationErrs</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block>{<block_content>
      <decl_stmt><decl><type><name>ValidationErr</name></type> <name>err</name> <init>= <expr><operator>(</operator><name>ValidationErr</name><operator>)</operator><call><name><name>_validationErrs</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if<condition>(<expr><call><name><name>err</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block>{<block_content>
        <expr_stmt><expr><call><name><name>toReturn</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>_validationErrs</name><operator>.</operator><name>remove</name></name><argument_list>(<argument><expr><name>i</name><operator>--</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></for>
    <return>return <expr><name>toReturn</name></expr>;</return>
  </block_content>}</block></function>
</unit>
