<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/41492483.java">	<function><type><specifier>public</specifier> <name>MethodDescriptor</name></type> <name>getMethodDescriptor</name><parameter_list>(<parameter><decl><type><annotation>@<name>SlashedClassName</name></annotation> <name>String</name></type> <name>className</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>signature</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>isStatic</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<if_stmt><if>if <condition>(<expr><name>className</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <throw>throw <expr><operator>new</operator> <call><name>NullPointerException</name><argument_list>(<argument><expr><literal type="string">"className must be nonnull"</literal></expr></argument>)</argument_list></call></expr>;</throw></block_content></block></if></if_stmt>
		<decl_stmt><decl><type><name>MethodDescriptor</name></type> <name>methodDescriptor</name> <init>= <expr><operator>new</operator> <call><name>MethodDescriptor</name><argument_list>(<argument><expr><name>className</name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>signature</name></expr></argument>, <argument><expr><name>isStatic</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>MethodDescriptor</name></type> <name>existing</name> <init>= <expr><call><name><name>methodDescriptorMap</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>methodDescriptor</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt><if>if <condition>(<expr><name>existing</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><call><name><name>methodDescriptorMap</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>methodDescriptor</name></expr></argument>, <argument><expr><name>methodDescriptor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name>existing</name> <operator>=</operator> <name>methodDescriptor</name></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		<return>return <expr><name>existing</name></expr>;</return>
	</block_content>}</block></function>
</unit>
