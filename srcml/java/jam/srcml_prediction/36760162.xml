<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/21712074.java">    <function><annotation>@<name>Test</name></annotation> <type><specifier>public</specifier> <name>void</name></type> <name>getType</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name><name>int</name><index>[]</index></name></type> <name>lengths</name> <init>= <expr><operator>new</operator> <name><name>int</name><index>[]</index></name> <block>{ <expr><literal type="number">1</literal></expr>, <expr><literal type="number">2</literal></expr>, <expr><literal type="number">1000</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <for>for <control>(<init><decl><type><name>int</name></type> <name>len</name><range>: <expr><name>lengths</name></expr></range></decl></init>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>TupleDesc</name></type> <name>td</name> <init>= <expr><call><name><name>Utility</name><operator>.</operator><name>getTupleDesc</name></name><argument_list>(<argument><expr><name>len</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>len</name></expr>;</condition> <incr><expr><operator>++</operator><name>i</name></expr></incr>)</control><block type="pseudo"><block_content>
                <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name><name>Type</name><operator>.</operator><name>INT_TYPE</name></name></expr></argument>, <argument><expr><call><name><name>td</name><operator>.</operator><name>getType</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
        </block_content>}</block></for>
    </block_content>}</block></function>
</unit>
