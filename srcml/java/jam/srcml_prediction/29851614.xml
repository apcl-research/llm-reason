<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/8232696.java">  <function><type><specifier>public</specifier> <name>boolean</name></type> <name>reaches</name><parameter_list>(<parameter><decl><type><name>Node</name></type> <name>target</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if <condition>(<expr><name>target</name> <operator>==</operator> <name>this</name></expr>)</condition> <block>{<block_content>
      <return>return <expr><literal type="boolean">true</literal></expr>;</return>
    </block_content>}</block></if> <else>else <block>{<block_content>
      <comment type="line">// depth first search the adjacency list</comment>
      <expr_stmt><expr><call><name>setVisited</name><argument_list>(<argument><expr><literal type="boolean">true</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <for>for <control>(<init><decl><type><name>Enumeration</name></type> <name>e</name> <init>= <expr><call><name><name>adjacency</name><operator>.</operator><name>keys</name></name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><call><name><name>e</name><operator>.</operator><name>hasMoreElements</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr/>)</control> <block>{<block_content>
	<decl_stmt><decl><type><name>Node</name></type>	<name>adj</name> <init>= <expr><operator>(</operator><name>Node</name><operator>)</operator><call><name><name>e</name><operator>.</operator><name>nextElement</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

	<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>adj</name><operator>.</operator><name>getVisited</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
	  <if_stmt><if>if <condition>(<expr><call><name><name>adj</name><operator>.</operator><name>reaches</name></name><argument_list>(<argument><expr><name>target</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
	    <return>return <expr><literal type="boolean">true</literal></expr>;</return>
	  </block_content>}</block></if></if_stmt>
	</block_content>}</block></if></if_stmt>
      </block_content>}</block></for>
      <return>return <expr><literal type="boolean">false</literal></expr>;</return>
    </block_content>}</block></else></if_stmt>
  </block_content>}</block></function>
</unit>
