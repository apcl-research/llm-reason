<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/27802783.java">  <function><type><specifier>public</specifier> <name>Enumeration</name></type> <name>unused</name><parameter_list>()</parameter_list> <block>{<block_content>
    
    <decl_stmt><decl><type><name>Vector</name></type> <name>unUsed</name> <init>= <expr><operator>new</operator> <call><name>Vector</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name>Enumeration</name></type> <name>names</name> <init>= <expr><call><name><name>used</name><operator>.</operator><name>keys</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
    <while>while <condition>( <expr><call><name><name>names</name><operator>.</operator><name>hasMoreElements</name></name><argument_list>()</argument_list></call></expr> )</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>String</name></type> <name>name</name> <init>= <expr><operator>(</operator><name>String</name><operator>)</operator> <call><name><name>names</name><operator>.</operator><name>nextElement</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
      <decl_stmt><decl><type><name>Boolean</name></type> <name>isUsed</name> <init>= <expr><operator>(</operator><name>Boolean</name><operator>)</operator> <call><name><name>used</name><operator>.</operator><name>get</name></name><argument_list>( <argument><expr><name>name</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
      <if_stmt><if>if <condition>( <expr><operator>!</operator><call><name><name>isUsed</name><operator>.</operator><name>booleanValue</name></name><argument_list>()</argument_list></call></expr> )</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>unUsed</name><operator>.</operator><name>addElement</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></while>
    
    <return>return <expr><call><name><name>unUsed</name><operator>.</operator><name>elements</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>
</unit>
