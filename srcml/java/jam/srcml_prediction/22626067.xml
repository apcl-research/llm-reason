<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/22623891.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>getAllResources</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>

		<expr_stmt><expr><call><name>prtln</name><argument_list>(<argument><expr><literal type="string">"getAllResources"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name>NDRObject</name></type> <name>resTemplate</name> <init>= <expr><operator>new</operator> <call><name>NDRObjectTemplate</name><argument_list>(<argument><expr><name><name>Type</name><operator>.</operator><name>Resource</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<comment type="line">// resTemplate.addRelationship(Resource.MEMBER_OF, aggregator);</comment>

		<decl_stmt><decl><type><name><name>Results</name> <argument_list type="generic">&lt;<argument><name>NDRObjectInfo</name></argument>&gt;</argument_list></name></type> <name>resources</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>getFinder</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>matchObject</name><argument_list>(<argument><expr><name>resTemplate</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>int</name></type> <name>count</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
 		<try>try <block>{<block_content>
			<for>for <control>(<init><decl><type><name>NDRObjectInfo</name></type> <name>res</name> <range>: <expr><name>resources</name></expr></range></decl></init>)</control> <block>{<block_content>
				<comment type="line">// prtln ("\t" + res.handle());</comment>
				<expr_stmt><expr><name>count</name><operator>++</operator></expr>;</expr_stmt>
			</block_content>}</block></for>
		</block_content>}</block> <finally>finally <block>{<block_content>
			<expr_stmt><expr><call><name><name>resources</name><operator>.</operator><name>close</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></finally></try>
		<expr_stmt><expr><call><name>prtln</name><argument_list>(<argument><expr><name>count</name> <operator>+</operator> <literal type="string">" resources found"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
</unit>
