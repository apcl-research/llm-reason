<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/13779983.java">    <function><type><specifier>public</specifier> <name>Tree</name></type> <name>getFPart</name><parameter_list>(<parameter><decl><type><name>Tree</name></type> <name>t</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>prefix</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>List</name></type> <name>tlist</name> <init>= <expr><call><name><name>t</name><operator>.</operator><name>getChildrenAsList</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Iterator</name></type> <name>it</name> <init>= <expr><call><name><name>tlist</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <while>while <condition>(<expr><call><name><name>it</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
            <decl_stmt><decl><type><name>Tree</name></type> <name>tree</name> <init>= <expr><operator>(</operator><name>Tree</name><operator>)</operator> <call><name><name>it</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt><if>if <condition>(<expr><call><name><name>tree</name><operator>.</operator><name>nodeString</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>startsWith</name><argument_list>(<argument><expr><name>prefix</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
                <return>return <expr><name>tree</name></expr>;</return>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></while>
        <return>return <expr><literal type="null">null</literal></expr>;</return>
    </block_content>}</block></function>
</unit>
