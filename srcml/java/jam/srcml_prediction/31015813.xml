<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/22352983.java">  <function><type><specifier>public</specifier> <name>int</name></type> <name>getNatTaxMCwoCol</name><parameter_list>()</parameter_list> <block>{<block_content>
    <decl_stmt><decl><type><name>int</name></type> <name>res</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><name>nathvell</name> <operator>&lt;</operator> <literal type="number">30</literal></expr>)</condition><block type="pseudo"><block_content>
      <return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt><expr><name>res</name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator><operator>(</operator><operator>(</operator><name>natclans</name> <operator>*</operator> <name>natgov</name> <operator>*</operator> <name>nattax</name> <operator>+</operator> <name>natsort</name><operator>)</operator> <operator>/</operator> <literal type="number">5000</literal><operator>)</operator></expr>;</expr_stmt>
    <if_stmt><if>if <condition>(<expr><name>natsort</name> <operator>==</operator> <name><name>Natives</name><operator>.</operator><name>INSECTOID</name></name></expr>)</condition><block type="pseudo"><block_content>
      <expr_stmt><expr><name>res</name> <operator>*=</operator> <literal type="number">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt><expr><name>res</name> <operator>=</operator> <operator>(</operator><name>int</name><operator>)</operator><operator>(</operator><operator>(</operator><name>res</name> <operator>*</operator> <call><name>getConfig</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nativeTaxRate</name><argument_list>(<argument><expr><call><name>getOwner</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call> <operator>+</operator> <literal type="number">50</literal><operator>)</operator> <operator>/</operator> <literal type="number">100</literal><operator>)</operator></expr>;</expr_stmt>
    <return>return <expr><name>res</name></expr>;</return>
  </block_content>}</block></function>
</unit>
