<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/13582983.java">	<function><type><specifier>public</specifier> <name>int</name></type> <name>getNetworkComponentCount</name><parameter_list>(<parameter><decl><type><name>GraphNode</name></type> <name>node</name></decl></parameter>)</parameter_list><block>{<block_content>
		<comment type="line">// Get the components from the controllers GridModel</comment>
		<decl_stmt><decl><type><name><name>Iterator</name><argument_list type="generic">&lt;<argument><name>NetworkComponent</name></argument>&gt;</argument_list></name></type> <name>components</name> <init>= <expr><call><name><name>this</name><operator>.</operator><name>getNetworkComponents</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>values</name><argument_list>()</argument_list></call><operator>.</operator><call><name>iterator</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>						
		<decl_stmt><decl><type><name>int</name></type> <name>count</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
		<while>while<condition>(<expr><call><name><name>components</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition><block>{<block_content> <comment type="line">// iterating through all network components</comment>
			<decl_stmt><decl><type><name>NetworkComponent</name></type> <name>comp</name> <init>= <expr><call><name><name>components</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
			<comment type="line">// check if the component contains the current node</comment>
			<if_stmt><if>if<condition>(<expr><call><name><name>comp</name><operator>.</operator><name>getGraphElementIDs</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>contains</name><argument_list>(<argument><expr><call><name><name>node</name><operator>.</operator><name>getId</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
				<expr_stmt><expr><name>count</name><operator>++</operator></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></while>
		<return>return <expr><name>count</name></expr>;</return>
	</block_content>}</block></function>
</unit>
