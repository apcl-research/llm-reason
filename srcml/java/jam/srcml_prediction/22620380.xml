<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/46116983.java">	<function><type><specifier>public</specifier> <name>Standard</name></type> <name>getStandardById</name> <parameter_list>()</parameter_list> <block>{<block_content>
		<if_stmt><if>if <condition>(<expr><name>stdId</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <name>commCoreHelper</name> <operator>==</operator> <literal type="null">null</literal> <operator>||</operator> <name><name>this</name><operator>.</operator><name>standard</name></name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>error</name></name> <argument_list>(<argument><expr><literal type="string">"returning null"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return>return <expr><literal type="null">null</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<decl_stmt><decl><type><name>Standard</name></type> <name>std</name> <init>= <expr><call><name><name>commCoreHelper</name><operator>.</operator><name>getStandard</name></name><argument_list>(<argument><expr><call><name><name>this</name><operator>.</operator><name>standard</name><operator>.</operator><name>getDocumentIdentifier</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>stdId</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt><if>if <condition>(<expr><name>std</name> <operator>==</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><call><name><name>log</name><operator>.</operator><name>error</name></name> <argument_list>(<argument><expr><literal type="string">"std not found"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
		<return>return <expr><name>std</name></expr>;</return>
	</block_content>}</block></function>
</unit>
