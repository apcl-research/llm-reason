<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/19509093.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>testMarkerAttrNull</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>Exception</name></expr></argument></throws> <block>{<block_content>
		<decl_stmt><decl><type><name>IRodinFile</name></type> <name>rodinFile</name> <init>= <expr><call><name>createRodinFile</name><argument_list>(<argument><expr><literal type="string">"P/x.test"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>RodinTestRoot</name></type> <name>root</name> <init>= <expr><operator>(</operator><name>RodinTestRoot</name><operator>)</operator> <call><name><name>rodinFile</name><operator>.</operator><name>getRoot</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>IInternalElement</name></type> <name>ne</name> <init>= <expr><call><name>createNEPositive</name><argument_list>(<argument><expr><name>root</name></expr></argument>, <argument><expr><literal type="string">"ne1"</literal></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>rodinFile</name><operator>.</operator><name>save</name></name><argument_list>(<argument><expr><literal type="null">null</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>createMarkerPositive</name><argument_list>(<argument><expr><name>ne</name></expr></argument>, <argument><expr><operator>(</operator><name>IAttributeType</name><operator>)</operator> <literal type="null">null</literal></expr></argument>, <argument><expr><name><name>TestProblem</name><operator>.</operator><name>err0</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
</unit>
