<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/42782629.java">	 <function><type><specifier>protected</specifier> <name>String</name></type> <name>fetchString</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>constantEnumeration</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>rxLength</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<decl_stmt><decl><type><name><name>byte</name> <index>[]</index></name></type> <name>stringBytes</name> <init>= <expr><operator>new</operator> <name><name>byte</name><index>[<expr><name>rxLength</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>getData</name><argument_list>(<argument><expr><name>constantEnumeration</name></expr></argument>, <argument><expr><name>stringBytes</name></expr></argument>, <argument><expr><name>rxLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line">// Get rid of everything after 0.</comment>
		<decl_stmt><decl><type><name>int</name></type> <name>zeroPos</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
		<for>for<control>(<init><expr><name>zeroPos</name> <operator>=</operator> <literal type="number">0</literal></expr>;</init><condition><expr><name>zeroPos</name> <operator>&lt;</operator> <name>rxLength</name></expr>;</condition><incr><expr><name>zeroPos</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
			<if_stmt><if>if<condition>(<expr><name><name>stringBytes</name> <index>[<expr><name>zeroPos</name></expr>]</index></name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <break>break;</break></block_content></block></if></if_stmt>
		</block_content>}</block></for>
		<decl_stmt><decl><type><name>String</name></type> <name>s</name> <init>= <expr><operator>new</operator> <call><name>String</name><argument_list>(<argument><expr><name>stringBytes</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>substring</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>,<argument><expr><name>zeroPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<return>return <expr><name>s</name></expr>;</return>
	</block_content>}</block></function>
</unit>
