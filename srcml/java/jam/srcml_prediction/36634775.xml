<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/16292783.java">    <function><type><specifier>public</specifier> <name>void</name></type> <name>setFullScreen</name><parameter_list>()</parameter_list><block>{<block_content>
        <if_stmt><if>if<condition>(<expr><call><name><name>SlixLibrary</name><operator>.</operator><name>isApplet</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>  <return>return;</return></block_content></block></if></if_stmt>
        <if_stmt><if>if<condition>(<expr><call><name><name>contain</name><operator>.</operator><name>getWidth</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="number">800</literal> <operator>&amp;&amp;</operator> <call><name><name>contain</name><operator>.</operator><name>getHeight</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="number">600</literal></expr>)</condition><block>{<block_content>
            <expr_stmt><expr><call><name><name>SlixLibrary</name><operator>.</operator><name>check</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
            <return>return;</return>
        </block_content>}</block></if></if_stmt>
        <try>try <block>{<block_content>
            <expr_stmt><expr><call><name><name>contain</name><operator>.</operator><name>setFullscreen</name></name><argument_list>(<argument><expr><operator>!</operator><call><name><name>contain</name><operator>.</operator><name>isFullscreen</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>SlickException</name></type> <name>ex</name></decl></parameter>)</parameter_list> <block>{<block_content>
            <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>err</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><name>ex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></catch></try>
    </block_content>}</block></function>
</unit>
