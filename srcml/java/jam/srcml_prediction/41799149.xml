<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/26392783.java">    <function><type><specifier>public</specifier> <name>void</name></type> <name>testparseRfc2822Date</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>AssertionFailedException</name></expr></argument></throws> <block>{<block_content>
        <expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>debug</name></name><argument_list>(<argument><expr><literal type="string">"parseRfc2822Date"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>out</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"\nTESTING parseRfc2822Date()"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name>String</name></type> <name>d</name> <init>= <expr><name>rfc2822</name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Date</name></type> <name>expectedResultDate</name> <init>= <expr><name>dateobject</name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>Date</name></type> <name>resultDate</name> <init>= <expr><call><name><name>MailDateFormatter</name><operator>.</operator><name>parseRfc2822Date</name></name><argument_list>(<argument><expr><name>d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>expectedResult</name> <init>= <expr><call><name><name>expectedResultDate</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>String</name></type> <name>result</name> <init>= <expr><call><name><name>resultDate</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><call><name>assertEquals</name><argument_list>(<argument><expr><name>expectedResult</name></expr></argument>, <argument><expr><name>result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
</unit>
