<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/46116983.java">	<function><type><specifier>private</specifier> <name>void</name></type> <name>addPenalty</name><parameter_list>(<parameter><decl><type><name>Paragraph</name></type> <name>p</name></decl></parameter>, <parameter><decl><type><name>TextChunk</name></type> <name>chunk</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>weight</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>renderString</name></decl></parameter>, <parameter><decl><type><name>LayoutingContext</name></type> <name>context</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<if_stmt><if>if <condition>(<expr><call><name><name>context</name><operator>.</operator><name>getLayoutSpecialMode</name></name><argument_list>()</argument_list></call><operator>==</operator><name><name>LayoutingContext</name><operator>.</operator><name>LAYOUT_SPECIALMODE_MAXIMUM_WIDTH</name></name></expr>)</condition><block type="pseudo"><block_content> <return>return;</return></block_content></block></if></if_stmt>
		<if_stmt><if>if <condition>(<expr><call><name><name>context</name><operator>.</operator><name>getLayoutSpecialMode</name></name><argument_list>()</argument_list></call><operator>==</operator><name><name>LayoutingContext</name><operator>.</operator><name>LAYOUT_SPECIALMODE_MINIMAL_WIDTH</name></name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>weight</name> <operator>=</operator> <name><name>Double</name><operator>.</operator><name>NEGATIVE_INFINITY</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
	
		<decl_stmt><decl><type><name>Penalty</name></type> <name>penalty</name> <init>= <expr><operator>new</operator> <call><name>Penalty</name> <argument_list>(<argument><expr><name>weight</name></expr></argument>, <argument><expr><name>chunk</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>penalty</name><operator>.</operator><name>setRenderString</name></name> <argument_list>(<argument><expr><name>renderString</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><name>p</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>penalty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
	</block_content>}</block></function>
</unit>
