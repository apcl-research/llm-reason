<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/19302783.java">    <function><type><specifier>public</specifier> <name>String</name></type> <name>substituteVariables</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>value</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <comment type="line">//</comment>
        <comment type="line">// Now iterates substitute the values of the referenced</comment>
        <comment type="line">// variables.</comment>
        <comment type="line">//</comment>
        <return>return <expr><call><name>substituteReferenceFunctionResult</name><argument_list>(<argument><expr><name>name</name></expr></argument>, <argument><expr><name>value</name></expr></argument>, <argument><expr><name>variableRe</name></expr></argument>, <argument><expr><literal type="number">2</literal></expr></argument>, <argument><expr><literal type="number">1</literal></expr></argument>,
            <argument><expr><operator>new</operator> <class><super><name>ReferenceFunction</name></super><argument_list>()</argument_list> <block>{
                <function><type><specifier>public</specifier> <name>String</name></type> <name>value</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>originalName</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>reference</name></decl></parameter>)</parameter_list> <block>{<block_content>
                    <return>return <expr><operator>new</operator> <call><name>VariableReference</name><argument_list>(<argument><expr><name><name>Parameters</name><operator>.</operator><name>this</name></name></expr></argument>, <argument><expr><name>name</name></expr></argument>, <argument><expr><name>reference</name></expr></argument>)</argument_list></call><operator>.</operator><call><name>value</name><argument_list>()</argument_list></call></expr>;</return>
                </block_content>}</block></function>
            }</block></class></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
</unit>
