<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/19509073.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>process</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>RodinDBException</name></expr></argument></throws> <block>{<block_content>
		<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name>isValid</name><argument_list>(<argument><expr><name>element</name></expr></argument>, <argument><expr><name>attrType</name></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
			<return>return;</return>
		</block_content>}</block></if></if_stmt>
		<decl_stmt><decl><type><specifier>final</specifier> <name>String</name></type> <name>formulaString</name> <init>= <expr><call><name><name>element</name><operator>.</operator><name>getAttributeValue</name></name><argument_list>(<argument><expr><name>attrType</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier>final</specifier> <name>IAttributeLocation</name></type> <name>loc</name> <init>= <expr><call><name>getInternalLocation</name><argument_list>(<argument><expr><name>element</name></expr></argument>, <argument><expr><name>attrType</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>checkCancel</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><specifier>final</specifier> <name>IParseResult</name></type> <name>result</name> <init>= <expr><call><name>parseFormula</name><argument_list>(<argument><expr><name>formulaString</name></expr></argument>, <argument><expr><name>loc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>checkCancel</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<if_stmt><if>if <condition>(<expr><call><name><name>result</name><operator>.</operator><name>hasProblem</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
			<return>return;</return>
		</block_content>}</block></if></if_stmt>
		<decl_stmt><decl><type><specifier>final</specifier> <name><name>Formula</name><argument_list type="generic">&lt;<argument><name>?</name></argument>&gt;</argument_list></name></type> <name>formula</name> <init>= <expr><call><name>getParsedFormula</name><argument_list>(<argument><expr><name>result</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name>visitAndIndex</name><argument_list>(<argument><expr><name>formula</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	</block_content>}</block></function>
</unit>
