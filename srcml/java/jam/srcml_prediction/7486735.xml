<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/4212991.java">    <function><type><specifier>private</specifier> <name>void</name></type> <name>installConnectionListeners</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>XMPPConnection</name></type> <name>connection</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <if_stmt><if>if <condition>(<expr><name>connection</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>connection</name><operator>.</operator><name>addConnectionListener</name></name><argument_list>(<argument><expr><operator>new</operator> <class><super><name>ConnectionListener</name></super><argument_list>()</argument_list> <block>{
                <function><type><specifier>public</specifier> <name>void</name></type> <name>connectionClosed</name><parameter_list>()</parameter_list> <block>{<block_content>
                    <expr_stmt><expr><call><name>unregisterInstanceFor</name><argument_list>(<argument><expr><name>connection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></function>

                <function><type><specifier>public</specifier> <name>void</name></type> <name>connectionClosedOnError</name><parameter_list>(<parameter><decl><type><name><name>java</name><operator>.</operator><name>lang</name><operator>.</operator><name>Exception</name></name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
                    <expr_stmt><expr><call><name>unregisterInstanceFor</name><argument_list>(<argument><expr><name>connection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                </block_content>}</block></function>

                <function><type><specifier>public</specifier> <name>void</name></type> <name>reconnectionSuccessful</name><parameter_list>()</parameter_list> <block>{<block_content>
                </block_content>}</block></function>

                <function><type><specifier>public</specifier> <name>void</name></type> <name>reconnectionFailed</name><parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>exception</name></decl></parameter>)</parameter_list> <block>{<block_content>
                </block_content>}</block></function>
            }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></function>
</unit>
