<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/43482662.java">		<function><type><specifier>public</specifier> <name>FieldContent</name></type> <name>put</name><parameter_list>(<parameter><decl><type><name>FieldContent</name></type> <name>item</name></decl></parameter>)</parameter_list><block>{<block_content>
			<decl_stmt><decl><type><name>FieldContent</name></type> <name>old_field</name> <init>= <expr><name><name>this</name><operator>.</operator><name>content</name></name></expr></init></decl>;</decl_stmt>
			
			<if_stmt><if>if <condition>(<expr><call><name><name>item</name><operator>.</operator><name>getItem</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getUid</name><argument_list>()</argument_list></call> <operator>==</operator> <call><name><name>this</name><operator>.</operator><name>content</name><operator>.</operator><name>getItem</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getUid</name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
					<if_stmt><if>if <condition>(<expr><call><name><name>content</name><operator>.</operator><name>getItem</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>isStackable</name><argument_list>()</argument_list></call></expr>)</condition><block>{<block_content> 
						<expr_stmt><expr><name><name>this</name><operator>.</operator><name>content</name></name> <operator>=</operator> <operator>new</operator> <call><name>InventoryStack</name><argument_list>(<argument><expr><call><name><name>content</name><operator>.</operator><name>getItem</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><call><name><name>content</name><operator>.</operator><name>getCount</name></name><argument_list>()</argument_list></call><operator>+</operator><literal type="number">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<return>return <expr><literal type="null">null</literal></expr>;</return>
					</block_content>}</block></if> <else>else <block>{<block_content><expr_stmt><expr><name><name>this</name><operator>.</operator><name>content</name></name> <operator>=</operator> <name>item</name></expr>;</expr_stmt> <return>return <expr><name>old_field</name></expr>;</return></block_content>}</block></else></if_stmt>
				</block_content>}</block></if> <else>else <block>{<block_content>
					<expr_stmt><expr><name><name>this</name><operator>.</operator><name>content</name></name> <operator>=</operator> <name>item</name></expr>;</expr_stmt> <return>return <expr><name>old_field</name></expr>;</return>
			</block_content>}</block></else></if_stmt> 
		</block_content>}</block></function>
</unit>
