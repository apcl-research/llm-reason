<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/30984648.java">	<function><type><specifier>private</specifier> <name>void</name></type> <name>write</name><parameter_list>()</parameter_list><block>{<block_content>
		<decl_stmt><decl><type><name>StringBuffer</name></type> <name>buffer</name> <init>= <expr><operator>new</operator> <call><name>StringBuffer</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<synchronized>synchronized <init>(<expr><name>buffer</name></expr>)</init> <block>{<block_content>
			<expr_stmt><expr><call><name>loopWrite</name><argument_list>(<argument><expr><name>document</name></expr></argument>, <argument><expr><literal type="number">0</literal></expr></argument>, <argument><expr><name>buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></synchronized>
		<decl_stmt><decl><type><name>ByteArrayInputStream</name></type> <name>st</name> <init>= <expr><operator>new</operator>  <call><name>ByteArrayInputStream</name><argument_list>(<argument><expr><call><name><name>buffer</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getBytes</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<try>try <block>{<block_content>
			<expr_stmt><expr><call><name><name>file</name><operator>.</operator><name>setContents</name></name><argument_list>(<argument><expr><name>st</name></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="boolean">false</literal></expr></argument>, <argument><expr><operator>new</operator> <call><name>NullProgressMonitor</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line">//System.out.println("XML to be written:: " + s);</comment>
		</block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>CoreException</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
			<expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>printStackTrace</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></catch></try>
	</block_content>}</block></function>
</unit>
