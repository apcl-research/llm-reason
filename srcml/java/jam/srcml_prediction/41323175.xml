<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/1207898.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>resetMainCanvas</name><parameter_list>()</parameter_list> <block>{<block_content>
		<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>itsMainCanvas</name><operator>.</operator><name>getCamera</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getLayerCount</name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
			<expr_stmt><expr><call><name><name>itsMainCanvas</name><operator>.</operator><name>getCamera</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>removeLayer</name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></for>
		<if_stmt><if>if <condition>(<expr><call><name><name>LessonMapper2</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getActiveProject</name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><call><name><name>itsMainCanvas</name><operator>.</operator><name>getCamera</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>addLayer</name><argument_list>(
					<argument><expr><call><name><name>LessonMapper2</name><operator>.</operator><name>getInstance</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getUpperActivity</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
	</block_content>}</block></function>
</unit>
