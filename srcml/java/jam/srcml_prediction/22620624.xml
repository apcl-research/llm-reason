<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/23870083.java">	<function><type><specifier>private</specifier> <name>String</name></type> <name>resolveQualifiedName</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>GlobalDef</name></type> <name>typeDef</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<decl_stmt><decl><type><name>String</name></type> <name>localPrefix</name> <init>= <expr><call><name><name>NamespaceRegistry</name><operator>.</operator><name>getNamespacePrefix</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>Namespace</name></type> <name>localPrefixNS</name> <init>= <expr><call><name><name>typeDef</name><operator>.</operator><name>getSchemaReader</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getNamespaces</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getNSforPrefix</name><argument_list>(<argument><expr><name>localPrefix</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>String</name></type> <name>topLevelPrefix</name> <init>= <expr><call><name>getInstancePrefix</name><argument_list>(<argument><expr><name>localPrefixNS</name></expr></argument>, <argument><expr><name>typeDef</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<return>return <expr><call><name><name>NamespaceRegistry</name><operator>.</operator><name>makeQualifiedName</name></name><argument_list>(<argument><expr><name>topLevelPrefix</name></expr></argument>, <argument><expr><call><name><name>NamespaceRegistry</name><operator>.</operator><name>stripNamespacePrefix</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
	</block_content>}</block></function>
</unit>
