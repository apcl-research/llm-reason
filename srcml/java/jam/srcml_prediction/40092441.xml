<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/31039071.java">  <function><type><specifier>private</specifier> <name>boolean</name></type> <name>isAlwaysRun</name><parameter_list>(<parameter><decl><type><name>IConfigurationAnnotation</name></type> <name>configurationAnnotation</name></decl></parameter>)</parameter_list> <block>{<block_content>
    <if_stmt><if>if<condition>(<expr><literal type="null">null</literal> <operator>==</operator> <name>configurationAnnotation</name></expr>)</condition> <block>{<block_content>
      <return>return <expr><literal type="boolean">false</literal></expr>;</return>
    </block_content>}</block></if></if_stmt>

    <decl_stmt><decl><type><name>boolean</name></type> <name>alwaysRun</name><init>= <expr><literal type="boolean">false</literal></expr></init></decl>;</decl_stmt>
    <if_stmt><if>if <condition>(<expr><operator>(</operator><call><name><name>configurationAnnotation</name><operator>.</operator><name>getAfterSuite</name></name><argument_list>()</argument_list></call>
        <operator>||</operator> <call><name><name>configurationAnnotation</name><operator>.</operator><name>getAfterTest</name></name><argument_list>()</argument_list></call>
        <operator>||</operator> <call><name><name>configurationAnnotation</name><operator>.</operator><name>getAfterTestClass</name></name><argument_list>()</argument_list></call>
        <operator>||</operator> <call><name><name>configurationAnnotation</name><operator>.</operator><name>getAfterTestMethod</name></name><argument_list>()</argument_list></call><operator>)</operator>
        <operator>&amp;&amp;</operator> <call><name><name>configurationAnnotation</name><operator>.</operator><name>getAlwaysRun</name></name><argument_list>()</argument_list></call></expr>)</condition>
    <block>{<block_content>
        <expr_stmt><expr><name>alwaysRun</name><operator>=</operator> <literal type="boolean">true</literal></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>

    <return>return <expr><name>alwaysRun</name></expr>;</return>
  </block_content>}</block></function>
</unit>
