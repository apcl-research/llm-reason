<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/42312074.java">    <function><type><specifier>public</specifier> <name>ReflectClass</name></type> <name>forName</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>String</name></type> <name>className</name></decl></parameter>)</parameter_list> <block>{<block_content>
    	<return>return <expr><call><name>withLock</name><argument_list>(<argument><expr><operator>new</operator> <class><super><name><name>Closure4</name><argument_list type="generic">&lt;<argument><name>ReflectClass</name></argument>&gt;</argument_list></name></super><argument_list>()</argument_list> <block>{
			<function><type><specifier>public</specifier> <name>ReflectClass</name></type> <name>run</name><parameter_list>()</parameter_list> <block>{<block_content>
		        <decl_stmt><decl><type><name>ReflectClass</name></type> <name>clazz</name> <init>= <expr><call><name><name>_repository</name><operator>.</operator><name>lookupByName</name></name><argument_list>(<argument><expr><name>className</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		        <if_stmt><if>if<condition>(<expr><name>clazz</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block>{<block_content>
		            <return>return <expr><name>clazz</name></expr>;</return>
		        </block_content>}</block></if></if_stmt>
		        <expr_stmt><expr><name>clazz</name> <operator>=</operator> <call><name><name>_delegate</name><operator>.</operator><name>forName</name></name><argument_list>(<argument><expr><name>className</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		        <if_stmt><if>if<condition>(<expr><name>clazz</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition><block>{<block_content>
		            <return>return <expr><call><name>ensureDelegate</name><argument_list>(<argument><expr><name>clazz</name></expr></argument>)</argument_list></call></expr>;</return>
		        </block_content>}</block></if></if_stmt>
		    	<return>return <expr><call><name><name>_repository</name><operator>.</operator><name>forName</name></name><argument_list>(<argument><expr><name>className</name></expr></argument>)</argument_list></call></expr>;</return>
			</block_content>}</block></function>
    	}</block></class></expr></argument>)</argument_list></call></expr>;</return>
    </block_content>}</block></function>
</unit>
