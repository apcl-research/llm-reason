<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/42392629.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>step</name><parameter_list>()</parameter_list> <block>{<block_content>
		<expr_stmt><expr><call><name><name>Block</name><operator>.</operator><name>step</name></name><argument_list>(<argument><expr><name>blocks</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<if_stmt><if>if<condition>(<expr><call><name><name>BlockGenerator</name><operator>.</operator><name>shouldGenerateBlock</name></name><argument_list>()</argument_list></call> <operator>||</operator> <call><name><name>BlockGenerator</name><operator>.</operator><name>shouldGenerateBlock</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
			<expr_stmt><expr><call><name><name>blocks</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><call><name><name>BlockGenerator</name><operator>.</operator><name>generateTitleBlock</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></if></if_stmt>
		
		<expr_stmt><expr><name>finalIterator</name> <operator>=</operator> <call><name><name>blocks</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<while>while<condition>(<expr><call><name><name>finalIterator</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
			<if_stmt><if>if<condition>(<expr><call><name><name>finalIterator</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>getYOfTop</name><argument_list>()</argument_list></call> <operator>&lt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
				<expr_stmt><expr><call><name><name>finalIterator</name><operator>.</operator><name>remove</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></while>
		
		<expr_stmt><expr><name>blinkTimer</name> <operator>=</operator> <operator>(</operator><name>blinkTimer</name> <operator>+</operator> <literal type="number">1</literal><operator>)</operator> <operator>%</operator> <operator>(</operator><literal type="number">2</literal> <operator>*</operator> <name>BLINK_FRAMES</name><operator>)</operator></expr>;</expr_stmt>
	</block_content>}</block></function>
</unit>
