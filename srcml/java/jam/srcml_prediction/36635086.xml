<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/42797558.java">    <function><type><specifier>private</specifier> <name>byte</name></type> <name>getByteData</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>index</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>value</name></decl></parameter>)</parameter_list><block>{<block_content>
        <switch>switch<condition>(<expr><name>index</name></expr>)</condition><block>{<block_content>
            <case>case <expr><literal type="number">0</literal></expr>:</case>
                <return>return <expr><operator>(</operator><name>byte</name><operator>)</operator><operator>(</operator><operator>(</operator><name>value</name> <operator>&amp;</operator> <literal type="number">0xFF000000</literal><operator>)</operator> <operator>&gt;&gt;&gt;</operator> <literal type="number">24</literal><operator>)</operator></expr>;</return>
            <case>case <expr><literal type="number">1</literal></expr>:</case>
                <return>return <expr><operator>(</operator><name>byte</name><operator>)</operator><operator>(</operator><operator>(</operator><name>value</name> <operator>&amp;</operator> <literal type="number">0x00FF0000</literal><operator>)</operator> <operator>&gt;&gt;&gt;</operator> <literal type="number">16</literal><operator>)</operator></expr>;</return>
            <case>case <expr><literal type="number">2</literal></expr>:</case>
                <return>return <expr><operator>(</operator><name>byte</name><operator>)</operator><operator>(</operator><operator>(</operator><name>value</name> <operator>&amp;</operator> <literal type="number">0x0000FF00</literal><operator>)</operator> <operator>&gt;&gt;&gt;</operator> <literal type="number">8</literal><operator>)</operator></expr>;</return>
            <case>case <expr><literal type="number">3</literal></expr>:</case>
                <return>return <expr><operator>(</operator><name>byte</name><operator>)</operator><operator>(</operator><operator>(</operator><name>value</name> <operator>&amp;</operator> <literal type="number">0x000000FF</literal><operator>)</operator><operator>)</operator></expr>;</return>
        </block_content>}</block></switch>
        <return>return <expr><literal type="number">0</literal></expr>;</return>
    </block_content>}</block></function>
</unit>
