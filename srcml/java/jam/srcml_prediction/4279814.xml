<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/10682983.java">    <function><type><specifier>public</specifier> <name>String</name></type> <name>toHex</name><parameter_list>(<parameter><decl><type><name><name>byte</name><index>[]</index></name></type> <name>fileDigest</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>StringBuffer</name></type> <name>hex</name> <init>= <expr><operator>new</operator> <call><name>StringBuffer</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>fileDigest</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>String</name></type> <name>hexStr</name> <init>= <expr><call><name><name>Integer</name><operator>.</operator><name>toHexString</name></name><argument_list>(<argument><expr><literal type="number">0x00ff</literal> <operator>&amp;</operator> <name><name>fileDigest</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt><if>if <condition>(<expr><call><name><name>hexStr</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <literal type="number">2</literal></expr>)</condition> <block>{<block_content>
                <expr_stmt><expr><call><name><name>hex</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><literal type="string">"0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>

            <expr_stmt><expr><call><name><name>hex</name><operator>.</operator><name>append</name></name><argument_list>(<argument><expr><name>hexStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>

        <return>return <expr><call><name><name>hex</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;</return>
    </block_content>}</block></function>
</unit>
