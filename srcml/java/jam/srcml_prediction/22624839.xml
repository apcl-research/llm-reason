<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/22625891.java">	<function><type><specifier>public</specifier> <name>String</name></type> <name>getCollectionKey</name><parameter_list>()</parameter_list> <block>{<block_content>
		<if_stmt><if>if <condition>(<expr><name>vocab</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator>
			<name>collection</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> 
			<call><name><name>collection</name><operator>.</operator><name>trim</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>length</name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
			<try>try <block>{<block_content>
				<comment type="line">// prtln ("about to call vocab.getFieldValueSystemId with " + collectionKey);</comment>
				<decl_stmt><decl><type><name>String</name></type> <name>useVocabMapping</name> <init>= <expr><literal type="string">"key"</literal></expr></init></decl>;</decl_stmt>
				<return>return <expr><call><name><name>vocab</name><operator>.</operator><name>getFieldValueSystemId</name></name><argument_list>(<argument><expr><name>useVocabMapping</name></expr></argument>, <argument><expr><call><name>getCollection</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
			</block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Throwable</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
				<expr_stmt><expr><call><name>prtln</name><argument_list>(<argument><expr><literal type="string">"makeSystemCollectionKey failed with "</literal> <operator>+</operator> <name>collection</name> <operator>+</operator> <literal type="string">":\n"</literal> <operator>+</operator> <name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>
		</block_content>}</block></if></if_stmt>
		<return>return <expr><literal type="null">null</literal></expr>;</return>
	</block_content>}</block></function>
</unit>
