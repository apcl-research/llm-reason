<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/10382783.java">    <function><type><specifier>public</specifier> <name>void</name></type> <name>update</name><parameter_list>(<parameter><decl><type><name>long</name></type> <name>processTime</name></decl></parameter>, <parameter><decl><type><name>boolean</name></type> <name>success</name></decl></parameter>)</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>long</name></type> <name>fastest</name> <init>= <expr><call><name><name>fastestProcessing</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt><if>if <condition>(<expr><name>fastest</name> <operator>&gt;</operator> <name>processTime</name> <operator>||</operator> <name>fastest</name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>fastestProcessing</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>processTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>

        <if_stmt><if>if <condition>(<expr><call><name><name>slowestProcessing</name><operator>.</operator><name>get</name></name><argument_list>()</argument_list></call> <operator>&lt;</operator> <name>processTime</name></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>slowestProcessing</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>processTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt><if>if <condition>(<expr><name>success</name></expr>)</condition> <block>{<block_content>
            <expr_stmt><expr><call><name><name>successCount</name><operator>.</operator><name>incrementAndGet</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <else>else <block>{<block_content>
            <expr_stmt><expr><call><name><name>errorCount</name><operator>.</operator><name>incrementAndGet</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>

        <expr_stmt><expr><call><name><name>lastProcessing</name><operator>.</operator><name>set</name></name><argument_list>(<argument><expr><name>processTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></function>
</unit>
