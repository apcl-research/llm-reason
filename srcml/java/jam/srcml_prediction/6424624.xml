<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/37014883.java">	<function><type><specifier>public</specifier> <name>boolean</name></type> <name>routeEvent</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>key</name></decl></parameter>,<parameter><decl><type><name>PlugableEvent</name></type> <name>evt</name></decl></parameter>)</parameter_list><block>{<block_content>
        <comment type="line">// The following cast is assumed to work -- The event can only be</comment>
        <comment type="line">// instantiated with a PlugableEvent as source.  So, we should be</comment>
        <comment type="line">// safe enough.</comment>
		<decl_stmt><decl><type><name>Iterator</name></type> <name>plugins</name><init>=<expr><call><name><name>instance</name><operator>.</operator><name>getInstances</name></name><argument_list>(<argument><expr><operator>(</operator><name>Plugable</name><operator>)</operator><call><name><name>evt</name><operator>.</operator><name>getSource</name></name><argument_list>()</argument_list></call></expr></argument>,<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt><if>if<condition>(<expr><name>plugins</name><operator>!=</operator><literal type="null">null</literal></expr>)</condition><block>{<block_content>
			<while>while<condition>(<expr><call><name><name>plugins</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name><name>evt</name><operator>.</operator><name>isEventConsumed</name></name><argument_list>()</argument_list></call></expr>)</condition><block>{<block_content>
				<expr_stmt><expr><operator>(</operator><operator>(</operator><name>Plugin</name><operator>)</operator><call><name><name>plugins</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call><operator>)</operator><operator>.</operator><call><name>eventFired</name><argument_list>(<argument><expr><name>evt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></while>
		</block_content>}</block></if></if_stmt>
		<return>return <expr><call><name><name>evt</name><operator>.</operator><name>isEventConsumed</name></name><argument_list>()</argument_list></call></expr>;</return>
	</block_content>}</block></function>
</unit>
