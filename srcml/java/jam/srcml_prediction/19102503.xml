<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/25579983.java">	<function><type><specifier>private</specifier> <name>String</name></type> <name>replaceParams</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>expression</name></decl></parameter>, <parameter><decl><type><name>Object</name><modifier>...</modifier></type> <name>params</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<assert>assert <expr><operator>(</operator><name><name>params</name><operator>.</operator><name>length</name></name> <operator>&lt;</operator> <literal type="number">10</literal><operator>)</operator></expr>;</assert>
		<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name><name>params</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
			<expr_stmt><expr><name>expression</name> <operator>=</operator> <call><name><name>expression</name><operator>.</operator><name>replaceAll</name></name><argument_list>(<argument><expr><literal type="string">"#"</literal><operator>+</operator><operator>(</operator><name>i</name><operator>+</operator><literal type="number">1</literal><operator>)</operator></expr></argument>, <argument><expr><name><name>params</name><index>[<expr><name>i</name></expr>]</index></name><operator>.</operator><call><name>toString</name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
		<expr_stmt><expr><call><name><name>Log</name><operator>.</operator><name>log</name></name><argument_list>(<argument><expr><call><name>getClass</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getName</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="number">5</literal></expr></argument>, <argument><expr><name>expression</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><name>expression</name></expr>;</return>
	</block_content>}</block></function>
</unit>
