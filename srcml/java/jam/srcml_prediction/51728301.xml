<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/41574983.java">    <function><type><specifier>public</specifier> <name>IdentifierTyper</name></type> <name>cloneTyper</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>IdentifierTyper</name></type> <name>ret</name> <init>= <expr><operator>new</operator> <call><name>IdentifierTyper</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>j</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>j</name> <operator>&lt;</operator> <call><name><name>entries</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>j</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
            <decl_stmt><decl><type><name>Entry</name></type> <name>e</name> <init>= <expr><operator>(</operator><name>Entry</name><operator>)</operator><call><name><name>entries</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>j</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name>ret</name><operator>.</operator><name>addEntry</name></name><argument_list>(<argument><expr><name><name>e</name><operator>.</operator><name>start</name></name></expr></argument>, <argument><expr><name><name>e</name><operator>.</operator><name>end</name></name></expr></argument>, <argument><expr><name><name>e</name><operator>.</operator><name>var</name></name></expr></argument>, <argument><expr><name><name>e</name><operator>.</operator><name>type</name></name></expr></argument>, <argument><expr><name><name>e</name><operator>.</operator><name>descr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></for>
        <return>return <expr><name>ret</name></expr>;</return>
    </block_content>}</block></function>
</unit>
