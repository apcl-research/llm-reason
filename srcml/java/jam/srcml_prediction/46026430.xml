<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/46487796.java">	<function><type><specifier>private</specifier> <name>int</name></type> <name>checkRanking</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>maxcombo</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>time</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<for>for<control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <name>RANKING_MAX</name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
			<if_stmt><if>if<condition>(<expr><name>maxcombo</name> <operator>&gt;</operator> <name><name>rankingCombo</name><index>[<expr><name>goaltype</name></expr>]</index><index>[<expr><name>i</name></expr>]</index></name></expr>)</condition> <block>{<block_content>
				<return>return <expr><name>i</name></expr>;</return>
			</block_content>}</block></if> <if type="elseif">else if <condition>(<expr><operator>(</operator><name>maxcombo</name> <operator>==</operator> <name><name>rankingCombo</name><index>[<expr><name>goaltype</name></expr>]</index><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator> <operator>&amp;&amp;</operator> <operator>(</operator><name>time</name> <operator>&gt;=</operator> <literal type="number">0</literal><operator>)</operator> <operator>&amp;&amp;</operator>
					<operator>(</operator><operator>(</operator><name>time</name> <operator>&lt;</operator> <name><name>rankingTime</name><index>[<expr><name>goaltype</name></expr>]</index><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator> <operator>||</operator> <operator>(</operator><name><name>rankingTime</name><index>[<expr><name>goaltype</name></expr>]</index><index>[<expr><name>i</name></expr>]</index></name> <operator>==</operator> <operator>-</operator><literal type="number">1</literal><operator>)</operator><operator>)</operator></expr>)</condition> <block>{<block_content>
				<return>return <expr><name>i</name></expr>;</return>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>

		<return>return <expr><operator>-</operator><literal type="number">1</literal></expr>;</return>
	</block_content>}</block></function>
</unit>
