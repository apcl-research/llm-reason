<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/31464096.java">    <function><type><specifier>public</specifier> <name>String</name></type> <name>getToken</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>maxNumWhiteSpaceChars</name></decl></parameter>)</parameter_list> <block>{<block_content>
	<expr_stmt><expr><name>lastPosition</name> <operator>=</operator> <name>position</name></expr>;</expr_stmt>

	<try>try <block>{<block_content>
	    <decl_stmt><decl><type><name>RE</name></type> <name>expression</name> <init>= <expr><operator>new</operator> <call><name>RE</name><argument_list>(<argument><expr><literal type="string">"\\S+"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	    <decl_stmt><decl><type><name>REMatch</name></type> <name>match</name> <init>= <expr><call><name><name>expression</name><operator>.</operator><name>getMatch</name></name><argument_list>(<argument><expr><name>source</name></expr></argument>, <argument><expr><name>position</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	    <if_stmt><if>if <condition>(<expr><call><name><name>match</name><operator>.</operator><name>getStartIndex</name></name><argument_list>()</argument_list></call> <operator>&lt;=</operator> <name>position</name> <operator>+</operator> <name>maxNumWhiteSpaceChars</name></expr>)</condition>
	    <block>{<block_content>
		<expr_stmt><expr><name>position</name> <operator>=</operator> <call><name><name>match</name><operator>.</operator><name>getEndIndex</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><call><name><name>match</name><operator>.</operator><name>toString</name></name><argument_list>()</argument_list></call></expr>;</return>
	    </block_content>}</block></if>
	    <else>else<block type="pseudo"><block_content> <return>return <expr><literal type="string">""</literal></expr>;</return></block_content></block></else></if_stmt>
	</block_content>}</block>
	<catch>catch <parameter_list>(<parameter><decl><type><name>Exception</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content> <return>return <expr><literal type="null">null</literal></expr>;</return> </block_content>}</block></catch></try>
    </block_content>}</block></function>
</unit>
