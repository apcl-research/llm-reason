<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/18738891.java">	<function><type><specifier>public</specifier> <name>FieldDeclaration</name></type> <name>createField</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>type</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>name</name></decl></parameter>, <parameter><decl><type><name>Expression</name></type> <name>initializer</name></decl></parameter>, <parameter><decl><type><name>ModifierKeyword</name><modifier>...</modifier></type> <name>modifiers</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<decl_stmt><decl><type><specifier>final</specifier> <name>VariableDeclarationFragment</name></type> <name>vars</name> <init>= <expr><call><name><name>ast</name><operator>.</operator><name>newVariableDeclarationFragment</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>vars</name><operator>.</operator><name>setName</name></name><argument_list>(<argument><expr><call><name><name>ast</name><operator>.</operator><name>newSimpleName</name></name><argument_list>(<argument><expr><name>name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>vars</name><operator>.</operator><name>setInitializer</name></name><argument_list>(<argument><expr><name>initializer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><specifier>final</specifier> <name>FieldDeclaration</name></type> <name>var</name> <init>= <expr><call><name><name>ast</name><operator>.</operator><name>newFieldDeclaration</name></name><argument_list>(<argument><expr><name>vars</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>var</name><operator>.</operator><name>setType</name></name><argument_list>(<argument><expr><call><name><name>ast</name><operator>.</operator><name>newSimpleType</name></name><argument_list>(<argument><expr><call><name><name>ast</name><operator>.</operator><name>newName</name></name><argument_list>(<argument><expr><name>type</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name>setModifiers</name><argument_list>(<argument><expr><call><name><name>var</name><operator>.</operator><name>modifiers</name></name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><name>modifiers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><name>var</name></expr>;</return>
	</block_content>}</block></function>
</unit>
