<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/50582983.java">    <function><type><specifier>public</specifier> <name>double</name></type> <name>getTotalPrice</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>SQLException</name></expr></argument></throws> <block>{<block_content>
        <decl_stmt><decl><type><name><name>Object</name><index>[]</index></name></type> <name>items</name> <init>= <expr><call><name>getItems</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name>double</name></type> <name>price</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>

        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name><init>=<expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name><operator>&lt;</operator><name><name>items</name><operator>.</operator><name>length</name></name></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control><block type="pseudo"><block_content>
            <expr_stmt><expr><name>price</name> <operator>+=</operator> <operator>(</operator><operator>(</operator><name>Item</name><operator>)</operator><name><name>items</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator><operator>.</operator><call><name>getPrice</name><argument_list>()</argument_list></call> <operator>*</operator> <operator>(</operator><operator>(</operator><name>Item</name><operator>)</operator><name><name>items</name><index>[<expr><name>i</name></expr>]</index></name><operator>)</operator><operator>.</operator><call><name>getCount</name><argument_list>()</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <return>return <expr><call><name><name>Math</name><operator>.</operator><name>ceil</name></name><argument_list>(<argument><expr><name>price</name> <operator>*</operator> <literal type="number">100</literal></expr></argument>)</argument_list></call> <operator>/</operator> <literal type="number">100d</literal></expr>;</return>
    </block_content>}</block></function>
</unit>
