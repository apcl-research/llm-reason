<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/140026.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>checkIncludeCycles</name><parameter_list>()</parameter_list> <throws>throws <argument><expr><name>IncorrectElementException</name></expr></argument></throws> <block>{<block_content>
		<decl_stmt><decl><type><name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Vector</name></name></type> <name>nodes</name> <init>=  <expr><call><name>createNodeGraph</name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<comment type="line">//Debug.defaultPrintln(this,"size:" + nodes.size());</comment>
		<for>for <control>(<init><decl><type><name>Iterator</name></type> <name>i</name> <init>= <expr><call><name><name>nodes</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</init> <condition><expr><call><name><name>i</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>;</condition><incr/>)</control> <block>{<block_content>
			<decl_stmt><decl><type><name>GraphNode</name></type> <name>node</name> <init>= <expr><operator>(</operator><name>GraphNode</name><operator>)</operator><call><name><name>i</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<decl_stmt><decl><type><name>String</name></type> <name>inc</name> <init>= <expr><call><name>inclusionLoopFrom</name><argument_list>(<argument><expr><name>node</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if_stmt><if>if <condition>(<expr><name>inc</name> <operator>!=</operator> <literal type="null">null</literal></expr>)</condition> <block>{<block_content>
				<throw>throw <expr><operator>new</operator> <call><name>IncorrectElementException</name><argument_list>(<argument><expr><literal type="string">" includes inclusion loop "</literal> <operator>+</operator> <name>inc</name></expr></argument>)</argument_list></call></expr>;</throw>
			</block_content>}</block></if></if_stmt>
		</block_content>}</block></for>
	</block_content>}</block></function>
</unit>
