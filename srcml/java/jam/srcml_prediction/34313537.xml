<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/16582996.java">	<function><type><specifier>private</specifier> <name>String</name></type> <name>getNextLine</name><parameter_list>(<parameter><decl><type><name>RandomAccessFile</name></type> <name>_raf</name></decl></parameter>)</parameter_list> <throws>throws <argument><expr><name>IOException</name></expr></argument></throws> <block>{<block_content>
		<decl_stmt><decl><type><name>String</name></type> <name>s</name> <init>= <expr><call><name><name>_raf</name><operator>.</operator><name>readLine</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if_stmt><if>if <condition>(<expr><name>s</name><operator>==</operator><literal type="null">null</literal></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="null">null</literal></expr>;</return></block_content></block></if></if_stmt>
		<expr_stmt><expr><name>s</name> <operator>=</operator> <call><name><name>s</name><operator>.</operator><name>replace</name></name><argument_list>(<argument><expr><literal type="char">'\t'</literal></expr></argument>, <argument><expr><literal type="char">' '</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>s</name><operator>=</operator><call><name><name>s</name><operator>.</operator><name>trim</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name>s</name><operator>=</operator><call><name><name>s</name><operator>.</operator><name>replaceAll</name></name><argument_list>(<argument><expr><literal type="string">"\n\r"</literal></expr></argument>, <argument><expr><literal type="string">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<while>while <condition>(<expr><call><name><name>s</name><operator>.</operator><name>indexOf</name></name><argument_list>(<argument><expr><literal type="string">"  "</literal></expr></argument>)</argument_list></call><operator>&gt;=</operator><literal type="number">0</literal></expr>)</condition><block>{<block_content>
			<expr_stmt><expr><name>s</name> <operator>=</operator> <call><name><name>s</name><operator>.</operator><name>replaceAll</name></name><argument_list>(<argument><expr><literal type="string">"  "</literal></expr></argument>, <argument><expr><literal type="string">" "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></while>
		<return>return <expr><name>s</name></expr>;</return>
	</block_content>}</block></function>
</unit>
