<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/19492983.java">	<function><type><specifier>public</specifier> <name>void</name></type> <name>fireVariableListener</name><parameter_list>(<parameter><decl><type><name>VariableChangedEvent</name></type> <name>e</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<assert>assert <expr><name>e</name> <operator>!=</operator> <literal type="null">null</literal></expr>;</assert>
		<comment type="line">// put them in a temporary array to avoid concurrent access</comment>
		<decl_stmt><decl><type><name><name>IVariableListener</name><index>[]</index></name></type> <name>copy</name> <init>= <expr><call><name><name>variableListeners</name>
				<operator>.</operator><name>toArray</name></name><argument_list>(<argument><expr><operator>new</operator> <name><name>IVariableListener</name><index>[<expr><call><name><name>variableListeners</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<for>for <control>(<init><decl><type><name>IVariableListener</name></type> <name>listener</name> <range>: <expr><name>copy</name></expr></range></decl></init>)</control> <block>{<block_content>
			<try>try <block>{<block_content>
				<expr_stmt><expr><call><name><name>listener</name><operator>.</operator><name>variableChanged</name></name><argument_list>(<argument><expr><name>e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block> <catch>catch <parameter_list>(<parameter><decl><type><name>Throwable</name></type> <name>t</name></decl></parameter>)</parameter_list> <block>{<block_content>
				<expr_stmt><expr><call><name><name>logger</name><operator>.</operator><name>log</name></name><argument_list>(<argument><expr><name><name>Level</name><operator>.</operator><name>SEVERE</name></name></expr></argument>, <argument><expr><literal type="string">"Error notifying listeners"</literal></expr></argument>, <argument><expr><name>t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			</block_content>}</block></catch></try>
		</block_content>}</block></for>
	</block_content>}</block></function>
</unit>
