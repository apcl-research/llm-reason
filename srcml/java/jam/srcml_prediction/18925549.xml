<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/19272483.java">  <function><type><specifier>protected</specifier> <name>String</name></type> <name>findPattern</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>userPattern</name></decl></parameter>)</parameter_list> <block>{<block_content>
    
    <if_stmt><if>if <condition>(<expr><name>userPattern</name> <operator>!=</operator> <literal type="null">null</literal> <operator>&amp;&amp;</operator> <call><name><name>userPattern</name><operator>.</operator><name>length</name></name><argument_list>()</argument_list></call> <operator>&gt;</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content>
      <return>return <expr><name>userPattern</name></expr>;</return></block_content></block></if></if_stmt>
      
    <decl_stmt><decl><type><name>Iterator</name></type> <name>it</name> <init>= <expr><call><name><name>patterns</name><operator>.</operator><name>iterator</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

    <while>while <condition>(<expr><call><name><name>it</name><operator>.</operator><name>hasNext</name></name><argument_list>()</argument_list></call></expr>)</condition> <block>{<block_content>
      <decl_stmt><decl><type><name>Pattern</name></type> <name>p</name> <init>= <expr><operator>(</operator><name>Pattern</name><operator>)</operator> <call><name><name>it</name><operator>.</operator><name>next</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>

      <if_stmt><if>if <condition>(<expr><call><name><name>locale</name><operator>.</operator><name>getLanguage</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>equals</name><argument_list>(<argument><expr><call><name><name>p</name><operator>.</operator><name>getLanguage</name></name><argument_list>()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block>{<block_content>
        <return>return <expr><call><name><name>p</name><operator>.</operator><name>getPattern</name></name><argument_list>()</argument_list></call></expr>;</return>
      </block_content>}</block></if></if_stmt>
    </block_content>}</block></while>

    <return>return <expr><call><name><name>this</name><operator>.</operator><name>getPattern</name></name><argument_list>()</argument_list></call></expr>;</return>
  </block_content>}</block></function>
</unit>
