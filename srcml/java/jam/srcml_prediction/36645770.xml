<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/44152983.java">	<function><type><specifier>public</specifier> <name>int</name></type> <name>nextval</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>key</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<decl_stmt><decl><type><name>Sequence</name></type> <name>seq</name> <init>= <expr><literal type="null">null</literal></expr></init></decl>;</decl_stmt>

		<comment type="line">// If the sequence exists, get it; otherwise, create it with a value 0</comment>
		<if_stmt><if>if <condition>(<expr><call><name><name>m_sequences</name><operator>.</operator><name>containsKey</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><name>seq</name> <operator>=</operator> <call><name><name>m_sequences</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
		<else>else <block>{<block_content>
			<expr_stmt><expr><name>seq</name> <operator>=</operator> <operator>new</operator> <call><name>Sequence</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name>m_sequences</name><operator>.</operator><name>put</name></name><argument_list>(<argument><expr><name>key</name></expr></argument>, <argument><expr><name>seq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		</block_content>}</block></else></if_stmt>

		<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>seq</name><operator>.</operator><name>registered</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content>
			<expr_stmt><expr><call><name><name>System</name><operator>.</operator><name>err</name><operator>.</operator><name>println</name></name><argument_list>(<argument><expr><literal type="string">"Warning: sequence key '"</literal> <operator>+</operator> <name>key</name> <operator>+</operator> <literal type="string">"' being used without registration"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

		<comment type="line">// increment the number, then return it; the sequence begins at '1'</comment>
		<return>return <expr><call><name><name>seq</name><operator>.</operator><name>nextval</name></name><argument_list>()</argument_list></call></expr>;</return>
	</block_content>}</block></function>
</unit>
