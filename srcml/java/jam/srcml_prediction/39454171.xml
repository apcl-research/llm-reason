<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/50802783.java">    <function><type><specifier>public</specifier> <name>int</name></type> <name>getIndex</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name>double</name></type> <name>retentionTime</name></decl></parameter>, <parameter><decl><type><specifier>final</specifier> <name>double</name></type> <name>intensity</name></decl></parameter>)</parameter_list> <block>{<block_content>

        <decl_stmt><decl><type><name>int</name></type> <name>index</name> <init>= <expr><operator>-</operator><literal type="number">1</literal></expr></init></decl>;</decl_stmt>
        <for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init>
             <condition><expr><name>index</name> <operator>&lt;</operator> <literal type="number">0</literal> <operator>&amp;&amp;</operator> <name>i</name> <operator>&lt;</operator> <name>processedScans</name></expr>;</condition>
             <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>

            <if_stmt><if>if <condition>(<expr><call><name><name>Math</name><operator>.</operator><name>abs</name></name><argument_list>(<argument><expr><name>retentionTime</name> <operator>-</operator> <name><name>rtValues</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <name>EPSILON</name> <operator>&amp;&amp;</operator>
                <call><name><name>Math</name><operator>.</operator><name>abs</name></name><argument_list>(<argument><expr><name>intensity</name> <operator>-</operator> <name><name>intensityValues</name><index>[<expr><name>i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <name>EPSILON</name></expr>)</condition> <block>{<block_content>

                <expr_stmt><expr><name>index</name> <operator>=</operator> <name>i</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></for>

        <return>return <expr><name>index</name></expr>;</return>
    </block_content>}</block></function>
</unit>
