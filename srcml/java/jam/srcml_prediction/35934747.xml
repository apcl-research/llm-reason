<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/46884815.java">    <function><type><specifier>private</specifier> <name>void</name></type> <name>nextTurn</name><parameter_list>()</parameter_list> <block>{<block_content>
        <decl_stmt><decl><type><name>CompoundEdit</name></type> <name>e</name> <init>= <expr><operator>new</operator> <call><name>CompoundEdit</name><argument_list>(<argument><expr><call><name>getGame</name><argument_list>()</argument_list></call></expr></argument>, <argument><expr><literal type="boolean">true</literal></expr></argument>, <argument><expr><literal type="string">"Advance to next turn"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="line">//Do this if the method is called "strangely"</comment>
        <expr_stmt><expr><call><name><name>step</name><operator>.</operator><name>setValue</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        <if_stmt><if>if<condition>(<expr><call><name><name>phase</name><operator>.</operator><name>getValue</name></name><argument_list>()</argument_list></call><operator>.</operator><call><name>intValue</name><argument_list>()</argument_list></call> <operator>!=</operator> <literal type="number">0</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><call><name><name>phase</name><operator>.</operator><name>setValue</name></name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt><expr><call><name>getGame</name><argument_list>()</argument_list></call><operator>.</operator><call><name>getTurnStructure</name><argument_list>()</argument_list></call><operator>.</operator><call><name>nextTurn</name><argument_list>()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name>e</name><operator>.</operator><name>end</name></name><argument_list>()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></function>
</unit>
