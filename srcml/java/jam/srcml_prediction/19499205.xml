<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/19494815.java">	<function><type><specifier>protected</specifier> <name>Element</name></type> <name>addEventElement</name><parameter_list>(<parameter><decl><type><name>Element</name></type> <name>parent</name></decl></parameter>, <parameter><decl><type><name>String</name></type> <name>eventLabel</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<assert>assert <expr><call><name><name>parent</name><operator>.</operator><name>getType</name></name><argument_list>()</argument_list></call> <operator>==</operator> <name><name>IMachineRoot</name><operator>.</operator><name>ELEMENT_TYPE</name></name></expr>;</assert>
		<decl_stmt><decl><type><specifier>final</specifier> <name>Element</name></type> <name>result</name> <init>= <expr><operator>new</operator> <call><name>Element</name><argument_list>(<argument><expr><name><name>IEvent</name><operator>.</operator><name>ELEMENT_TYPE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>addAttribute</name></name><argument_list>(<argument><expr><call><name><name>LABEL_ATTRIBUTE</name><operator>.</operator><name>makeValue</name></name><argument_list>(<argument><expr><name>eventLabel</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>addAttribute</name></name><argument_list>(<argument><expr><call><name><name>EXTENDED_ATTRIBUTE</name><operator>.</operator><name>makeValue</name></name><argument_list>(<argument><expr><literal type="boolean">false</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><specifier>final</specifier> <name>int</name></type> <name>nine</name> <init>= <expr><call><name><name>ORDINARY</name><operator>.</operator><name>getCode</name></name><argument_list>()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>result</name><operator>.</operator><name>addAttribute</name></name><argument_list>(<argument><expr><call><name><name>CONVERGENCE_ATTRIBUTE</name><operator>.</operator><name>makeValue</name></name><argument_list>(<argument><expr><name>eight</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name>parent</name><operator>.</operator><name>addChild</name></name><argument_list>(<argument><expr><name>result</name></expr></argument>, <argument><expr><literal type="null">null</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return>return <expr><name>result</name></expr>;</return>
	</block_content>}</block></function>
</unit>
