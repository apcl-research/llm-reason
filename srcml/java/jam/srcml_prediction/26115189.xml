<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/442327.java">	<function><type><specifier>protected</specifier> <name>double</name></type> <name>getEntropy</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>numberOfPostives</name></decl></parameter>, <parameter><decl><type><name>int</name></type> <name>numerberOfNegatives</name></decl></parameter>)</parameter_list> <block>{<block_content>

		<if_stmt><if>if <condition>(<expr><name>numberOfPostives</name> <operator>==</operator> <literal type="number">0</literal> <operator>||</operator> <name>numerberOfNegatives</name> <operator>==</operator> <literal type="number">0</literal></expr>)</condition> <block>{<block_content>
			<return>return <expr><literal type="number">0</literal></expr>;</return>
		</block_content>}</block></if></if_stmt>

		<decl_stmt><decl><type><name>double</name></type> <name>positives</name> <init>= <expr><name>numberOfPostives</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>double</name></type> <name>negatives</name> <init>= <expr><name>numerberOfNegatives</name></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><name>double</name></type> <name>total</name> <init>= <expr><name>positives</name> <operator>+</operator> <name>negatives</name></expr></init></decl>;</decl_stmt>

		<return>return <expr><operator>-</operator><operator>(</operator><name>positives</name> <operator>/</operator> <name>total</name><operator>)</operator> <operator>*</operator> <operator>(</operator><call><name>log2</name><argument_list>(<argument><expr><name>positives</name> <operator>/</operator> <name>total</name></expr></argument>)</argument_list></call><operator>)</operator> <operator>-</operator> <operator>(</operator><name>negatives</name> <operator>/</operator> <name>total</name><operator>)</operator> <operator>*</operator> <operator>(</operator><call><name>log2</name><argument_list>(<argument><expr><name>negatives</name> <operator>/</operator> <name>total</name></expr></argument>)</argument_list></call><operator>)</operator></expr>;</return>

	</block_content>}</block></function>
</unit>
