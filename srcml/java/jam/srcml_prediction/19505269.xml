<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="/home/cmc/dev/projects/datasets/13490547.java">	<function><type><specifier>public</specifier> <name>boolean</name></type> <name>equalsWithDifferentVariables</name><parameter_list>(<parameter><decl><type><name>S</name></type> <name>literal</name></decl></parameter>, <parameter><decl><type><name><name>HashMap</name><argument_list type="generic">&lt;<argument><name>SimpleTerm</name></argument>, <argument><name>SimpleTerm</name></argument>&gt;</argument_list></name></type> <name>map</name></decl></parameter>)</parameter_list> <block>{<block_content>
		<if_stmt><if>if <condition>(<expr><call><name><name>terms</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call> <operator>!=</operator> <call><name><name>literal</name><operator>.</operator><name>terms</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if>
		<else>else <block>{<block_content>
			<for>for <control>(<init><decl><type><name>int</name></type> <name>i</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</init> <condition><expr><name>i</name> <operator>&lt;</operator> <call><name><name>terms</name><operator>.</operator><name>size</name></name><argument_list>()</argument_list></call></expr>;</condition> <incr><expr><name>i</name><operator>++</operator></expr></incr>)</control> <block>{<block_content>
				<decl_stmt><decl><type><name>T</name></type> <name>term1</name> <init>= <expr><call><name><name>terms</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name>Term</name></type> <name>term2</name> <init>= <expr><call><name><name>literal</name><operator>.</operator><name>terms</name><operator>.</operator><name>get</name></name><argument_list>(<argument><expr><name>i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>term1</name><operator>.</operator><name>equalsWithDifferentVariables</name></name><argument_list>(<argument><expr><name>term2</name></expr></argument>, <argument><expr><name>map</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="boolean">false</literal></expr>;</return></block_content></block></if></if_stmt>
			</block_content>}</block></for>
			<return>return <expr><literal type="boolean">true</literal></expr>;</return>
		</block_content>}</block></else></if_stmt>
	</block_content>}</block></function>
</unit>
